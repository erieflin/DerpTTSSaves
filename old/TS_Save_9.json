{
  "SaveName": "MTG 8 Scripted",
  "GameMode": "MTG 8 Scripted",
  "Date": "4/22/2017 9:22:19 AM",
  "Table": "Table_Custom",
  "TableURL": "http://i.imgur.com/XvjxrgZ.png",
  "Sky": "Sky_Museum",
  "Note": "Press the 'Mulligan' button to\ndraw your opening hand OR mulligan.\n\nWhen in the Untap Step, press 'Untap'\nto untap all of your permanents.\n\nWhen in the Draw Step, press 'Draw'\nto draw 1 card to your hand per click.\n\nPress the 'Pass' button to pass\nthe turn between players.\n\nClick counters to bring up +/- options.",
  "Rules": "",
  "PlayerTurn": "",
  "LuaScript": "function onload()\n    whiteboard = getObjectFromGUID('fd6d1e')\n    redboard = getObjectFromGUID('ac85bb')\n    orangeboard = getObjectFromGUID('0a8b1f')\n    yellowboard = getObjectFromGUID('fee590')\n    greenboard = getObjectFromGUID('fa2540')\n    blueboard = getObjectFromGUID('910ce3')\n    purpleboard = getObjectFromGUID('77fe40')\n    pinkboard = getObjectFromGUID('a0731c')\n    whitelife = 40\n    redlife = 40\n    orangelife = 40\n    yellowlife = 40\n    greenlife = 40\n    bluelife = 40\n    purplelife = 40\n    pinklife = 40\n    boards = {'fd6d1e','ac85bb','0a8b1f','fee590','fa2540','910ce3','77fe40','a0731c'} -- From White to Pink\n    spots = {'d24be7', '1bf5b4', '5c0657', 'ea902d', '41b9ea', 'c807fd', 'df34fc', 'b09c9f'}\n    colors = {'White','Red','Orange','Yellow','Green','Blue','Purple','Pink'}\n    handsizetext = {'dd4711','9606a2','075074','02419e','c66e04','350dd7','f5c664','82bc68'} -- White to Pink\n    untapzones = {'49e1a2','24c60e','407495','a9fb79','698cf2','002040','528f38','95665f'} -- White to Pink\n    deckzones = {'70b368','21753e','96f290','acc668','ec567c','4a7c30','94eb62','c8c327'} -- White to Pink\n    handzones = {'04f3c1','9ae9a7','fdd9e6','eafe93','3cff9a','098db4','f57821','7174a5'} -- White to Pink\n    stepbuttons = { -- Red to Pink\n        {'0484cf','f4b9d9','99e85d','545192','ff17f5','273ff9','03c35d','b7cb65','cdeb32','543b56','b226b9','79c6a7'}, -- Untap to Pass\n        {'8d94da','9f768c','3e696c','743e7c','2fffeb','cc6b12','35261f','7d765b','b444c5','e144b4','4cf232','a63c58'}, -- Untap to Pass\n        {'463794','78c91a','b7cf67','83a732','14446a','234de4','466ab4','bc2394','83c92f','deba78','fd4bec','3f7e80'}, -- Untap to Pass\n        {'73f1fc','26f4b5','695153','21a49e','bb0981','f94656','4cae27','9737a8','0cf3bd','3da080','04f5cf','639758'}, -- Untap to Pass\n        {'5098b8','ea8b83','a3029f','d16331','d185ce','4b4375','17e1de','907ad8','6e25d7','dc423a','b81974','e9824b'}, -- Untap to Pass\n        {'aa3fbd','bf0de1','0cdf48','1af23c','af228f','3858b9','fad367','0b85e6','03044f','b77d7e','bd439f','171f5d'}, -- Untap to Pass\n        {'9ffd58','26cc53','584641','8a5f5c','32e7a3','4e8ba5','1d6622','657c36','7572ff','584490','35968f','0ba235'}, -- Untap to Pass\n        {'609c6d','fbfe05','48ae84','b20191','5d72f5','280831','dc2fd6','e06629','6c0907','f26ce1','caa425','012ed5'} -- Untap to Pass\n    }\n    --healthtext = {'7c193a','087896','718363','6856ac','844a31','0461cf','960355','9a0784'}\n    --objwhite = {'7deb8e','844309','2e1487','e53ab1','497be1','115400','4fa629','81fb4a','0484cf','f4b9d9','99e85d','545192','ff17f5','273ff9','03c35d','b7cb65','cdeb32','543b56','b226b9','79c6a7'}\n    objwhite = {'b53ceb'}\n    activeplayerboard = getObjectFromGUID('713346')\n    key = getObjectFromGUID('2d7911')\n    currentplayer = 1\n    currentcolor = 'White'\n    currentstep = 0\n    whiteseated = 0\n    redseated = 0\n    orangeseated = 0\n    yellowseated = 0\n    greenseated = 0\n    blueseated = 0\n    purpleseated = 0\n    pinkseated = 0\n    resetSteps()\n\n    --[[local currzone = getObjectFromGUID('c8c327') --Moving Scripting Zones Up\n    local currpos = currzone.getPosition()\n    currzone.setPosition({currpos.x,currpos.y+0.9,currpos.z})\n    currzone = getObjectFromGUID('95665f')\n    currpos = currzone.getPosition()\n    currzone.setPosition({currpos.x,currpos.y+0.9,currpos.z})\n    currzone = getObjectFromGUID('7174a5')\n    currpos = currzone.getPosition()\n    currzone.setPosition({currpos.x,currpos.y+0.9,currpos.z})--]]\n\n    --[[local refobj = getObjectFromGUID('f4b9d9') --Moving Untap Steps\n    local refpos = refobj.getPosition()\n    local flipobj = getObjectFromGUID(stepswhite[1])\n    local fliprot = flipobj.getRotation()\n    local flippos = flipobj.getPosition()\n    flipobj.setRotation({180,fliprot.y,fliprot.z})\n    local fliprot2 = flipobj.getRotation()\n    flipobj.setRotation({fliprot2.x,fliprot.y,fliprot2.z})\n    flipobj.setPosition({flippos.x,refpos.y,flippos.z})\n    flipobj = getObjectFromGUID(stepsred[1])\n    fliprot = flipobj.getRotation()\n    flippos = flipobj.getPosition()\n    flipobj.setRotation({180,fliprot.y,fliprot.z})\n    fliprot2 = flipobj.getRotation()\n    flipobj.setRotation({fliprot2.x,fliprot.y,fliprot2.z})\n    flipobj.setPosition({flippos.x,refpos.y,flippos.z})\n    flipobj = getObjectFromGUID(stepsorange[1])\n    fliprot = flipobj.getRotation()\n    flippos = flipobj.getPosition()\n    flipobj.setRotation({180,fliprot.y,fliprot.z})\n    fliprot2 = flipobj.getRotation()\n    flipobj.setRotation({fliprot2.x,fliprot.y,fliprot2.z})\n    flipobj.setPosition({flippos.x,refpos.y,flippos.z})\n    flipobj = getObjectFromGUID(stepsyellow[1])\n    fliprot = flipobj.getRotation()\n    flippos = flipobj.getPosition()\n    flipobj.setRotation({180,fliprot.y,fliprot.z})\n    fliprot2 = flipobj.getRotation()\n    flipobj.setRotation({fliprot2.x,fliprot.y,fliprot2.z})\n    flipobj.setPosition({flippos.x,refpos.y,flippos.z})\n    flipobj = getObjectFromGUID(stepsgreen[1])\n    fliprot = flipobj.getRotation()\n    flippos = flipobj.getPosition()\n    flipobj.setRotation({180,fliprot.y,fliprot.z})\n    fliprot2 = flipobj.getRotation()\n    flipobj.setRotation({fliprot2.x,fliprot.y,fliprot2.z})\n    flipobj.setPosition({flippos.x,refpos.y,flippos.z})\n    flipobj = getObjectFromGUID(stepsblue[1])\n    fliprot = flipobj.getRotation()\n    flippos = flipobj.getPosition()\n    flipobj.setRotation({180,fliprot.y,fliprot.z})\n    fliprot2 = flipobj.getRotation()\n    flipobj.setRotation({fliprot2.x,fliprot.y,fliprot2.z})\n    flipobj.setPosition({flippos.x,refpos.y,flippos.z})\n    flipobj = getObjectFromGUID(stepspurple[1])\n    fliprot = flipobj.getRotation()\n    flippos = flipobj.getPosition()\n    flipobj.setRotation({180,fliprot.y,fliprot.z})\n    fliprot2 = flipobj.getRotation()\n    flipobj.setRotation({fliprot2.x,fliprot.y,fliprot2.z})\n    flipobj.setPosition({flippos.x,refpos.y,flippos.z})\n    flipobj = getObjectFromGUID(stepspink[1])\n    fliprot = flipobj.getRotation()\n    flippos = flipobj.getPosition()\n    flipobj.setRotation({180,fliprot.y,fliprot.z})\n    fliprot2 = flipobj.getRotation()\n    flipobj.setRotation({fliprot2.x,fliprot.y,fliprot2.z})\n    flipobj.setPosition({flippos.x,refpos.y,flippos.z})--]]\n\n    --[[for i, v in ipairs(healthtext) do --Moving Health Text\n        local object = getObjectFromGUID(healthtext[i])\n        local objpos = object.getPosition()\n        object.setPosition({objpos.x,objpos.y+0.01,objpos.z})\n    end--]]\n\n    --[[local objectreplace = getObjectFromGUID(boards[currentplayer]) --Moving Active Board\n    local positionreplace = objectreplace.getPosition()\n    local rotationreplace = objectreplace.getRotation()\n    activeplayerboard.setRotation(rotationreplace)\n    activeplayerboard.setPosition({positionreplace.x,positionreplace.y+0.01,positionreplace.z})--]]\n\n    --[[local whiteboard = getObjectFromGUID('fd6d1e') --Copying Piece to 2 Boards\n    local redboard = getObjectFromGUID('77fe40')\n    local boardpos = whiteboard.getPosition()\n    local redboardpos = redboard.getPosition()\n    for i, v in ipairs(objwhite) do\n        local moveobj = getObjectFromGUID(objwhite[i])\n        local moverot = moveobj.getRotation()\n        local movepos = moveobj.getPosition()\n        local diffx = movepos.x - boardpos.x\n        local diffy = movepos.y - boardpos.y\n        local diffz = movepos.z - boardpos.z\n        local params = {}\n        params.position = {0,3,0}\n        newobj = moveobj.clone(params)\n        newobj.setPosition({redboardpos.x-diffz,redboardpos.y+diffy,redboardpos.z+diffx})\n        newobj.setRotation({moverot.x,moverot.y-90,moverot.z})\n    end\n\n    local whiteboard = getObjectFromGUID('fd6d1e')\n    local redboard = getObjectFromGUID('a0731c')\n    local boardpos = whiteboard.getPosition()\n    local redboardpos = redboard.getPosition()\n    for i, v in ipairs(objwhite) do\n        local moveobj = getObjectFromGUID(objwhite[i])\n        local moverot = moveobj.getRotation()\n        local movepos = moveobj.getPosition()\n        local diffx = movepos.x - boardpos.x\n        local diffy = movepos.y - boardpos.y\n        local diffz = movepos.z - boardpos.z\n        local params = {}\n        params.position = {0,3,0}\n        newobj = moveobj.clone(params)\n        newobj.setPosition({redboardpos.x-diffz,redboardpos.y+diffy,redboardpos.z+diffx})\n        newobj.setRotation({moverot.x,moverot.y-90,moverot.z})\n    end--]]\n\n    --[[local currstep = getObjectFromGUID('f4b9d9') --Moving Steps. Starts with Upkeep\n    local currpos = currstep.getPosition()\n    local nextstep = getObjectFromGUID('f4b9d9')\n    local nextpos = nextstep.getPosition()\n    nextstep.setPosition({nextpos.x,currpos.y,nextpos.z})\n    nextstep = getObjectFromGUID('99e85d')\n    nextpos = nextstep.getPosition()\n    nextstep.setPosition({nextpos.x,currpos.y,nextpos.z})\n    nextstep = getObjectFromGUID('545192')\n    nextpos = nextstep.getPosition()\n    nextstep.setPosition({nextpos.x,currpos.y,nextpos.z})\n    nextstep = getObjectFromGUID('ff17f5')\n    nextpos = nextstep.getPosition()\n    nextstep.setPosition({nextpos.x,currpos.y,nextpos.z})\n    nextstep = getObjectFromGUID('273ff9')\n    nextpos = nextstep.getPosition()\n    nextstep.setPosition({nextpos.x,currpos.y,nextpos.z})\n    nextstep = getObjectFromGUID('03c35d')\n    nextpos = nextstep.getPosition()\n    nextstep.setPosition({nextpos.x,currpos.y,nextpos.z})\n    nextstep = getObjectFromGUID('b7cb65')\n    nextpos = nextstep.getPosition()\n    nextstep.setPosition({nextpos.x,currpos.y,nextpos.z})\n    nextstep = getObjectFromGUID('cdeb32')\n    nextpos = nextstep.getPosition()\n    nextstep.setPosition({nextpos.x,currpos.y,nextpos.z})\n    nextstep = getObjectFromGUID('543b56')\n    nextpos = nextstep.getPosition()\n    nextstep.setPosition({nextpos.x,currpos.y,nextpos.z})\n    nextstep = getObjectFromGUID('b226b9')\n    nextpos = nextstep.getPosition()\n    nextstep.setPosition({nextpos.x,currpos.y,nextpos.z})\n    nextstep = getObjectFromGUID('79c6a7')\n    nextpos = nextstep.getPosition()\n    nextstep.setPosition({nextpos.x,currpos.y,nextpos.z})--]]\n\n    --[[local currmana = getObjectFromGUID('7deb8e') --Moving Mana Symbols\n    local nextmana = getObjectFromGUID('844309')\n    local currpos = currmana.getPosition()\n    nextmana.setPosition({currpos.x+1.5,currpos.y,currpos.z})\n    currmana = nextmana\n    currpos = currmana.getPosition()\n    nextmana = getObjectFromGUID('2e1487')\n    nextmana.setPosition({currpos.x+1.5,currpos.y,currpos.z})\n    currmana = nextmana\n    currpos = currmana.getPosition()\n    nextmana = getObjectFromGUID('e53ab1')\n    nextmana.setPosition({currpos.x+1.5,currpos.y,currpos.z})\n    currmana = nextmana\n    currpos = currmana.getPosition()\n    nextmana = getObjectFromGUID('497be1')\n    nextmana.setPosition({currpos.x+1.5,currpos.y,currpos.z})\n    currmana = nextmana\n    currpos = currmana.getPosition()\n    nextmana = getObjectFromGUID('115400')\n    nextmana.setPosition({currpos.x+1.5,currpos.y,currpos.z})--]]\nend\n\nfunction update()\n    local health = getObjectFromGUID('7c193a')\n    health.TextTool.setValue(tostring(whitelife))\n    health = getObjectFromGUID('087896')\n    health.TextTool.setValue(tostring(redlife))\n    health = getObjectFromGUID('718363')\n    health.TextTool.setValue(tostring(orangelife))\n    health = getObjectFromGUID('6856ac')\n    health.TextTool.setValue(tostring(yellowlife))\n    health = getObjectFromGUID('844a31')\n    health.TextTool.setValue(tostring(greenlife))\n    health = getObjectFromGUID('0461cf')\n    health.TextTool.setValue(tostring(bluelife))\n    health = getObjectFromGUID('960355')\n    health.TextTool.setValue(tostring(purplelife))\n    health = getObjectFromGUID('9a0784')\n    health.TextTool.setValue(tostring(pinklife))\nend\n\nfunction onObjectEnterScriptingZone(zone, enter_object)\n    if enter_object.tag == 'Card' then\n        for i, v in ipairs(handzones) do\n            if zone.getGUID() == handzones[i] then\n                local cardcount = 1\n                local counttext = getObjectFromGUID(handsizetext[i])\n                local zoneobjects = zone.getObjects()\n                for j, k in ipairs(zoneobjects) do\n                    if k.tag == 'Card' then\n                        cardcount = cardcount + 1\n                    end\n                end\n                if cardcount == 1 then\n                    counttext.TextTool.setValue('1 Card in Hand')\n                else\n                    counttext.TextTool.setValue(cardcount..' Cards in Hand')\n                end\n            end\n        end\n    end\nend\n\nfunction onObjectLeaveScriptingZone(zone, leave_object)\n    if leave_object.tag == 'Card' then\n        for i, v in ipairs(handzones) do\n            if zone.getGUID() == handzones[i] then\n                local cardcount = 0\n                local counttext = getObjectFromGUID(handsizetext[i])\n                local zoneobjects = zone.getObjects()\n                for j, k in ipairs(zoneobjects) do\n                    if k.tag == 'Card' then\n                        cardcount = cardcount + 1\n                    end\n                end\n                if cardcount == 1 then\n                    counttext.TextTool.setValue('1 Card in Hand')\n                else\n                    counttext.TextTool.setValue(cardcount..' Cards in Hand')\n                end\n            end\n        end\n    end\nend\n\nfunction resetSteps()\n    for i, v in ipairs(colors) do\n        local referenceobject = getObjectFromGUID(stepbuttons[i][12])\n        local referenceposition = referenceobject.getPosition()\n        local referencerotation = referenceobject.getRotation()\n        for j, v in ipairs(stepbuttons[i]) do\n            local resetobject = getObjectFromGUID(stepbuttons[i][j])\n            local resetposition = resetobject.getPosition()\n            resetobject.setRotation(referencerotation)\n            resetobject.setPosition({resetposition.x,referenceposition.y,resetposition.z})\n        end\n    end\n    currentstep = 0\nend\n\nfunction untapSwap(me, player)\n    if player ~= currentcolor and player ~= \"Black\" then\n        return 1\n    end\n    if currentstep == 1 then\n        local zonetountap = getObjectFromGUID(untapzones[currentplayer])\n        local zoneobjects = zonetountap.getObjects()\n\n        for i, v in ipairs(zoneobjects) do\n            if v.tag == \"Card\" then\n                local referenceobject = getObjectFromGUID(boards[currentplayer])\n                local rotation = referenceobject.getRotation()\n                local vrotation = v.getRotation()\n                v.setRotationSmooth({vrotation.x,rotation.y,vrotation.z})\n            end\n        end\n    else\n        resetSteps()\n        for i, v in ipairs(colors) do\n            local referenceobject = getObjectFromGUID(stepbuttons[i][12])\n            local referencerotation = referenceobject.getRotation()\n            local stepobject = getObjectFromGUID(stepbuttons[i][1])\n            local steprotation = stepobject.getRotation()\n            stepobject.setRotation({180,steprotation.y,steprotation.z})\n            local stepposition = stepobject.getPosition()\n            stepobject.setPosition({stepposition.x,stepposition.y+0.2,stepposition.z})\n            steprotation = stepobject.getRotation()\n            stepobject.setRotation({steprotation.x,referencerotation.y,steprotation.z})\n        end\n        currentstep = 1\n    end\nend\n\nfunction upkeepSwap(me, player)\n    if player ~= currentcolor then\n        return 1\n    end\n    resetSteps()\n    for i, v in ipairs(colors) do\n        local referenceobject = getObjectFromGUID(stepbuttons[i][12])\n        local referencerotation = referenceobject.getRotation()\n        local stepobject = getObjectFromGUID(stepbuttons[i][2])\n        local steprotation = stepobject.getRotation()\n        stepobject.setRotation({180,steprotation.y,steprotation.z})\n        local stepposition = stepobject.getPosition()\n        stepobject.setPosition({stepposition.x,stepposition.y+0.2,stepposition.z})\n        steprotation = stepobject.getRotation()\n        stepobject.setRotation({steprotation.x,referencerotation.y,steprotation.z})\n    end\n    currentstep = 2\nend\n\nfunction drawSwap(me, player)\n    if player ~= currentcolor then\n        return 1\n    end\n    if currentstep == 3 then\n        local deckzone = getObjectFromGUID(deckzones[currentplayer])\n        local handzone = getObjectFromGUID(handzones[currentplayer])\n        local handposition = handzone.getPosition()\n        local zoneobjects = deckzone.getObjects()\n        for i, v in ipairs(zoneobjects) do\n            if v.tag == \"Card\" then\n               v.setPositionSmooth({handposition.x,2,handposition.z})\n            elseif v.tag == \"Deck\" then\n               v.dealToColor(1, currentcolor)\n            end\n        end\n    else\n        resetSteps()\n        for i, v in ipairs(colors) do\n            local referenceobject = getObjectFromGUID(stepbuttons[i][12])\n            local referencerotation = referenceobject.getRotation()\n            local stepobject = getObjectFromGUID(stepbuttons[i][3])\n            local steprotation = stepobject.getRotation()\n            stepobject.setRotation({180,steprotation.y,steprotation.z})\n            local stepposition = stepobject.getPosition()\n            stepobject.setPosition({stepposition.x,stepposition.y+0.2,stepposition.z})\n            steprotation = stepobject.getRotation()\n            stepobject.setRotation({steprotation.x,referencerotation.y,steprotation.z})\n        end\n        currentstep = 3\n    end\nend\n\nfunction main1Swap(me, player)\n    if player ~= currentcolor then\n        return 1\n    end\n    resetSteps()\n    for i, v in ipairs(colors) do\n        local referenceobject = getObjectFromGUID(stepbuttons[i][12])\n        local referencerotation = referenceobject.getRotation()\n        local stepobject = getObjectFromGUID(stepbuttons[i][4])\n        local steprotation = stepobject.getRotation()\n        stepobject.setRotation({180,steprotation.y,steprotation.z})\n        local stepposition = stepobject.getPosition()\n        stepobject.setPosition({stepposition.x,stepposition.y+0.2,stepposition.z})\n        steprotation = stepobject.getRotation()\n        stepobject.setRotation({steprotation.x,referencerotation.y,steprotation.z})\n    end\n    currentstep = 4\nend\n\nfunction combatStartSwap(me, player)\n    if player ~= currentcolor then\n        return 1\n    end\n    resetSteps()\n    for i, v in ipairs(colors) do\n        local referenceobject = getObjectFromGUID(stepbuttons[i][12])\n        local referencerotation = referenceobject.getRotation()\n        local stepobject = getObjectFromGUID(stepbuttons[i][5])\n        local steprotation = stepobject.getRotation()\n        stepobject.setRotation({180,steprotation.y,steprotation.z})\n        local stepposition = stepobject.getPosition()\n        stepobject.setPosition({stepposition.x,stepposition.y+0.2,stepposition.z})\n        steprotation = stepobject.getRotation()\n        stepobject.setRotation({steprotation.x,referencerotation.y,steprotation.z})\n    end\n    currentstep = 5\nend\n\nfunction combatAttackSwap(me, player)\n    if player ~= currentcolor then\n        return 1\n    end\n    resetSteps()\n    for i, v in ipairs(colors) do\n        local referenceobject = getObjectFromGUID(stepbuttons[i][12])\n        local referencerotation = referenceobject.getRotation()\n        local stepobject = getObjectFromGUID(stepbuttons[i][6])\n        local steprotation = stepobject.getRotation()\n        stepobject.setRotation({180,steprotation.y,steprotation.z})\n        local stepposition = stepobject.getPosition()\n        stepobject.setPosition({stepposition.x,stepposition.y+0.2,stepposition.z})\n        steprotation = stepobject.getRotation()\n        stepobject.setRotation({steprotation.x,referencerotation.y,steprotation.z})\n    end\n    currentstep = 6\nend\n\nfunction combatBlockSwap(me, player)\n    if player ~= currentcolor then\n        return 1\n    end\n    resetSteps()\n    for i, v in ipairs(colors) do\n        local referenceobject = getObjectFromGUID(stepbuttons[i][12])\n        local referencerotation = referenceobject.getRotation()\n        local stepobject = getObjectFromGUID(stepbuttons[i][7])\n        local steprotation = stepobject.getRotation()\n        stepobject.setRotation({180,steprotation.y,steprotation.z})\n        local stepposition = stepobject.getPosition()\n        stepobject.setPosition({stepposition.x,stepposition.y+0.2,stepposition.z})\n        steprotation = stepobject.getRotation()\n        stepobject.setRotation({steprotation.x,referencerotation.y,steprotation.z})\n    end\n    currentstep = 7\nend\n\nfunction combatDamageSwap(me, player)\n    if player ~= currentcolor then\n        return 1\n    end\n    resetSteps()\n    for i, v in ipairs(colors) do\n        local referenceobject = getObjectFromGUID(stepbuttons[i][12])\n        local referencerotation = referenceobject.getRotation()\n        local stepobject = getObjectFromGUID(stepbuttons[i][8])\n        local steprotation = stepobject.getRotation()\n        stepobject.setRotation({180,steprotation.y,steprotation.z})\n        local stepposition = stepobject.getPosition()\n        stepobject.setPosition({stepposition.x,stepposition.y+0.2,stepposition.z})\n        steprotation = stepobject.getRotation()\n        stepobject.setRotation({steprotation.x,referencerotation.y,steprotation.z})\n    end\n    currentstep = 8\nend\n\nfunction combatEndSwap(me, player)\n    if player ~= currentcolor then\n        return 1\n    end\n    resetSteps()\n    for i, v in ipairs(colors) do\n        local referenceobject = getObjectFromGUID(stepbuttons[i][12])\n        local referencerotation = referenceobject.getRotation()\n        local stepobject = getObjectFromGUID(stepbuttons[i][9])\n        local steprotation = stepobject.getRotation()\n        stepobject.setRotation({180,steprotation.y,steprotation.z})\n        local stepposition = stepobject.getPosition()\n        stepobject.setPosition({stepposition.x,stepposition.y+0.2,stepposition.z})\n        steprotation = stepobject.getRotation()\n        stepobject.setRotation({steprotation.x,referencerotation.y,steprotation.z})\n    end\n    currentstep = 9\nend\n\nfunction main2Swap(me, player)\n    if player ~= currentcolor then\n        return 1\n    end\n    resetSteps()\n    for i, v in ipairs(colors) do\n        local referenceobject = getObjectFromGUID(stepbuttons[i][12])\n        local referencerotation = referenceobject.getRotation()\n        local stepobject = getObjectFromGUID(stepbuttons[i][10])\n        local steprotation = stepobject.getRotation()\n        stepobject.setRotation({180,steprotation.y,steprotation.z})\n        local stepposition = stepobject.getPosition()\n        stepobject.setPosition({stepposition.x,stepposition.y+0.2,stepposition.z})\n        steprotation = stepobject.getRotation()\n        stepobject.setRotation({steprotation.x,referencerotation.y,steprotation.z})\n    end\n    currentstep = 10\nend\n\nfunction endSwap(me, player)\n    if player ~= currentcolor then\n        return 1\n    end\n    resetSteps()\n    for i, v in ipairs(colors) do\n        local referenceobject = getObjectFromGUID(stepbuttons[i][12])\n        local referencerotation = referenceobject.getRotation()\n        local stepobject = getObjectFromGUID(stepbuttons[i][11])\n        local steprotation = stepobject.getRotation()\n        stepobject.setRotation({180,steprotation.y,steprotation.z})\n        local stepposition = stepobject.getPosition()\n        stepobject.setPosition({stepposition.x,stepposition.y+0.2,stepposition.z})\n        steprotation = stepobject.getRotation()\n        stepobject.setRotation({steprotation.x,referencerotation.y,steprotation.z})\n    end\n    currentstep = 11\nend\n\nfunction passButton()\n    currentplayer = currentplayer + 1\n    if currentplayer >= 9 then\n        currentplayer = 1\n    end\n    if currentplayer == 1 and whiteseated == 0 then\n        currentplayer = currentplayer + 1\n    end\n    if currentplayer == 2 and redseated == 0 then\n        currentplayer = currentplayer + 1\n    end\n    if currentplayer == 3 and orangeseated == 0 then\n        currentplayer = currentplayer + 1\n    end\n    if currentplayer == 4 and yellowseated == 0 then\n        currentplayer = currentplayer + 1\n    end\n    if currentplayer == 5 and greenseated == 0 then\n        currentplayer = currentplayer + 1\n    end\n    if currentplayer == 6 and blueseated == 0 then\n        currentplayer = currentplayer + 1\n    end\n    if currentplayer == 7 and purpleseated == 0 then\n        currentplayer = currentplayer + 1\n    end\n    if currentplayer == 8 and pinkseated == 0 then\n        if whiteseated == 1 then\n            currentplayer = 1\n        elseif redseated == 1 then\n            currentplayer = 2\n        elseif orangeseated == 1 then\n            currentplayer = 3\n        elseif yellowseated == 1 then\n            currentplayer = 4\n        elseif greenseated == 1 then\n            currentplayer = 5\n        elseif blueseated == 1 then\n            currentplayer = 6\n        elseif purpleseated == 1 then\n            currentplayer = 7\n        elseif pinkseated == 1 then\n            currentplayer = 8\n        else\n            currentplayer = 1\n        end\n    end\n    currentcolor = colors[currentplayer]\n    local underboard = getObjectFromGUID(boards[currentplayer])\n    local spot = getObjectFromGUID(spots[currentplayer])\n    local spotposition = spot.getPosition()\n    local spotrotation = spot.getRotation()\n    local underposition = underboard.getPosition()\n    local underrotation = underboard.getRotation()\n    activeplayerboard.setRotation(underrotation)\n    activeplayerboard.setPosition({underposition.x,underposition.y+0.01,underposition.z})\n    key.setPosition({spotposition.x,spotposition.y+3.33,spotposition.z})\n    key.setRotation(spotrotation)\n    resetSteps()\n    untapSwap(me, \"Black\")\nend\n\nfunction sitPlayer(sitting)\n    if sitting.sitcolor == 'White' then\n        whiteseated = 1\n    elseif sitting.sitcolor == 'Red' then\n        redseated = 1\n    elseif sitting.sitcolor == 'Orange' then\n        orangeseated = 1\n    elseif sitting.sitcolor == 'Yellow' then\n        yellowseated = 1\n    elseif sitting.sitcolor == 'Green' then\n        greenseated = 1\n    elseif sitting.sitcolor == 'Blue' then\n        blueseated = 1\n    elseif sitting.sitcolor == 'Purple' then\n        purpleseated = 1\n    elseif sitting.sitcolor == 'Pink' then\n        pinkseated = 1\n    end\nend\n\nfunction leavePlayer(leaving)\n    if leaving.leavecolor == 'White' then\n        whiteseated = 0\n    elseif leaving.leavecolor == 'Red' then\n        redseated = 0\n    elseif leaving.leavecolor == 'Orange' then\n        orangeseated = 0\n    elseif leaving.leavecolor == 'Yellow' then\n        yellowseated = 0\n    elseif leaving.leavecolor == 'Green' then\n        greenseated = 0\n    elseif leaving.leavecolor == 'Blue' then\n        blueseated = 0\n    elseif leaving.leavecolor == 'Purple' then\n        purpleseated = 0\n    elseif leaving.leavecolor == 'Pink' then\n        pinkseated = 0\n    end\nend\n\nfunction lifePlus(player)\n    if player.lifecolor == 'White' then\n        whitelife = whitelife + 1\n    elseif player.lifecolor == 'Red' then\n        redlife = redlife + 1\n    elseif player.lifecolor == 'Orange' then\n        orangelife = orangelife + 1\n    elseif player.lifecolor == 'Yellow' then\n        yellowlife = yellowlife + 1\n    elseif player.lifecolor == 'Green' then\n        greenlife = greenlife + 1\n    elseif player.lifecolor == 'Blue' then\n        bluelife = bluelife + 1\n    elseif player.lifecolor == 'Purple' then\n        purplelife = purplelife + 1\n    elseif player.lifecolor == 'Pink' then\n        pinklife = pinklife + 1\n    end\nend\n\nfunction lifePlusFive(player)\n    if player.lifecolor == 'White' then\n        whitelife = whitelife + 5\n    elseif player.lifecolor == 'Red' then\n        redlife = redlife + 5\n    elseif player.lifecolor == 'Orange' then\n        orangelife = orangelife + 5\n    elseif player.lifecolor == 'Yellow' then\n        yellowlife = yellowlife + 5\n    elseif player.lifecolor == 'Green' then\n        greenlife = greenlife + 5\n    elseif player.lifecolor == 'Blue' then\n        bluelife = bluelife + 5\n    elseif player.lifecolor == 'Purple' then\n        purplelife = purplelife + 5\n    elseif player.lifecolor == 'Pink' then\n        pinklife = pinklife + 5\n    end\nend\n\nfunction lifeMinus(player)\n    if player.lifecolor == 'White' then\n        whitelife = whitelife - 1\n    elseif player.lifecolor == 'Red' then\n        redlife = redlife - 1\n    elseif player.lifecolor == 'Orange' then\n        orangelife = orangelife - 1\n    elseif player.lifecolor == 'Yellow' then\n        yellowlife = yellowlife - 1\n    elseif player.lifecolor == 'Green' then\n        greenlife = greenlife - 1\n    elseif player.lifecolor == 'Blue' then\n        bluelife = bluelife - 1\n    elseif player.lifecolor == 'Purple' then\n        purplelife = purplelife - 1\n    elseif player.lifecolor == 'Pink' then\n        pinklife = pinklife - 1\n    end\nend\n\nfunction lifeMinusFive(player)\n    if player.lifecolor == 'White' then\n        whitelife = whitelife - 5\n    elseif player.lifecolor == 'Red' then\n        redlife = redlife - 5\n    elseif player.lifecolor == 'Orange' then\n        orangelife = orangelife - 5\n    elseif player.lifecolor == 'Yellow' then\n        yellowlife = yellowlife - 5\n    elseif player.lifecolor == 'Green' then\n        greenlife = greenlife - 5\n    elseif player.lifecolor == 'Blue' then\n        bluelife = bluelife - 5\n    elseif player.lifecolor == 'Purple' then\n        purplelife = purplelife - 5\n    elseif player.lifecolor == 'Pink' then\n        pinklife = pinklife - 5\n    end\nend\n",
  "LuaScriptState": "",
  "Grid": {
    "Type": 0,
    "Lines": false,
    "Snapping": false,
    "Offset": false,
    "BothSnapping": false,
    "xSize": 0.5,
    "ySize": 0.5,
    "PosOffset": {
      "x": 0.0,
      "y": 1.0,
      "z": 0.0
    }
  },
  "Hands": {
    "Enable": true,
    "DisableUnused": false,
    "Hidding": 0,
    "HandTransforms": [
      {
        "Color": "White",
        "Transform": {
          "posX": 13.9670525,
          "posY": 4.4612174,
          "posZ": -30.555357,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 25.0183372,
          "scaleY": 7.0,
          "scaleZ": 1.76330757
        }
      },
      {
        "Color": "White",
        "Transform": {
          "posX": 14.0147047,
          "posY": 4.4612174,
          "posZ": -35.19569,
          "rotX": 0.0,
          "rotY": 0.166600153,
          "rotZ": 0.0,
          "scaleX": 24.7192326,
          "scaleY": 7.0,
          "scaleZ": 1.232721
        }
      },
      {
        "Color": "Red",
        "Transform": {
          "posX": -13.8690109,
          "posY": 4.4612174,
          "posZ": -30.5260468,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 24.64568,
          "scaleY": 7.0,
          "scaleZ": 1.74549079
        }
      },
      {
        "Color": "Red",
        "Transform": {
          "posX": -13.8577337,
          "posY": 4.4612174,
          "posZ": -35.11352,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 24.26189,
          "scaleY": 7.0,
          "scaleZ": 1.168438
        }
      },
      {
        "Color": "Orange",
        "Transform": {
          "posX": -48.5743027,
          "posY": 4.465224,
          "posZ": -13.3233738,
          "rotX": 0.0,
          "rotY": 89.9240952,
          "rotZ": 0.0,
          "scaleX": 25.0839062,
          "scaleY": 7.0,
          "scaleZ": 1.7710849
        }
      },
      {
        "Color": "Orange",
        "Transform": {
          "posX": -53.276825,
          "posY": 4.465224,
          "posZ": -13.6683283,
          "rotX": 0.0,
          "rotY": 89.9240952,
          "rotZ": 0.0,
          "scaleX": 24.48331,
          "scaleY": 7.0,
          "scaleZ": 1.23651242
        }
      },
      {
        "Color": "Yellow",
        "Transform": {
          "posX": -48.6042671,
          "posY": 4.465224,
          "posZ": 13.2417259,
          "rotX": 0.0,
          "rotY": 89.92408,
          "rotZ": 0.0,
          "scaleX": 25.1972542,
          "scaleY": 7.0,
          "scaleZ": 1.54615784
        }
      },
      {
        "Color": "Yellow",
        "Transform": {
          "posX": -53.2911224,
          "posY": 4.465224,
          "posZ": 12.9706144,
          "rotX": 0.0,
          "rotY": 89.92408,
          "rotZ": 0.0,
          "scaleX": 25.2186146,
          "scaleY": 7.0,
          "scaleZ": 1.22197855
        }
      },
      {
        "Color": "Green",
        "Transform": {
          "posX": -14.1510916,
          "posY": 4.4612174,
          "posZ": 30.5752182,
          "rotX": 0.0,
          "rotY": 180.038483,
          "rotZ": 0.0,
          "scaleX": 24.97946,
          "scaleY": 7.0,
          "scaleZ": 1.84945643
        }
      },
      {
        "Color": "Green",
        "Transform": {
          "posX": -14.0880337,
          "posY": 4.4612174,
          "posZ": 35.1929626,
          "rotX": 0.0,
          "rotY": 180.038483,
          "rotZ": 0.0,
          "scaleX": 24.7269135,
          "scaleY": 7.0,
          "scaleZ": 1.10544968
        }
      },
      {
        "Color": "Blue",
        "Transform": {
          "posX": 13.8595476,
          "posY": 4.4612174,
          "posZ": 30.5496235,
          "rotX": 0.0,
          "rotY": 180.038559,
          "rotZ": 0.0,
          "scaleX": 24.9016666,
          "scaleY": 7.0,
          "scaleZ": 1.81269324
        }
      },
      {
        "Color": "Blue",
        "Transform": {
          "posX": 13.7250423,
          "posY": 4.4612174,
          "posZ": 35.16034,
          "rotX": 0.0,
          "rotY": 180.03862,
          "rotZ": 0.0,
          "scaleX": 24.7419167,
          "scaleY": 7.0,
          "scaleZ": 1.04279876
        }
      },
      {
        "Color": "Purple",
        "Transform": {
          "posX": 48.3696,
          "posY": 4.461218,
          "posZ": 13.3250971,
          "rotX": 0.0,
          "rotY": 269.9195,
          "rotZ": 0.0,
          "scaleX": 25.0865288,
          "scaleY": 7.0,
          "scaleZ": 1.70784938
        }
      },
      {
        "Color": "Purple",
        "Transform": {
          "posX": 53.0165634,
          "posY": 4.461218,
          "posZ": 13.2942514,
          "rotX": 0.0,
          "rotY": 269.919525,
          "rotZ": 0.0,
          "scaleX": 24.7622318,
          "scaleY": 7.0,
          "scaleZ": 1.27693284
        }
      },
      {
        "Color": "Pink",
        "Transform": {
          "posX": 48.3554077,
          "posY": 4.461218,
          "posZ": -13.186388,
          "rotX": 0.0,
          "rotY": 269.919525,
          "rotZ": 0.0,
          "scaleX": 24.9173126,
          "scaleY": 7.0,
          "scaleZ": 1.670501
        }
      },
      {
        "Color": "Pink",
        "Transform": {
          "posX": 53.0398,
          "posY": 4.461218,
          "posZ": -13.0367441,
          "rotX": 0.0,
          "rotY": 269.9196,
          "rotZ": 0.0,
          "scaleX": 24.8281479,
          "scaleY": 7.0,
          "scaleZ": 1.23593152
        }
      }
    ]
  },
  "DrawImage": "iVBORw0KGgoAAAANSUhEUgAAAWAAAADQCAYAAAA53LuNAAAFFElEQVR4Ae3QgQAAAADDoPlTH+SFUGHAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgwYMGDAgAEDBgy8DQx5DAABHyNK3wAAAABJRU5ErkJggg==",
  "VectorLines": [],
  "ObjectStates": [
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 13.9878845,
        "posY": 0.760609448,
        "posZ": -18.422308,
        "rotX": -0.00462245941,
        "rotY": 179.985535,
        "rotZ": 8.4971424E-07,
        "scaleX": 7.551263,
        "scaleY": 1.0,
        "scaleZ": 7.551263
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/HMit48t.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "713346"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -36.40121,
        "posY": 0.753201544,
        "posZ": -13.3446817,
        "rotX": 359.98465,
        "rotY": 269.985565,
        "rotZ": -0.000141849829,
        "scaleX": 7.551263,
        "scaleY": 1.0,
        "scaleZ": 7.551263
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/ICxtDt5.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "0a8b1f"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -36.38028,
        "posY": 0.75262934,
        "posZ": 13.3006,
        "rotX": 359.980072,
        "rotY": 269.985535,
        "rotZ": 4.96089172E-07,
        "scaleX": 7.551263,
        "scaleY": 1.0,
        "scaleZ": 7.551263
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/ICxtDt5.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "fee590"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -13.9892225,
        "posY": 0.75000006,
        "posZ": 18.4322052,
        "rotX": 1.07612514E-07,
        "rotY": 359.989319,
        "rotZ": 2.80796939E-07,
        "scaleX": 7.551263,
        "scaleY": 1.0,
        "scaleZ": 7.551263
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/ICxtDt5.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "fa2540"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 13.9830933,
        "posY": 0.75000006,
        "posZ": 18.4302883,
        "rotX": 3.4512604E-07,
        "rotY": 359.988922,
        "rotZ": 3.35496225E-05,
        "scaleX": 7.551263,
        "scaleY": 1.0,
        "scaleZ": 7.551263
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/ICxtDt5.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "910ce3"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 36.360424,
        "posY": 0.750619948,
        "posZ": 13.316432,
        "rotX": -0.00469993241,
        "rotY": 89.98449,
        "rotZ": 1.02406977E-06,
        "scaleX": 7.551263,
        "scaleY": 1.0,
        "scaleZ": 7.551263
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/ICxtDt5.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "77fe40"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 36.38817,
        "posY": 0.751156867,
        "posZ": -13.3336678,
        "rotX": -0.00052573625,
        "rotY": 89.98448,
        "rotZ": 7.6123215E-05,
        "scaleX": 7.551263,
        "scaleY": 1.0,
        "scaleZ": 7.551263
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/ICxtDt5.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "a0731c"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 13.9878845,
        "posY": 0.750609457,
        "posZ": -18.422308,
        "rotX": -0.00462245941,
        "rotY": 179.985535,
        "rotZ": 8.4971424E-07,
        "scaleX": 7.551263,
        "scaleY": 1.0,
        "scaleZ": 7.551263
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/ICxtDt5.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "fd6d1e"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -14.0141468,
        "posY": 0.7506104,
        "posZ": -18.43439,
        "rotX": -0.004626336,
        "rotY": 179.985687,
        "rotZ": 1.513766E-07,
        "scaleX": 7.551263,
        "scaleY": 1.0,
        "scaleZ": 7.551263
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/ICxtDt5.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "ac85bb"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": 3.153106,
        "posY": 0.9637923,
        "posZ": -10.7937069,
        "rotX": 90.0,
        "rotY": 4.82967425E-06,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "40",
        "colorstate": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "fontSize": 150
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "7c193a"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": 3.144978,
        "posY": 0.367037952,
        "posZ": -13.092061,
        "rotX": -0.00261785672,
        "rotY": 269.9857,
        "rotZ": -6.954774E-05,
        "scaleX": 0.6000004,
        "scaleY": 0.6000004,
        "scaleZ": 0.6000004
      },
      "Nickname": "White Health Control",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'Plus'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '+1'\r\n   button_parameters.position = {0, 1, -0.7}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'Minus'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '-1'\r\n   button_parameters.position = {0, 1, 0.7}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'PlusFive'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '+5'\r\n   button_parameters.position = {0, 1, -2.1}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'MinusFive'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '-5'\r\n   button_parameters.position = {0, 1, 2.1}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   function Plus(me, player)\r\n       if player ~= 'White' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'White'}\r\n       Global.call('lifePlus', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()+1))\r\n   end\r\n\r\n   function Minus(me, player)\r\n       if player ~= 'White' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'White'}\r\n       Global.call('lifeMinus', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()-1))\r\n   end\r\n\r\n   function PlusFive(me, player)\r\n       if player ~= 'White' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'White'}\r\n       Global.call('lifePlusFive', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()+5))\r\n   end\r\n\r\n   function MinusFive(me, player)\r\n       if player ~= 'White' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'White'}\r\n       Global.call('lifeMinusFive', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()-5))\r\n   end\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "81fb4a"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 3.15287757,
        "posY": 0.767527759,
        "posZ": -14.2843084,
        "rotX": -9.010847E-05,
        "rotY": 179.990509,
        "rotZ": 0.00261897687,
        "scaleX": 0.692596138,
        "scaleY": 1.0,
        "scaleZ": 0.692596138
      },
      "Nickname": "Player Counter Bar",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/jJHMGN0.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "local basic_buttons = {}\r\nlocal unit = 1\r\nvalue = 0\r\nvalue2 = 0\r\nvalue3 = 0\r\n\r\nbasic_buttons['poison'] = {click_function='poisonUp',function_owner=self,label=tostring(value),position={-1.55,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\nbasic_buttons['exper'] = {click_function='experUp',function_owner=self,label=tostring(value2),position={0,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\nbasic_buttons['energy'] = {click_function='energyUp',function_owner=self,label=tostring(value3),position={1.55,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value, value2=value2, value3=value3}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        value2 = loaded_data.value2\r\n        value3 = loaded_data.value3\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        value2 = 0\r\n        value3 = 0\r\n        unit = 1\r\n\r\n    end\r\n    value = 0\r\n    value2 = 0\r\n    value3 = 0\r\n    for i,v in pairs(basic_buttons) do\r\n        self.createButton(v)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction poisonUp(me, player)\r\n    if editing == 2 then\r\n        experUp(me, player)\r\n    elseif editing == 3 then\r\n        energyUp(me, player)\r\n    end\r\n    if player ~= 'White' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {-1.55,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {-1.55,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value)\r\n    basic_button.index = 0\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + magn\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n\r\nfunction experUp(me, player)\r\n    if editing == 1 then\r\n        poisonUp(me, player)\r\n    elseif editing == 3 then\r\n        energyUp(me, player)\r\n    end\r\n    if player ~= 'White' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus2'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus2'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 2\r\n    elseif editing == 2 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue2()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value2)\r\n    basic_button.index = 1\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue2(magn)\r\n    value2 = value2 + magn\r\n    updatevalue2()\r\nend\r\n\r\nfunction minus2()\r\n    changevalue2(-1)\r\nend\r\n\r\nfunction plus2()\r\n    changevalue2(1)\r\nend\r\n\r\nfunction energyUp(me, player)\r\n    if editing == 1 then\r\n        poisonUp(me, player)\r\n    elseif editing == 2 then\r\n        experUp(me, player)\r\n    end\r\n    if player ~= 'White' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus3'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {1.55,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus3'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {1.55,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 3\r\n    elseif editing == 3 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue3()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value3)\r\n    basic_button.index = 2\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue3(magn)\r\n    value3 = value3 + magn\r\n    updatevalue3()\r\nend\r\n\r\nfunction minus3()\r\n    changevalue3(-1)\r\nend\r\n\r\nfunction plus3()\r\n    changevalue3(1)\r\nend\r\n",
      "LuaScriptState": "{\"value\":0,\"value2\":0,\"value3\":0}",
      "GUID": "4fa629"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 5.608645,
        "posY": 0.8405246,
        "posZ": -10.1310015,
        "rotX": 7.52018138E-07,
        "rotY": 179.989334,
        "rotZ": -5.47732157E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "White Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 0.9682655,
        "b": 0.573170662
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'White' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "7deb8e"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 7.108645,
        "posY": 0.8405246,
        "posZ": -10.1310015,
        "rotX": 2.78940661E-06,
        "rotY": 179.985535,
        "rotZ": -1.19684564E-05,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Blue Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.350107,
        "g": 0.3327439,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'White' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "844309"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 8.60864449,
        "posY": 0.8405246,
        "posZ": -10.1310015,
        "rotX": 1.913566E-06,
        "rotY": 179.985565,
        "rotZ": 3.71122042E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Black Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4477272,
        "g": 0.4477272,
        "b": 0.4477272
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'White' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "2e1487"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 10.1086445,
        "posY": 0.8405246,
        "posZ": -10.1310015,
        "rotX": 6.177646E-06,
        "rotY": 179.98558,
        "rotZ": -6.09973858E-06,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Red Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 0.23169902,
        "b": 0.23169902
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'White' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "e53ab1"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 11.6086445,
        "posY": 0.8405246,
        "posZ": -10.1310015,
        "rotX": 1.20924176E-06,
        "rotY": 179.9856,
        "rotZ": -2.67628366E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Green Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.2691917,
        "g": 0.6358885,
        "b": 0.276007473
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'White' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "497be1"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 13.1086445,
        "posY": 0.8405246,
        "posZ": -10.1310015,
        "rotX": 3.03773E-07,
        "rotY": 179.989349,
        "rotZ": 2.841023E-06,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Colorless Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'White' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "115400"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 21.0954018,
        "posY": 0.770707,
        "posZ": -26.8015976,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Main Phase 2",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/hnAgIDT.png",
        "ImageSecondaryURL": "http://i.imgur.com/4TCWZPX.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'main2Swap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Main2'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "543b56"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 19.3954029,
        "posY": 0.770707,
        "posZ": -26.8015957,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "End of Combat Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/CcTGpLb.png",
        "ImageSecondaryURL": "http://i.imgur.com/4Ko4rcf.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatEndSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'End'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "cdeb32"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 17.8954029,
        "posY": 0.770707,
        "posZ": -26.8015957,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Combat Damage Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/rk33RqC.png",
        "ImageSecondaryURL": "http://i.imgur.com/pnQD58s.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatDamageSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Damage'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "b7cb65"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 16.3954029,
        "posY": 0.770707,
        "posZ": -26.8015957,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Declare Blockers Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/dZ5WStI.png",
        "ImageSecondaryURL": "http://i.imgur.com/lsfN7ce.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatBlockSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Block'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "03c35d"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 24.6954,
        "posY": 0.770707,
        "posZ": -26.8015976,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Pass Turn",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/ATvvd1g.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'passButton'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Pass'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "79c6a7"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 14.8954058,
        "posY": 0.770707,
        "posZ": -26.8015976,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Declare Attackers Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/W9ZhQo9.png",
        "ImageSecondaryURL": "http://i.imgur.com/tw0XchW.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatAttackSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Attack'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "273ff9"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 22.7954025,
        "posY": 0.770707,
        "posZ": -26.8015976,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Ending Phase",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/FTFINuv.png",
        "ImageSecondaryURL": "http://i.imgur.com/HxtYASE.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'endSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Ending'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "b226b9"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 13.3954048,
        "posY": 0.770707,
        "posZ": -26.8015938,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Beginning of Combat Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/l0VzEuD.png",
        "ImageSecondaryURL": "http://i.imgur.com/sobMXMX.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatStartSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Start'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "ff17f5"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 11.695406,
        "posY": 0.770707,
        "posZ": -26.8015919,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Main Phase 1",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/lLKhz3D.png",
        "ImageSecondaryURL": "http://i.imgur.com/r7xoIjT.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'main1Swap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Main'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "545192"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 9.995406,
        "posY": 0.770707,
        "posZ": -26.8015957,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Draw Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/uYChJ1y.png",
        "ImageSecondaryURL": "http://i.imgur.com/Obh0pmO.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'drawSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Draw'\r\n   button_parameters.position = {0, 0.12, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "99e85d"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 8.495407,
        "posY": 0.770707,
        "posZ": -26.8015938,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Upkeep Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/h55lzI2.png",
        "ImageSecondaryURL": "http://i.imgur.com/an3hPGd.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'upkeepSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Upkeep'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "f4b9d9"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 6.995407,
        "posY": 0.770707,
        "posZ": -26.8016472,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Untap Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/w3cxcKB.png",
        "ImageSecondaryURL": "http://i.imgur.com/6t27zrN.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'untapSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Untap'\r\n   button_parameters.position = {0, 0.12, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "0484cf"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": 22.6296024,
        "posY": 0.961139441,
        "posZ": -9.700005,
        "rotX": 90.0,
        "rotY": -4.82967E-06,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "0 Cards in Hand",
        "colorstate": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "fontSize": 64
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "dd4711"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": 14.32375,
        "posY": 0.9612174,
        "posZ": -35.00494,
        "rotX": 90.0,
        "rotY": 0.166601315,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "Pull Cards Here to Scry",
        "colorstate": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "fontSize": 56
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "4e6bf8"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -22.3933868,
        "posY": 0.840525568,
        "posZ": -10.1430826,
        "rotX": 7.520182E-07,
        "rotY": 179.989334,
        "rotZ": -5.47732157E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "White Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 0.9682655,
        "b": 0.573170662
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Red' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "168d85"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -20.8933868,
        "posY": 0.840525568,
        "posZ": -10.1430826,
        "rotX": 2.78940661E-06,
        "rotY": 179.985535,
        "rotZ": -1.19684573E-05,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Blue Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.350107,
        "g": 0.332743883,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Red' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "9a97a4"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -19.3933868,
        "posY": 0.840525568,
        "posZ": -10.1430826,
        "rotX": 1.913566E-06,
        "rotY": 179.985565,
        "rotZ": 3.71122042E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Black Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4477272,
        "g": 0.4477272,
        "b": 0.4477272
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Red' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "b83033"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -17.8933868,
        "posY": 0.840525568,
        "posZ": -10.1430826,
        "rotX": 6.177646E-06,
        "rotY": 179.98558,
        "rotZ": -6.09973858E-06,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Red Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 0.23169899,
        "b": 0.23169899
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Red' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "308c46"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -16.3933868,
        "posY": 0.840525568,
        "posZ": -10.1430826,
        "rotX": 1.20924176E-06,
        "rotY": 179.9856,
        "rotZ": -2.67628366E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Green Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.269191682,
        "g": 0.6358885,
        "b": 0.276007473
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Red' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "430f7b"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -14.8933868,
        "posY": 0.840525568,
        "posZ": -10.1430826,
        "rotX": 3.03773E-07,
        "rotY": 179.989349,
        "rotZ": 2.841023E-06,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Colorless Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Red' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "7e03b3"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -24.8491535,
        "posY": 0.7675287,
        "posZ": -14.29639,
        "rotX": -9.010847E-05,
        "rotY": 179.990509,
        "rotZ": 0.00261897687,
        "scaleX": 0.692596138,
        "scaleY": 1.0,
        "scaleZ": 0.692596138
      },
      "Nickname": "Player Counter Bar",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/jJHMGN0.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "local basic_buttons = {}\r\nlocal unit = 1\r\nvalue = 0\r\nvalue2 = 0\r\nvalue3 = 0\r\n\r\nbasic_buttons['poison'] = {click_function='poisonUp',function_owner=self,label=tostring(value),position={-1.55,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\nbasic_buttons['exper'] = {click_function='experUp',function_owner=self,label=tostring(value2),position={0,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\nbasic_buttons['energy'] = {click_function='energyUp',function_owner=self,label=tostring(value3),position={1.55,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value, value2=value2, value3=value3}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        value2 = loaded_data.value2\r\n        value3 = loaded_data.value3\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        value2 = 0\r\n        value3 = 0\r\n        unit = 1\r\n\r\n    end\r\n    value = 0\r\n    value2 = 0\r\n    value3 = 0\r\n    for i,v in pairs(basic_buttons) do\r\n        self.createButton(v)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction poisonUp(me, player)\r\n    if editing == 2 then\r\n        experUp(me, player)\r\n    elseif editing == 3 then\r\n        energyUp(me, player)\r\n    end\r\n    if player ~= 'Red' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {-1.55,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {-1.55,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value)\r\n    basic_button.index = 0\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + magn\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n\r\nfunction experUp(me, player)\r\n    if editing == 1 then\r\n        poisonUp(me, player)\r\n    elseif editing == 3 then\r\n        energyUp(me, player)\r\n    end\r\n    if player ~= 'Red' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus2'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus2'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 2\r\n    elseif editing == 2 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue2()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value2)\r\n    basic_button.index = 1\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue2(magn)\r\n    value2 = value2 + magn\r\n    updatevalue2()\r\nend\r\n\r\nfunction minus2()\r\n    changevalue2(-1)\r\nend\r\n\r\nfunction plus2()\r\n    changevalue2(1)\r\nend\r\n\r\nfunction energyUp(me, player)\r\n    if editing == 1 then\r\n        poisonUp(me, player)\r\n    elseif editing == 2 then\r\n        experUp(me, player)\r\n    end\r\n    if player ~= 'Red' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus3'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {1.55,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus3'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {1.55,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 3\r\n    elseif editing == 3 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue3()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value3)\r\n    basic_button.index = 2\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue3(magn)\r\n    value3 = value3 + magn\r\n    updatevalue3()\r\nend\r\n\r\nfunction minus3()\r\n    changevalue3(-1)\r\nend\r\n\r\nfunction plus3()\r\n    changevalue3(1)\r\nend\r\n",
      "LuaScriptState": "{\"value\":0,\"value2\":0,\"value3\":0}",
      "GUID": "04b960"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": -24.8570538,
        "posY": 0.3670389,
        "posZ": -13.1041422,
        "rotX": -0.00261785672,
        "rotY": 269.9857,
        "rotZ": -6.954774E-05,
        "scaleX": 0.6000004,
        "scaleY": 0.6000004,
        "scaleZ": 0.6000004
      },
      "Nickname": "Red Health Control",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'Plus'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '+1'\r\n   button_parameters.position = {0, 1, -0.7}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'Minus'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '-1'\r\n   button_parameters.position = {0, 1, 0.7}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'PlusFive'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '+5'\r\n   button_parameters.position = {0, 1, -2.1}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'MinusFive'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '-5'\r\n   button_parameters.position = {0, 1, 2.1}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   function Plus(me, player)\r\n       if player ~= 'Red' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Red'}\r\n       Global.call('lifePlus', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()+1))\r\n   end\r\n\r\n   function Minus(me, player)\r\n       if player ~= 'Red' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Red'}\r\n       Global.call('lifeMinus', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()-1))\r\n   end\r\n\r\n   function PlusFive(me, player)\r\n       if player ~= 'Red' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Red'}\r\n       Global.call('lifePlusFive', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()+5))\r\n   end\r\n\r\n   function MinusFive(me, player)\r\n       if player ~= 'Red' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Red'}\r\n       Global.call('lifeMinusFive', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()-5))\r\n   end\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "360aa5"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -21.0066242,
        "posY": 0.770707965,
        "posZ": -26.8137283,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Untap Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/w3cxcKB.png",
        "ImageSecondaryURL": "http://i.imgur.com/6t27zrN.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'untapSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Untap'\r\n   button_parameters.position = {0, 0.12, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "8d94da"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -19.5066242,
        "posY": 0.770707965,
        "posZ": -26.8136749,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Upkeep Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/h55lzI2.png",
        "ImageSecondaryURL": "http://i.imgur.com/an3hPGd.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'upkeepSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Upkeep'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "9f768c"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -18.0066261,
        "posY": 0.770707965,
        "posZ": -26.8136768,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Draw Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/uYChJ1y.png",
        "ImageSecondaryURL": "http://i.imgur.com/Obh0pmO.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'drawSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Draw'\r\n   button_parameters.position = {0, 0.12, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "3e696c"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -16.3066254,
        "posY": 0.770707965,
        "posZ": -26.813673,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Main Phase 1",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/lLKhz3D.png",
        "ImageSecondaryURL": "http://i.imgur.com/r7xoIjT.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'main1Swap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Main'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "743e7c"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -14.6066265,
        "posY": 0.770707965,
        "posZ": -26.8136749,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Beginning of Combat Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/l0VzEuD.png",
        "ImageSecondaryURL": "http://i.imgur.com/sobMXMX.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatStartSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Start'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "2fffeb"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -13.1066256,
        "posY": 0.770707965,
        "posZ": -26.8136787,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Declare Attackers Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/W9ZhQo9.png",
        "ImageSecondaryURL": "http://i.imgur.com/tw0XchW.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatAttackSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Attack'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "cc6b12"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -11.6066284,
        "posY": 0.770707965,
        "posZ": -26.8136768,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Declare Blockers Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/dZ5WStI.png",
        "ImageSecondaryURL": "http://i.imgur.com/lsfN7ce.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatBlockSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Block'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "35261f"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -10.1066284,
        "posY": 0.770707965,
        "posZ": -26.8136768,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Combat Damage Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/rk33RqC.png",
        "ImageSecondaryURL": "http://i.imgur.com/pnQD58s.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatDamageSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Damage'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "7d765b"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -8.606628,
        "posY": 0.770707965,
        "posZ": -26.8136768,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "End of Combat Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/CcTGpLb.png",
        "ImageSecondaryURL": "http://i.imgur.com/4Ko4rcf.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatEndSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'End'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "b444c5"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -6.90662956,
        "posY": 0.770707965,
        "posZ": -26.8136787,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Main Phase 2",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/hnAgIDT.png",
        "ImageSecondaryURL": "http://i.imgur.com/4TCWZPX.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'main2Swap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Main2'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "e144b4"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -5.206629,
        "posY": 0.770707965,
        "posZ": -26.8136787,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Ending Phase",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/FTFINuv.png",
        "ImageSecondaryURL": "http://i.imgur.com/HxtYASE.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'endSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Ending'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "4cf232"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -3.306631,
        "posY": 0.770707965,
        "posZ": -26.8136787,
        "rotX": -2.27974866E-08,
        "rotY": 180.000778,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Pass Turn",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/ATvvd1g.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'passButton'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Pass'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "a63c58"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -5.609983,
        "posY": 0.8399152,
        "posZ": 10.1408987,
        "rotX": 7.52011033E-07,
        "rotY": 359.989319,
        "rotZ": -5.47732157E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "White Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 0.9682655,
        "b": 0.573170662
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Green' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "2b50bf"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -7.109983,
        "posY": 0.8399152,
        "posZ": 10.1408987,
        "rotX": 2.78940661E-06,
        "rotY": 359.985535,
        "rotZ": -1.19683427E-05,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Blue Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.350107,
        "g": 0.332743883,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Green' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "f13791"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -8.60998249,
        "posY": 0.8399152,
        "posZ": 10.1408987,
        "rotX": 1.913566E-06,
        "rotY": 359.985565,
        "rotZ": 3.71125623E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Black Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4477272,
        "g": 0.4477272,
        "b": 0.4477272
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Green' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "9b35c7"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -10.1099825,
        "posY": 0.8399152,
        "posZ": 10.1408987,
        "rotX": 6.177646E-06,
        "rotY": 359.9856,
        "rotZ": -6.09973858E-06,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Red Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 0.23169899,
        "b": 0.23169899
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Green' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "9aa60a"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -11.6099825,
        "posY": 0.8399152,
        "posZ": 10.1408987,
        "rotX": 1.20923528E-06,
        "rotY": 359.9856,
        "rotZ": -2.67630384E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Green Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.269191682,
        "g": 0.6358885,
        "b": 0.276007473
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Green' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "dc7948"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -13.1099825,
        "posY": 0.8399152,
        "posZ": 10.1408987,
        "rotX": 3.03773E-07,
        "rotY": 359.989349,
        "rotZ": 2.841023E-06,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Colorless Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Green' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "5069c1"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -3.15421557,
        "posY": 0.766918361,
        "posZ": 14.2942057,
        "rotX": -9.010847E-05,
        "rotY": 359.9905,
        "rotZ": 0.00261897687,
        "scaleX": 0.692596138,
        "scaleY": 1.0,
        "scaleZ": 0.692596138
      },
      "Nickname": "Player Counter Bar",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/jJHMGN0.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "local basic_buttons = {}\r\nlocal unit = 1\r\nvalue = 0\r\nvalue2 = 0\r\nvalue3 = 0\r\n\r\nbasic_buttons['poison'] = {click_function='poisonUp',function_owner=self,label=tostring(value),position={-1.55,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\nbasic_buttons['exper'] = {click_function='experUp',function_owner=self,label=tostring(value2),position={0,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\nbasic_buttons['energy'] = {click_function='energyUp',function_owner=self,label=tostring(value3),position={1.55,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value, value2=value2, value3=value3}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        value2 = loaded_data.value2\r\n        value3 = loaded_data.value3\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        value2 = 0\r\n        value3 = 0\r\n        unit = 1\r\n\r\n    end\r\n    value = 0\r\n    value2 = 0\r\n    value3 = 0\r\n    for i,v in pairs(basic_buttons) do\r\n        self.createButton(v)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction poisonUp(me, player)\r\n    if editing == 2 then\r\n        experUp(me, player)\r\n    elseif editing == 3 then\r\n        energyUp(me, player)\r\n    end\r\n    if player ~= 'Green' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {-1.55,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {-1.55,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value)\r\n    basic_button.index = 0\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + magn\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n\r\nfunction experUp(me, player)\r\n    if editing == 1 then\r\n        poisonUp(me, player)\r\n    elseif editing == 3 then\r\n        energyUp(me, player)\r\n    end\r\n    if player ~= 'Green' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus2'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus2'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 2\r\n    elseif editing == 2 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue2()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value2)\r\n    basic_button.index = 1\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue2(magn)\r\n    value2 = value2 + magn\r\n    updatevalue2()\r\nend\r\n\r\nfunction minus2()\r\n    changevalue2(-1)\r\nend\r\n\r\nfunction plus2()\r\n    changevalue2(1)\r\nend\r\n\r\nfunction energyUp(me, player)\r\n    if editing == 1 then\r\n        poisonUp(me, player)\r\n    elseif editing == 2 then\r\n        experUp(me, player)\r\n    end\r\n    if player ~= 'Green' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus3'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {1.55,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus3'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {1.55,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 3\r\n    elseif editing == 3 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue3()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value3)\r\n    basic_button.index = 2\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue3(magn)\r\n    value3 = value3 + magn\r\n    updatevalue3()\r\nend\r\n\r\nfunction minus3()\r\n    changevalue3(-1)\r\nend\r\n\r\nfunction plus3()\r\n    changevalue3(1)\r\nend\r\n",
      "LuaScriptState": "{\"value\":0,\"value2\":0,\"value3\":0}",
      "GUID": "20b8e5"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": -3.146316,
        "posY": 0.366428554,
        "posZ": 13.1019583,
        "rotX": -0.00261785672,
        "rotY": 89.98567,
        "rotZ": -6.954774E-05,
        "scaleX": 0.6000004,
        "scaleY": 0.6000004,
        "scaleZ": 0.6000004
      },
      "Nickname": "Green Health Control",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'Plus'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '+1'\r\n   button_parameters.position = {0, 1, -0.7}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'Minus'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '-1'\r\n   button_parameters.position = {0, 1, 0.7}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'PlusFive'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '+5'\r\n   button_parameters.position = {0, 1, -2.1}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'MinusFive'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '-5'\r\n   button_parameters.position = {0, 1, 2.1}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   function Plus(me, player)\r\n       if player ~= 'Green' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Green'}\r\n       Global.call('lifePlus', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()+1))\r\n   end\r\n\r\n   function Minus(me, player)\r\n       if player ~= 'Green' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Green'}\r\n       Global.call('lifeMinus', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()-1))\r\n   end\r\n\r\n   function PlusFive(me, player)\r\n       if player ~= 'Green' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Green'}\r\n       Global.call('lifePlusFive', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()+5))\r\n   end\r\n\r\n   function MinusFive(me, player)\r\n       if player ~= 'Green' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Green'}\r\n       Global.call('lifeMinusFive', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()-5))\r\n   end\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "c0b122"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -6.996745,
        "posY": 0.7700976,
        "posZ": 26.8115444,
        "rotX": -2.27974866E-08,
        "rotY": 0.000146621693,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Untap Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/w3cxcKB.png",
        "ImageSecondaryURL": "http://i.imgur.com/6t27zrN.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'untapSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Untap'\r\n   button_parameters.position = {0, 0.12, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "5098b8"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -8.496745,
        "posY": 0.7700976,
        "posZ": 26.811491,
        "rotX": -2.27974866E-08,
        "rotY": 0.000146621693,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Upkeep Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/h55lzI2.png",
        "ImageSecondaryURL": "http://i.imgur.com/an3hPGd.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'upkeepSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Upkeep'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "ea8b83"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -9.996744,
        "posY": 0.7700976,
        "posZ": 26.8114929,
        "rotX": -2.27974866E-08,
        "rotY": 0.000146621693,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Draw Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/uYChJ1y.png",
        "ImageSecondaryURL": "http://i.imgur.com/Obh0pmO.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'drawSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Draw'\r\n   button_parameters.position = {0, 0.12, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "a3029f"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -11.696744,
        "posY": 0.7700976,
        "posZ": 26.81149,
        "rotX": -2.27974866E-08,
        "rotY": 0.000146621693,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Main Phase 1",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/lLKhz3D.png",
        "ImageSecondaryURL": "http://i.imgur.com/r7xoIjT.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'main1Swap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Main'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "d16331"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -13.3967428,
        "posY": 0.7700976,
        "posZ": 26.811491,
        "rotX": -2.27974866E-08,
        "rotY": 0.000146621693,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Beginning of Combat Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/l0VzEuD.png",
        "ImageSecondaryURL": "http://i.imgur.com/sobMXMX.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatStartSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Start'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "d185ce"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -14.8967438,
        "posY": 0.7700976,
        "posZ": 26.8114948,
        "rotX": -2.27974866E-08,
        "rotY": 0.000146621693,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Declare Attackers Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/W9ZhQo9.png",
        "ImageSecondaryURL": "http://i.imgur.com/tw0XchW.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatAttackSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Attack'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "4b4375"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -16.39674,
        "posY": 0.7700976,
        "posZ": 26.8114929,
        "rotX": -2.27974866E-08,
        "rotY": 0.000146621693,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Declare Blockers Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/dZ5WStI.png",
        "ImageSecondaryURL": "http://i.imgur.com/lsfN7ce.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatBlockSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Block'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "17e1de"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -17.89674,
        "posY": 0.7700976,
        "posZ": 26.8114929,
        "rotX": -2.27974866E-08,
        "rotY": 0.000146621693,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Combat Damage Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/rk33RqC.png",
        "ImageSecondaryURL": "http://i.imgur.com/pnQD58s.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatDamageSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Damage'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "907ad8"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -19.39674,
        "posY": 0.7700976,
        "posZ": 26.8114929,
        "rotX": -2.27974866E-08,
        "rotY": 0.000146621693,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "End of Combat Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/CcTGpLb.png",
        "ImageSecondaryURL": "http://i.imgur.com/4Ko4rcf.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatEndSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'End'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "6e25d7"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -21.09674,
        "posY": 0.7700976,
        "posZ": 26.8114948,
        "rotX": -2.27974866E-08,
        "rotY": 0.000146621693,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Main Phase 2",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/hnAgIDT.png",
        "ImageSecondaryURL": "http://i.imgur.com/4TCWZPX.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'main2Swap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Main2'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "dc423a"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -22.7967415,
        "posY": 0.7700976,
        "posZ": 26.8114948,
        "rotX": -2.27974866E-08,
        "rotY": 0.000146621693,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Ending Phase",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/FTFINuv.png",
        "ImageSecondaryURL": "http://i.imgur.com/HxtYASE.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'endSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Ending'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "b81974"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -24.69674,
        "posY": 0.7700976,
        "posZ": 26.8114948,
        "rotX": -2.27974866E-08,
        "rotY": 0.000146621693,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Pass Turn",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/ATvvd1g.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'passButton'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Pass'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "e9824b"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 22.3623333,
        "posY": 0.8399152,
        "posZ": 10.1389818,
        "rotX": 7.520111E-07,
        "rotY": 359.989319,
        "rotZ": -5.47732157E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "White Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 0.9682655,
        "b": 0.573170662
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Blue' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "5c5943"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 20.8623333,
        "posY": 0.8399152,
        "posZ": 10.1389818,
        "rotX": 2.78940661E-06,
        "rotY": 359.985535,
        "rotZ": -1.19683436E-05,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Blue Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.350107,
        "g": 0.332743883,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Blue' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "1075cb"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 19.3623333,
        "posY": 0.8399152,
        "posZ": 10.1389818,
        "rotX": 1.913566E-06,
        "rotY": 359.985565,
        "rotZ": 3.711256E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Black Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4477272,
        "g": 0.4477272,
        "b": 0.4477272
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Blue' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "716b5f"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 17.8623333,
        "posY": 0.8399152,
        "posZ": 10.1389818,
        "rotX": 6.177646E-06,
        "rotY": 359.9856,
        "rotZ": -6.09973858E-06,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Red Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 0.23169899,
        "b": 0.23169899
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Blue' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "193ff7"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 16.3623333,
        "posY": 0.8399152,
        "posZ": 10.1389818,
        "rotX": 1.20923539E-06,
        "rotY": 359.9856,
        "rotZ": -2.67630384E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Green Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.269191682,
        "g": 0.6358885,
        "b": 0.276007473
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Blue' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "526ea5"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 14.8623333,
        "posY": 0.8399152,
        "posZ": 10.1389818,
        "rotX": 3.03773E-07,
        "rotY": 359.989349,
        "rotZ": 2.841023E-06,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Colorless Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Blue' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "5a2f12"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 24.8181,
        "posY": 0.766918361,
        "posZ": 14.2922888,
        "rotX": -9.010847E-05,
        "rotY": 359.9905,
        "rotZ": 0.00261897687,
        "scaleX": 0.692596138,
        "scaleY": 1.0,
        "scaleZ": 0.692596138
      },
      "Nickname": "Player Counter Bar",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/jJHMGN0.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "local basic_buttons = {}\r\nlocal unit = 1\r\nvalue = 0\r\nvalue2 = 0\r\nvalue3 = 0\r\n\r\nbasic_buttons['poison'] = {click_function='poisonUp',function_owner=self,label=tostring(value),position={-1.55,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\nbasic_buttons['exper'] = {click_function='experUp',function_owner=self,label=tostring(value2),position={0,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\nbasic_buttons['energy'] = {click_function='energyUp',function_owner=self,label=tostring(value3),position={1.55,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value, value2=value2, value3=value3}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        value2 = loaded_data.value2\r\n        value3 = loaded_data.value3\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        value2 = 0\r\n        value3 = 0\r\n        unit = 1\r\n\r\n    end\r\n    value = 0\r\n    value2 = 0\r\n    value3 = 0\r\n    for i,v in pairs(basic_buttons) do\r\n        self.createButton(v)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction poisonUp(me, player)\r\n    if editing == 2 then\r\n        experUp(me, player)\r\n    elseif editing == 3 then\r\n        energyUp(me, player)\r\n    end\r\n    if player ~= 'Blue' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {-1.55,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {-1.55,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value)\r\n    basic_button.index = 0\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + magn\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n\r\nfunction experUp(me, player)\r\n    if editing == 1 then\r\n        poisonUp(me, player)\r\n    elseif editing == 3 then\r\n        energyUp(me, player)\r\n    end\r\n    if player ~= 'Blue' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus2'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus2'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 2\r\n    elseif editing == 2 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue2()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value2)\r\n    basic_button.index = 1\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue2(magn)\r\n    value2 = value2 + magn\r\n    updatevalue2()\r\nend\r\n\r\nfunction minus2()\r\n    changevalue2(-1)\r\nend\r\n\r\nfunction plus2()\r\n    changevalue2(1)\r\nend\r\n\r\nfunction energyUp(me, player)\r\n    if editing == 1 then\r\n        poisonUp(me, player)\r\n    elseif editing == 2 then\r\n        experUp(me, player)\r\n    end\r\n    if player ~= 'Blue' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus3'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {1.55,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus3'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {1.55,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 3\r\n    elseif editing == 3 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue3()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value3)\r\n    basic_button.index = 2\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue3(magn)\r\n    value3 = value3 + magn\r\n    updatevalue3()\r\nend\r\n\r\nfunction minus3()\r\n    changevalue3(-1)\r\nend\r\n\r\nfunction plus3()\r\n    changevalue3(1)\r\nend\r\n",
      "LuaScriptState": "{\"value\":0,\"value2\":0,\"value3\":0}",
      "GUID": "d9ac59"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": 24.826,
        "posY": 0.366428554,
        "posZ": 13.1000414,
        "rotX": -0.00261785672,
        "rotY": 89.98567,
        "rotZ": -6.954774E-05,
        "scaleX": 0.6000004,
        "scaleY": 0.6000004,
        "scaleZ": 0.6000004
      },
      "Nickname": "Blue Health Control",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'Plus'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '+1'\r\n   button_parameters.position = {0, 1, -0.7}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'Minus'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '-1'\r\n   button_parameters.position = {0, 1, 0.7}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'PlusFive'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '+5'\r\n   button_parameters.position = {0, 1, -2.1}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'MinusFive'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '-5'\r\n   button_parameters.position = {0, 1, 2.1}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   function Plus(me, player)\r\n       if player ~= 'Blue' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Blue'}\r\n       Global.call('lifePlus', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()+1))\r\n   end\r\n\r\n   function Minus(me, player)\r\n       if player ~= 'Blue' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Blue'}\r\n       Global.call('lifeMinus', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()-1))\r\n   end\r\n\r\n   function PlusFive(me, player)\r\n       if player ~= 'Blue' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Blue'}\r\n       Global.call('lifePlusFive', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()+5))\r\n   end\r\n\r\n   function MinusFive(me, player)\r\n       if player ~= 'Blue' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Blue'}\r\n       Global.call('lifeMinusFive', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()-5))\r\n   end\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "fa9d6f"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 20.97557,
        "posY": 0.7700976,
        "posZ": 26.8096275,
        "rotX": -2.27974866E-08,
        "rotY": 0.000173942462,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Untap Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/w3cxcKB.png",
        "ImageSecondaryURL": "http://i.imgur.com/6t27zrN.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'untapSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Untap'\r\n   button_parameters.position = {0, 0.12, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "aa3fbd"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 19.47557,
        "posY": 0.7700976,
        "posZ": 26.8095741,
        "rotX": -2.27974866E-08,
        "rotY": 0.000173942462,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Upkeep Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/h55lzI2.png",
        "ImageSecondaryURL": "http://i.imgur.com/an3hPGd.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'upkeepSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Upkeep'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "bf0de1"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 17.97557,
        "posY": 0.7700976,
        "posZ": 26.809576,
        "rotX": -2.27974866E-08,
        "rotY": 0.000173942462,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Draw Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/uYChJ1y.png",
        "ImageSecondaryURL": "http://i.imgur.com/Obh0pmO.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'drawSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Draw'\r\n   button_parameters.position = {0, 0.12, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "0cdf48"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 16.2755718,
        "posY": 0.7700976,
        "posZ": 26.8095722,
        "rotX": -2.27974866E-08,
        "rotY": 0.000173942462,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Main Phase 1",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/lLKhz3D.png",
        "ImageSecondaryURL": "http://i.imgur.com/r7xoIjT.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'main1Swap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Main'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "1af23c"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 14.575573,
        "posY": 0.7700976,
        "posZ": 26.8095741,
        "rotX": -2.27974866E-08,
        "rotY": 0.000173942462,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Beginning of Combat Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/l0VzEuD.png",
        "ImageSecondaryURL": "http://i.imgur.com/sobMXMX.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatStartSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Start'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "af228f"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 13.075572,
        "posY": 0.7700976,
        "posZ": 26.8095779,
        "rotX": -2.27974866E-08,
        "rotY": 0.000173942462,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Declare Attackers Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/W9ZhQo9.png",
        "ImageSecondaryURL": "http://i.imgur.com/tw0XchW.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatAttackSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Attack'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "3858b9"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 11.5755749,
        "posY": 0.7700976,
        "posZ": 26.809576,
        "rotX": -2.27974866E-08,
        "rotY": 0.000173942462,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Declare Blockers Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/dZ5WStI.png",
        "ImageSecondaryURL": "http://i.imgur.com/lsfN7ce.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatBlockSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Block'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "fad367"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 10.0755749,
        "posY": 0.7700976,
        "posZ": 26.809576,
        "rotX": -2.27974866E-08,
        "rotY": 0.000173942462,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Combat Damage Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/rk33RqC.png",
        "ImageSecondaryURL": "http://i.imgur.com/pnQD58s.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatDamageSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Damage'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "0b85e6"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 8.575575,
        "posY": 0.7700976,
        "posZ": 26.809576,
        "rotX": -2.27974866E-08,
        "rotY": 0.000173942462,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "End of Combat Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/CcTGpLb.png",
        "ImageSecondaryURL": "http://i.imgur.com/4Ko4rcf.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatEndSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'End'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "03044f"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 6.875576,
        "posY": 0.7700976,
        "posZ": 26.8095779,
        "rotX": -2.27974866E-08,
        "rotY": 0.000173942462,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Main Phase 2",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/hnAgIDT.png",
        "ImageSecondaryURL": "http://i.imgur.com/4TCWZPX.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'main2Swap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Main2'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "b77d7e"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 5.17557526,
        "posY": 0.7700976,
        "posZ": 26.8095779,
        "rotX": -2.27974866E-08,
        "rotY": 0.000173942462,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Ending Phase",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/FTFINuv.png",
        "ImageSecondaryURL": "http://i.imgur.com/HxtYASE.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'endSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Ending'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "bd439f"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 3.27557755,
        "posY": 0.7700976,
        "posZ": 26.8095779,
        "rotX": -2.27974866E-08,
        "rotY": 0.000173942462,
        "rotZ": -6.865512E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Pass Turn",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/ATvvd1g.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'passButton'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Pass'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "171f5d"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -28.1099052,
        "posY": 0.8431167,
        "posZ": -4.965442,
        "rotX": 7.52011147E-07,
        "rotY": 269.989319,
        "rotZ": -5.47732157E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "White Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 0.9682655,
        "b": 0.573170662
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Orange' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "d1d878"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -28.1099052,
        "posY": 0.8431167,
        "posZ": -6.465442,
        "rotX": 2.78940615E-06,
        "rotY": 269.985535,
        "rotZ": -1.19683436E-05,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Blue Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.350107,
        "g": 0.332743883,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Orange' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "155807"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -28.1099052,
        "posY": 0.8431167,
        "posZ": -7.9654417,
        "rotX": 1.913566E-06,
        "rotY": 269.985565,
        "rotZ": 3.71122042E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Black Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4477272,
        "g": 0.4477272,
        "b": 0.4477272
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Orange' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "151bec"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -28.1099052,
        "posY": 0.8431167,
        "posZ": -9.465442,
        "rotX": 6.177646E-06,
        "rotY": 269.985626,
        "rotZ": -6.09973949E-06,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Red Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 0.23169899,
        "b": 0.23169899
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Orange' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "0af1ad"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -28.1099052,
        "posY": 0.8431167,
        "posZ": -10.9654417,
        "rotX": 1.20923551E-06,
        "rotY": 269.985626,
        "rotZ": -2.67628252E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Green Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.269191682,
        "g": 0.6358885,
        "b": 0.276007473
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Orange' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "f17070"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -28.1099052,
        "posY": 0.8431167,
        "posZ": -12.4654417,
        "rotX": 3.037726E-07,
        "rotY": 269.989349,
        "rotZ": 2.841023E-06,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Colorless Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Orange' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "d6e14f"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -32.26321,
        "posY": 0.770119846,
        "posZ": -2.50967479,
        "rotX": -9.010856E-05,
        "rotY": 269.9905,
        "rotZ": 0.00261897477,
        "scaleX": 0.692596138,
        "scaleY": 1.0,
        "scaleZ": 0.692596138
      },
      "Nickname": "Player Counter Bar",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/jJHMGN0.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "local basic_buttons = {}\r\nlocal unit = 1\r\nvalue = 0\r\nvalue2 = 0\r\nvalue3 = 0\r\n\r\nbasic_buttons['poison'] = {click_function='poisonUp',function_owner=self,label=tostring(value),position={-1.55,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\nbasic_buttons['exper'] = {click_function='experUp',function_owner=self,label=tostring(value2),position={0,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\nbasic_buttons['energy'] = {click_function='energyUp',function_owner=self,label=tostring(value3),position={1.55,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value, value2=value2, value3=value3}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        value2 = loaded_data.value2\r\n        value3 = loaded_data.value3\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        value2 = 0\r\n        value3 = 0\r\n        unit = 1\r\n\r\n    end\r\n    value = 0\r\n    value2 = 0\r\n    value3 = 0\r\n    for i,v in pairs(basic_buttons) do\r\n        self.createButton(v)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction poisonUp(me, player)\r\n    if editing == 2 then\r\n        experUp(me, player)\r\n    elseif editing == 3 then\r\n        energyUp(me, player)\r\n    end\r\n    if player ~= 'Orange' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {-1.55,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {-1.55,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value)\r\n    basic_button.index = 0\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + magn\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n\r\nfunction experUp(me, player)\r\n    if editing == 1 then\r\n        poisonUp(me, player)\r\n    elseif editing == 3 then\r\n        energyUp(me, player)\r\n    end\r\n    if player ~= 'Orange' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus2'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus2'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 2\r\n    elseif editing == 2 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue2()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value2)\r\n    basic_button.index = 1\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue2(magn)\r\n    value2 = value2 + magn\r\n    updatevalue2()\r\nend\r\n\r\nfunction minus2()\r\n    changevalue2(-1)\r\nend\r\n\r\nfunction plus2()\r\n    changevalue2(1)\r\nend\r\n\r\nfunction energyUp(me, player)\r\n    if editing == 1 then\r\n        poisonUp(me, player)\r\n    elseif editing == 2 then\r\n        experUp(me, player)\r\n    end\r\n    if player ~= 'Orange' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus3'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {1.55,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus3'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {1.55,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 3\r\n    elseif editing == 3 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue3()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value3)\r\n    basic_button.index = 2\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue3(magn)\r\n    value3 = value3 + magn\r\n    updatevalue3()\r\nend\r\n\r\nfunction minus3()\r\n    changevalue3(-1)\r\nend\r\n\r\nfunction plus3()\r\n    changevalue3(1)\r\nend\r\n",
      "LuaScriptState": "{\"value\":0,\"value2\":0,\"value3\":0}",
      "GUID": "68f270"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": -31.0709648,
        "posY": 0.369630039,
        "posZ": -2.50177526,
        "rotX": -0.00261785672,
        "rotY": 359.9857,
        "rotZ": -6.954774E-05,
        "scaleX": 0.6000004,
        "scaleY": 0.6000004,
        "scaleZ": 0.6000004
      },
      "Nickname": "Orange Health Control",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'Plus'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '+1'\r\n   button_parameters.position = {0, 1, -0.7}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'Minus'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '-1'\r\n   button_parameters.position = {0, 1, 0.7}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'PlusFive'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '+5'\r\n   button_parameters.position = {0, 1, -2.1}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'MinusFive'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '-5'\r\n   button_parameters.position = {0, 1, 2.1}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   function Plus(me, player)\r\n       if player ~= 'Orange' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Orange'}\r\n       Global.call('lifePlus', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()+1))\r\n   end\r\n\r\n   function Minus(me, player)\r\n       if player ~= 'Orange' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Orange'}\r\n       Global.call('lifeMinus', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()-1))\r\n   end\r\n\r\n   function PlusFive(me, player)\r\n       if player ~= 'Orange' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Orange'}\r\n       Global.call('lifePlusFive', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()+5))\r\n   end\r\n\r\n   function MinusFive(me, player)\r\n       if player ~= 'Orange' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Orange'}\r\n       Global.call('lifeMinusFive', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()-5))\r\n   end\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "f6862d"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.78055,
        "posY": 0.7732991,
        "posZ": -6.35220432,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Untap Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/w3cxcKB.png",
        "ImageSecondaryURL": "http://i.imgur.com/6t27zrN.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'untapSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Untap'\r\n   button_parameters.position = {0, 0.12, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "463794"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7804947,
        "posY": 0.7732991,
        "posZ": -7.85220432,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Upkeep Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/h55lzI2.png",
        "ImageSecondaryURL": "http://i.imgur.com/an3hPGd.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'upkeepSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Upkeep'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "78c91a"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7805,
        "posY": 0.7732991,
        "posZ": -9.352203,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Draw Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/uYChJ1y.png",
        "ImageSecondaryURL": "http://i.imgur.com/Obh0pmO.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'drawSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Draw'\r\n   button_parameters.position = {0, 0.12, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "b7cf67"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7804947,
        "posY": 0.7732991,
        "posZ": -11.0522032,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Main Phase 1",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/lLKhz3D.png",
        "ImageSecondaryURL": "http://i.imgur.com/r7xoIjT.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'main1Swap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Main'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "83a732"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7804947,
        "posY": 0.7732991,
        "posZ": -12.752202,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Beginning of Combat Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/l0VzEuD.png",
        "ImageSecondaryURL": "http://i.imgur.com/sobMXMX.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatStartSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Start'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "14446a"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7805023,
        "posY": 0.7732991,
        "posZ": -14.252203,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Declare Attackers Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/W9ZhQo9.png",
        "ImageSecondaryURL": "http://i.imgur.com/tw0XchW.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatAttackSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Attack'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "234de4"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7805,
        "posY": 0.7732991,
        "posZ": -15.7522,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Declare Blockers Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/dZ5WStI.png",
        "ImageSecondaryURL": "http://i.imgur.com/lsfN7ce.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatBlockSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Block'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "466ab4"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7805,
        "posY": 0.7732991,
        "posZ": -17.2522011,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Combat Damage Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/rk33RqC.png",
        "ImageSecondaryURL": "http://i.imgur.com/pnQD58s.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatDamageSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Damage'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "bc2394"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7805,
        "posY": 0.7732991,
        "posZ": -18.7522011,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "End of Combat Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/CcTGpLb.png",
        "ImageSecondaryURL": "http://i.imgur.com/4Ko4rcf.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatEndSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'End'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "83c92f"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7805023,
        "posY": 0.7732991,
        "posZ": -20.452198,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Main Phase 2",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/hnAgIDT.png",
        "ImageSecondaryURL": "http://i.imgur.com/4TCWZPX.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'main2Swap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Main2'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "deba78"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7805023,
        "posY": 0.7732991,
        "posZ": -22.1521988,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Ending Phase",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/FTFINuv.png",
        "ImageSecondaryURL": "http://i.imgur.com/HxtYASE.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'endSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Ending'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "fd4bec"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7805023,
        "posY": 0.7732991,
        "posZ": -24.0521965,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Pass Turn",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/ATvvd1g.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'passButton'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Pass'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "3f7e80"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -28.088974,
        "posY": 0.8425445,
        "posZ": 21.67984,
        "rotX": 7.52010862E-07,
        "rotY": 269.989319,
        "rotZ": -5.477327E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "White Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 0.9682655,
        "b": 0.573170662
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Yellow' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "9f52f3"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -28.088974,
        "posY": 0.8425445,
        "posZ": 20.17984,
        "rotX": 2.7894057E-06,
        "rotY": 269.985535,
        "rotZ": -1.19683455E-05,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Blue Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.350107,
        "g": 0.332743883,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Yellow' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "7740ce"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -28.088974,
        "posY": 0.8425445,
        "posZ": 18.67984,
        "rotX": 1.913566E-06,
        "rotY": 269.985565,
        "rotZ": 3.71122042E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Black Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4477272,
        "g": 0.4477272,
        "b": 0.4477272
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Yellow' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "c7fceb"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -28.088974,
        "posY": 0.8425445,
        "posZ": 17.17984,
        "rotX": 6.177646E-06,
        "rotY": 269.985626,
        "rotZ": -6.09973949E-06,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Red Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 0.23169899,
        "b": 0.23169899
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Yellow' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "9c8f0c"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -28.088974,
        "posY": 0.8425445,
        "posZ": 15.67984,
        "rotX": 1.20923528E-06,
        "rotY": 269.985626,
        "rotZ": -2.67628565E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Green Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.269191682,
        "g": 0.6358885,
        "b": 0.276007473
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Yellow' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "5a37c3"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -28.088974,
        "posY": 0.8425445,
        "posZ": 14.17984,
        "rotX": 3.037726E-07,
        "rotY": 269.989349,
        "rotZ": 2.841023E-06,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Colorless Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Yellow' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "7b9617"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -32.24228,
        "posY": 0.769547641,
        "posZ": 24.1356068,
        "rotX": -9.010856E-05,
        "rotY": 269.9905,
        "rotZ": 0.00261897477,
        "scaleX": 0.692596138,
        "scaleY": 1.0,
        "scaleZ": 0.692596138
      },
      "Nickname": "Player Counter Bar",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/jJHMGN0.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "local basic_buttons = {}\r\nlocal unit = 1\r\nvalue = 0\r\nvalue2 = 0\r\nvalue3 = 0\r\n\r\nbasic_buttons['poison'] = {click_function='poisonUp',function_owner=self,label=tostring(value),position={-1.55,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\nbasic_buttons['exper'] = {click_function='experUp',function_owner=self,label=tostring(value2),position={0,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\nbasic_buttons['energy'] = {click_function='energyUp',function_owner=self,label=tostring(value3),position={1.55,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value, value2=value2, value3=value3}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        value2 = loaded_data.value2\r\n        value3 = loaded_data.value3\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        value2 = 0\r\n        value3 = 0\r\n        unit = 1\r\n\r\n    end\r\n    value = 0\r\n    value2 = 0\r\n    value3 = 0\r\n    for i,v in pairs(basic_buttons) do\r\n        self.createButton(v)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction poisonUp(me, player)\r\n    if editing == 2 then\r\n        experUp(me, player)\r\n    elseif editing == 3 then\r\n        energyUp(me, player)\r\n    end\r\n    if player ~= 'Yellow' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {-1.55,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {-1.55,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value)\r\n    basic_button.index = 0\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + magn\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n\r\nfunction experUp(me, player)\r\n    if editing == 1 then\r\n        poisonUp(me, player)\r\n    elseif editing == 3 then\r\n        energyUp(me, player)\r\n    end\r\n    if player ~= 'Yellow' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus2'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus2'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 2\r\n    elseif editing == 2 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue2()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value2)\r\n    basic_button.index = 1\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue2(magn)\r\n    value2 = value2 + magn\r\n    updatevalue2()\r\nend\r\n\r\nfunction minus2()\r\n    changevalue2(-1)\r\nend\r\n\r\nfunction plus2()\r\n    changevalue2(1)\r\nend\r\n\r\nfunction energyUp(me, player)\r\n    if editing == 1 then\r\n        poisonUp(me, player)\r\n    elseif editing == 2 then\r\n        experUp(me, player)\r\n    end\r\n    if player ~= 'Yellow' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus3'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {1.55,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus3'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {1.55,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 3\r\n    elseif editing == 3 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue3()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value3)\r\n    basic_button.index = 2\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue3(magn)\r\n    value3 = value3 + magn\r\n    updatevalue3()\r\nend\r\n\r\nfunction minus3()\r\n    changevalue3(-1)\r\nend\r\n\r\nfunction plus3()\r\n    changevalue3(1)\r\nend\r\n",
      "LuaScriptState": "{\"value\":0,\"value2\":0,\"value3\":0}",
      "GUID": "daa75c"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": -31.0500336,
        "posY": 0.369057834,
        "posZ": 24.143507,
        "rotX": -0.00261785672,
        "rotY": 359.9857,
        "rotZ": -6.954774E-05,
        "scaleX": 0.6000004,
        "scaleY": 0.6000004,
        "scaleZ": 0.6000004
      },
      "Nickname": "Yellow Health Control",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'Plus'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '+1'\r\n   button_parameters.position = {0, 1, -0.7}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'Minus'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '-1'\r\n   button_parameters.position = {0, 1, 0.7}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'PlusFive'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '+5'\r\n   button_parameters.position = {0, 1, -2.1}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'MinusFive'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '-5'\r\n   button_parameters.position = {0, 1, 2.1}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   function Plus(me, player)\r\n       if player ~= 'Yellow' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Yellow'}\r\n       Global.call('lifePlus', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()+1))\r\n   end\r\n\r\n   function Minus(me, player)\r\n       if player ~= 'Yellow' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Yellow'}\r\n       Global.call('lifeMinus', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()-1))\r\n   end\r\n\r\n   function PlusFive(me, player)\r\n       if player ~= 'Yellow' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Yellow'}\r\n       Global.call('lifePlusFive', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()+5))\r\n   end\r\n\r\n   function MinusFive(me, player)\r\n       if player ~= 'Yellow' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Yellow'}\r\n       Global.call('lifeMinusFive', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()-5))\r\n   end\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "63dc53"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.75962,
        "posY": 0.7727269,
        "posZ": 20.2930775,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Untap Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/w3cxcKB.png",
        "ImageSecondaryURL": "http://i.imgur.com/6t27zrN.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'untapSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Untap'\r\n   button_parameters.position = {0, 0.12, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "73f1fc"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7595673,
        "posY": 0.7727269,
        "posZ": 18.7930775,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Upkeep Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/h55lzI2.png",
        "ImageSecondaryURL": "http://i.imgur.com/an3hPGd.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'upkeepSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Upkeep'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "26f4b5"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7595673,
        "posY": 0.7727269,
        "posZ": 17.29308,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Draw Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/uYChJ1y.png",
        "ImageSecondaryURL": "http://i.imgur.com/Obh0pmO.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'drawSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Draw'\r\n   button_parameters.position = {0, 0.12, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "695153"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7595634,
        "posY": 0.7727269,
        "posZ": 15.5930786,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Main Phase 1",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/lLKhz3D.png",
        "ImageSecondaryURL": "http://i.imgur.com/r7xoIjT.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'main1Swap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Main'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "21a49e"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7595673,
        "posY": 0.7727269,
        "posZ": 13.89308,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Beginning of Combat Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/l0VzEuD.png",
        "ImageSecondaryURL": "http://i.imgur.com/sobMXMX.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatStartSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Start'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "bb0981"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7595673,
        "posY": 0.7727269,
        "posZ": 12.3930788,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Declare Attackers Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/W9ZhQo9.png",
        "ImageSecondaryURL": "http://i.imgur.com/tw0XchW.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatAttackSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Attack'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "f94656"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7595673,
        "posY": 0.7727269,
        "posZ": 10.8930817,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Declare Blockers Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/dZ5WStI.png",
        "ImageSecondaryURL": "http://i.imgur.com/lsfN7ce.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatBlockSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Block'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "4cae27"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7595673,
        "posY": 0.7727269,
        "posZ": 9.393082,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Combat Damage Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/rk33RqC.png",
        "ImageSecondaryURL": "http://i.imgur.com/pnQD58s.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatDamageSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Damage'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "9737a8"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7595673,
        "posY": 0.7727269,
        "posZ": 7.89308167,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "End of Combat Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/CcTGpLb.png",
        "ImageSecondaryURL": "http://i.imgur.com/4Ko4rcf.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatEndSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'End'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "0cf3bd"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7595673,
        "posY": 0.7727269,
        "posZ": 6.193083,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Main Phase 2",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/hnAgIDT.png",
        "ImageSecondaryURL": "http://i.imgur.com/4TCWZPX.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'main2Swap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Main2'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "3da080"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7595673,
        "posY": 0.7727269,
        "posZ": 4.493082,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Ending Phase",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/FTFINuv.png",
        "ImageSecondaryURL": "http://i.imgur.com/HxtYASE.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'endSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Ending'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "04f5cf"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -44.7595673,
        "posY": 0.7727269,
        "posZ": 2.59308434,
        "rotX": -2.27975523E-08,
        "rotY": 270.0002,
        "rotZ": -6.865519E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Pass Turn",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/ATvvd1g.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'passButton'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Pass'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "639758"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 28.0691185,
        "posY": 0.8405351,
        "posZ": 4.93719244,
        "rotX": 7.520112E-07,
        "rotY": 89.9893341,
        "rotZ": -5.47732157E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "White Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 0.9682655,
        "b": 0.573170662
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Purple' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "e6f2cf"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 28.0691185,
        "posY": 0.8405351,
        "posZ": 6.43719244,
        "rotX": 2.78942E-06,
        "rotY": 89.98554,
        "rotZ": -1.19683955E-05,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Blue Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.350107,
        "g": 0.332743883,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Purple' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "123327"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 28.0691185,
        "posY": 0.8405351,
        "posZ": 7.937192,
        "rotX": 1.913567E-06,
        "rotY": 89.9855652,
        "rotZ": 3.71122184E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Black Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4477272,
        "g": 0.4477272,
        "b": 0.4477272
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Purple' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "fe1881"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 28.0691185,
        "posY": 0.8405351,
        "posZ": 9.437192,
        "rotX": 6.177646E-06,
        "rotY": 89.98558,
        "rotZ": -6.09973949E-06,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Red Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 0.23169899,
        "b": 0.23169899
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Purple' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "99b6f6"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 28.0691185,
        "posY": 0.8405351,
        "posZ": 10.937192,
        "rotX": 1.20923573E-06,
        "rotY": 89.9855957,
        "rotZ": -2.67629929E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Green Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.269191682,
        "g": 0.6358885,
        "b": 0.276007473
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Purple' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "0dce49"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 28.0691185,
        "posY": 0.8405351,
        "posZ": 12.437192,
        "rotX": 3.037726E-07,
        "rotY": 89.98935,
        "rotZ": 2.841023E-06,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Colorless Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Purple' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "9bd323"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 32.2224236,
        "posY": 0.767538249,
        "posZ": 2.481425,
        "rotX": -9.010814E-05,
        "rotY": 89.99051,
        "rotZ": 0.00261897733,
        "scaleX": 0.692596138,
        "scaleY": 1.0,
        "scaleZ": 0.692596138
      },
      "Nickname": "Player Counter Bar",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/jJHMGN0.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "local basic_buttons = {}\r\nlocal unit = 1\r\nvalue = 0\r\nvalue2 = 0\r\nvalue3 = 0\r\n\r\nbasic_buttons['poison'] = {click_function='poisonUp',function_owner=self,label=tostring(value),position={-1.55,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\nbasic_buttons['exper'] = {click_function='experUp',function_owner=self,label=tostring(value2),position={0,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\nbasic_buttons['energy'] = {click_function='energyUp',function_owner=self,label=tostring(value3),position={1.55,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value, value2=value2, value3=value3}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        value2 = loaded_data.value2\r\n        value3 = loaded_data.value3\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        value2 = 0\r\n        value3 = 0\r\n        unit = 1\r\n\r\n    end\r\n    value = 0\r\n    value2 = 0\r\n    value3 = 0\r\n    for i,v in pairs(basic_buttons) do\r\n        self.createButton(v)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction poisonUp(me, player)\r\n    if editing == 2 then\r\n        experUp(me, player)\r\n    elseif editing == 3 then\r\n        energyUp(me, player)\r\n    end\r\n    if player ~= 'Purple' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {-1.55,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {-1.55,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value)\r\n    basic_button.index = 0\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + magn\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n\r\nfunction experUp(me, player)\r\n    if editing == 1 then\r\n        poisonUp(me, player)\r\n    elseif editing == 3 then\r\n        energyUp(me, player)\r\n    end\r\n    if player ~= 'Purple' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus2'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus2'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 2\r\n    elseif editing == 2 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue2()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value2)\r\n    basic_button.index = 1\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue2(magn)\r\n    value2 = value2 + magn\r\n    updatevalue2()\r\nend\r\n\r\nfunction minus2()\r\n    changevalue2(-1)\r\nend\r\n\r\nfunction plus2()\r\n    changevalue2(1)\r\nend\r\n\r\nfunction energyUp(me, player)\r\n    if editing == 1 then\r\n        poisonUp(me, player)\r\n    elseif editing == 2 then\r\n        experUp(me, player)\r\n    end\r\n    if player ~= 'Purple' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus3'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {1.55,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus3'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {1.55,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 3\r\n    elseif editing == 3 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue3()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value3)\r\n    basic_button.index = 2\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue3(magn)\r\n    value3 = value3 + magn\r\n    updatevalue3()\r\nend\r\n\r\nfunction minus3()\r\n    changevalue3(-1)\r\nend\r\n\r\nfunction plus3()\r\n    changevalue3(1)\r\nend\r\n",
      "LuaScriptState": "{\"value\":0,\"value2\":0,\"value3\":0}",
      "GUID": "10c8ea"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": 31.0301781,
        "posY": 0.367048442,
        "posZ": 2.47352552,
        "rotX": -0.00261785672,
        "rotY": 179.985687,
        "rotZ": -6.954774E-05,
        "scaleX": 0.6000004,
        "scaleY": 0.6000004,
        "scaleZ": 0.6000004
      },
      "Nickname": "Purple Health Control",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'Plus'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '+1'\r\n   button_parameters.position = {0, 1, -0.7}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'Minus'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '-1'\r\n   button_parameters.position = {0, 1, 0.7}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'PlusFive'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '+5'\r\n   button_parameters.position = {0, 1, -2.1}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'MinusFive'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '-5'\r\n   button_parameters.position = {0, 1, 2.1}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   function Plus(me, player)\r\n       if player ~= 'Purple' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Purple'}\r\n       Global.call('lifePlus', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()+1))\r\n   end\r\n\r\n   function Minus(me, player)\r\n       if player ~= 'Purple' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Purple'}\r\n       Global.call('lifeMinus', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()-1))\r\n   end\r\n\r\n   function PlusFive(me, player)\r\n       if player ~= 'Purple' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Purple'}\r\n       Global.call('lifePlusFive', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()+5))\r\n   end\r\n\r\n   function MinusFive(me, player)\r\n       if player ~= 'Purple' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Purple'}\r\n       Global.call('lifeMinusFive', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()-5))\r\n   end\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "a843d6"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.73976,
        "posY": 0.7707175,
        "posZ": 6.32395458,
        "rotX": -2.27975647E-08,
        "rotY": 90.00021,
        "rotZ": -6.865521E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Untap Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/w3cxcKB.png",
        "ImageSecondaryURL": "http://i.imgur.com/6t27zrN.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'untapSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Untap'\r\n   button_parameters.position = {0, 0.12, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "9ffd58"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.7397079,
        "posY": 0.7707175,
        "posZ": 7.82395458,
        "rotX": -2.27975647E-08,
        "rotY": 90.00021,
        "rotZ": -6.865521E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Upkeep Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/h55lzI2.png",
        "ImageSecondaryURL": "http://i.imgur.com/an3hPGd.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'upkeepSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Upkeep'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "26cc53"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.73971,
        "posY": 0.7707175,
        "posZ": 9.323954,
        "rotX": -2.27975647E-08,
        "rotY": 90.00021,
        "rotZ": -6.865521E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Draw Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/uYChJ1y.png",
        "ImageSecondaryURL": "http://i.imgur.com/Obh0pmO.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'drawSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Draw'\r\n   button_parameters.position = {0, 0.12, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "584641"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.7397079,
        "posY": 0.7707175,
        "posZ": 11.0239534,
        "rotX": -2.27975647E-08,
        "rotY": 90.00021,
        "rotZ": -6.865521E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Main Phase 1",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/lLKhz3D.png",
        "ImageSecondaryURL": "http://i.imgur.com/r7xoIjT.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'main1Swap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Main'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "8a5f5c"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.7397079,
        "posY": 0.7707175,
        "posZ": 12.7239523,
        "rotX": -2.27975647E-08,
        "rotY": 90.00021,
        "rotZ": -6.865521E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Beginning of Combat Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/l0VzEuD.png",
        "ImageSecondaryURL": "http://i.imgur.com/sobMXMX.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatStartSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Start'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "32e7a3"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.7397156,
        "posY": 0.7707175,
        "posZ": 14.2239532,
        "rotX": -2.27975647E-08,
        "rotY": 90.00021,
        "rotZ": -6.865521E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Declare Attackers Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/W9ZhQo9.png",
        "ImageSecondaryURL": "http://i.imgur.com/tw0XchW.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatAttackSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Attack'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "4e8ba5"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.73971,
        "posY": 0.7707175,
        "posZ": 15.72395,
        "rotX": -2.27975647E-08,
        "rotY": 90.00021,
        "rotZ": -6.865521E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Declare Blockers Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/dZ5WStI.png",
        "ImageSecondaryURL": "http://i.imgur.com/lsfN7ce.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatBlockSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Block'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "1d6622"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.73971,
        "posY": 0.7707175,
        "posZ": 17.22395,
        "rotX": -2.27975647E-08,
        "rotY": 90.00021,
        "rotZ": -6.865521E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Combat Damage Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/rk33RqC.png",
        "ImageSecondaryURL": "http://i.imgur.com/pnQD58s.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatDamageSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Damage'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "657c36"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.73971,
        "posY": 0.7707175,
        "posZ": 18.72395,
        "rotX": -2.27975647E-08,
        "rotY": 90.00021,
        "rotZ": -6.865521E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "End of Combat Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/CcTGpLb.png",
        "ImageSecondaryURL": "http://i.imgur.com/4Ko4rcf.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatEndSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'End'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "7572ff"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.7397156,
        "posY": 0.7707175,
        "posZ": 20.42395,
        "rotX": -2.27975647E-08,
        "rotY": 90.00021,
        "rotZ": -6.865521E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Main Phase 2",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/hnAgIDT.png",
        "ImageSecondaryURL": "http://i.imgur.com/4TCWZPX.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'main2Swap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Main2'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "584490"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.7397156,
        "posY": 0.7707175,
        "posZ": 22.123951,
        "rotX": -2.27975647E-08,
        "rotY": 90.00021,
        "rotZ": -6.865521E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Ending Phase",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/FTFINuv.png",
        "ImageSecondaryURL": "http://i.imgur.com/HxtYASE.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'endSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Ending'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "35968f"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.7397156,
        "posY": 0.7707175,
        "posZ": 24.0239487,
        "rotX": -2.27975647E-08,
        "rotY": 90.00021,
        "rotZ": -6.865521E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Pass Turn",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/ATvvd1g.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'passButton'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Pass'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "0ba235"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 28.0968628,
        "posY": 0.841072,
        "posZ": -21.7129078,
        "rotX": 7.520112E-07,
        "rotY": 89.9893341,
        "rotZ": -5.47732157E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "White Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 0.9682655,
        "b": 0.573170662
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Pink' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "286c5e"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 28.0968628,
        "posY": 0.841072,
        "posZ": -20.2129078,
        "rotX": 2.78940661E-06,
        "rotY": 89.98554,
        "rotZ": -1.19683473E-05,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Blue Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.350107,
        "g": 0.332743883,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Pink' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "2d1cfd"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 28.0968628,
        "posY": 0.841072,
        "posZ": -18.7129078,
        "rotX": 1.913567E-06,
        "rotY": 89.9855652,
        "rotZ": 3.71122184E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Black Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4477272,
        "g": 0.4477272,
        "b": 0.4477272
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Pink' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "5f3a5b"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 28.0968628,
        "posY": 0.841072,
        "posZ": -17.2129078,
        "rotX": 6.177646E-06,
        "rotY": 89.98558,
        "rotZ": -6.09973949E-06,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Red Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 0.23169899,
        "b": 0.23169899
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Pink' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "147aad"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 28.0968628,
        "posY": 0.841072,
        "posZ": -15.7129078,
        "rotX": 1.20923585E-06,
        "rotY": 89.9855957,
        "rotZ": -2.676283E-07,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Green Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.269191682,
        "g": 0.6358885,
        "b": 0.276007473
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Pink' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "a62f75"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 28.0968628,
        "posY": 0.841072,
        "posZ": -14.2129078,
        "rotX": 3.037726E-07,
        "rotY": 89.98935,
        "rotZ": 2.841023E-06,
        "scaleX": 0.9509998,
        "scaleY": 0.9509998,
        "scaleZ": 0.9509998
      },
      "Nickname": "Colorless Mana",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "local buttons = {}\r\nlocal value = 0\r\nlocal button_value = {}\r\nbutton_value.index = 0\r\nbutton_value.click_function = 'doNothing'\r\nbutton_value.function_owner = self\r\nbutton_value.label = tostring(value)\r\nbutton_value.position = {0,0.1,0}\r\nbutton_value.width = 400\r\nbutton_value.height = 400\r\nbutton_value.font_size = 350\r\ntable.insert(buttons, button_value)\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        unit = 1\r\n    end\r\n\r\n    for _, button in ipairs(buttons) do\r\n        self.createButton(button)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction doNothing(me, player)\r\n    if player ~= 'Pink' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.1,1.1}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        table.insert(buttons, button_minus)\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.1,-1.1}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        table.insert(buttons, button_plus)\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(1)\r\n        self.removeButton(2)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    button_value.label = tostring(value)\r\n    self.editButton(button_value)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + (magn*unit)\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n",
      "LuaScriptState": "{\"unit\":1,\"value\":0}",
      "GUID": "10e0d4"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 32.2501678,
        "posY": 0.768075168,
        "posZ": -24.1686745,
        "rotX": -9.010814E-05,
        "rotY": 89.99051,
        "rotZ": 0.00261897733,
        "scaleX": 0.692596138,
        "scaleY": 1.0,
        "scaleZ": 0.692596138
      },
      "Nickname": "Player Counter Bar",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/jJHMGN0.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "local basic_buttons = {}\r\nlocal unit = 1\r\nvalue = 0\r\nvalue2 = 0\r\nvalue3 = 0\r\n\r\nbasic_buttons['poison'] = {click_function='poisonUp',function_owner=self,label=tostring(value),position={-1.55,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\nbasic_buttons['exper'] = {click_function='experUp',function_owner=self,label=tostring(value2),position={0,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\nbasic_buttons['energy'] = {click_function='energyUp',function_owner=self,label=tostring(value3),position={1.55,0.21,0.5},rotation={0,0,0},width=500,height=500,font_size=500}\r\n\r\nfunction onSave()\r\n    local data_to_save = {unit=unit, value=value, value2=value2, value3=value3}\r\n    local saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n    editing = 0\r\n    if saved_data ~= nil and saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        value = loaded_data.value\r\n        value2 = loaded_data.value2\r\n        value3 = loaded_data.value3\r\n        unit = loaded_data.unit\r\n    else\r\n        value = 0\r\n        value2 = 0\r\n        value3 = 0\r\n        unit = 1\r\n\r\n    end\r\n    value = 0\r\n    value2 = 0\r\n    value3 = 0\r\n    for i,v in pairs(basic_buttons) do\r\n        self.createButton(v)\r\n    end\r\nend\r\n\r\n-- functions\r\nfunction poisonUp(me, player)\r\n    if editing == 2 then\r\n        experUp(me, player)\r\n    elseif editing == 3 then\r\n        energyUp(me, player)\r\n    end\r\n    if player ~= 'Pink' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {-1.55,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {-1.55,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 1\r\n    elseif editing == 1 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value)\r\n    basic_button.index = 0\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue(magn)\r\n    value = value + magn\r\n    updatevalue()\r\nend\r\n\r\nfunction minus()\r\n    changevalue(-1)\r\nend\r\n\r\nfunction plus()\r\n    changevalue(1)\r\nend\r\n\r\nfunction experUp(me, player)\r\n    if editing == 1 then\r\n        poisonUp(me, player)\r\n    elseif editing == 3 then\r\n        energyUp(me, player)\r\n    end\r\n    if player ~= 'Pink' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus2'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {0,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus2'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {0,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 2\r\n    elseif editing == 2 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue2()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value2)\r\n    basic_button.index = 1\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue2(magn)\r\n    value2 = value2 + magn\r\n    updatevalue2()\r\nend\r\n\r\nfunction minus2()\r\n    changevalue2(-1)\r\nend\r\n\r\nfunction plus2()\r\n    changevalue2(1)\r\nend\r\n\r\nfunction energyUp(me, player)\r\n    if editing == 1 then\r\n        poisonUp(me, player)\r\n    elseif editing == 2 then\r\n        experUp(me, player)\r\n    end\r\n    if player ~= 'Pink' then\r\n        return 1\r\n    end\r\n    if editing == 0 then\r\n        local button_minus = {}\r\n\r\n        button_minus.click_function = 'minus3'\r\n        button_minus.function_owner = self\r\n        button_minus.label = '-1'\r\n        button_minus.position = {1.55,0.21,1.4}\r\n        button_minus.width = 300\r\n        button_minus.height = 300\r\n        button_minus.font_size = 200\r\n        self.createButton(button_minus)\r\n\r\n        local button_plus = {}\r\n\r\n        button_plus.click_function = 'plus3'\r\n        button_plus.function_owner = self\r\n        button_plus.label = '+1'\r\n        button_plus.position = {1.55,0.21,-0.4}\r\n        button_plus.width = 300\r\n        button_plus.height = 300\r\n        button_plus.font_size = 200\r\n        self.createButton(button_plus)\r\n\r\n        editing = 3\r\n    elseif editing == 3 then\r\n        self.removeButton(3)\r\n        self.removeButton(4)\r\n\r\n        editing = 0\r\n    end\r\nend\r\n\r\nfunction updatevalue3()\r\n    local basic_button = {}\r\n    basic_button.label = tostring(value3)\r\n    basic_button.index = 2\r\n    self.editButton(basic_button)\r\nend\r\n\r\nfunction changevalue3(magn)\r\n    value3 = value3 + magn\r\n    updatevalue3()\r\nend\r\n\r\nfunction minus3()\r\n    changevalue3(-1)\r\nend\r\n\r\nfunction plus3()\r\n    changevalue3(1)\r\nend\r\n",
      "LuaScriptState": "{\"value\":0,\"value2\":0,\"value3\":0}",
      "GUID": "5819e0"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": 31.0579224,
        "posY": 0.367585361,
        "posZ": -24.1765747,
        "rotX": -0.00261785672,
        "rotY": 179.985687,
        "rotZ": -6.954774E-05,
        "scaleX": 0.6000004,
        "scaleY": 0.6000004,
        "scaleZ": 0.6000004
      },
      "Nickname": "Pink Health Control",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'Plus'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '+1'\r\n   button_parameters.position = {0, 1, -0.7}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'Minus'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '-1'\r\n   button_parameters.position = {0, 1, 0.7}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'PlusFive'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '+5'\r\n   button_parameters.position = {0, 1, -2.1}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   button_parameters.click_function = 'MinusFive'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = '-5'\r\n   button_parameters.position = {0, 1, 2.1}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 600\r\n   button_parameters.height = 600\r\n   button_parameters.font_size = 500\r\n   self.createButton(button_parameters)\r\n\r\n   function Plus(me, player)\r\n       if player ~= 'Pink' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Pink'}\r\n       Global.call('lifePlus', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()+1))\r\n   end\r\n\r\n   function Minus(me, player)\r\n       if player ~= 'Pink' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Pink'}\r\n       Global.call('lifeMinus', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()-1))\r\n   end\r\n\r\n   function PlusFive(me, player)\r\n       if player ~= 'Pink' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Pink'}\r\n       Global.call('lifePlusFive', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()+5))\r\n   end\r\n\r\n   function MinusFive(me, player)\r\n       if player ~= 'Pink' then\r\n           return 1\r\n       end\r\n       local function_parameters = {lifecolor = 'Pink'}\r\n       Global.call('lifeMinusFive', function_parameters)\r\n       --local health = getObjectFromGUID('7c193a')\r\n       --health.TextTool.setValue(tostring(health.TextTool.getValue()-5))\r\n   end\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "f8949e"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.76751,
        "posY": 0.7712544,
        "posZ": -20.3261452,
        "rotX": -2.279749E-08,
        "rotY": 90.00023,
        "rotZ": -6.8655126E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Untap Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/w3cxcKB.png",
        "ImageSecondaryURL": "http://i.imgur.com/6t27zrN.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'untapSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Untap'\r\n   button_parameters.position = {0, 0.12, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "609c6d"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.7674561,
        "posY": 0.7712544,
        "posZ": -18.8261452,
        "rotX": -2.279749E-08,
        "rotY": 90.00023,
        "rotZ": -6.8655126E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Upkeep Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/h55lzI2.png",
        "ImageSecondaryURL": "http://i.imgur.com/an3hPGd.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'upkeepSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Upkeep'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "fbfe05"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.7674561,
        "posY": 0.7712544,
        "posZ": -17.3261452,
        "rotX": -2.279749E-08,
        "rotY": 90.00023,
        "rotZ": -6.8655126E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Draw Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/uYChJ1y.png",
        "ImageSecondaryURL": "http://i.imgur.com/Obh0pmO.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'drawSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Draw'\r\n   button_parameters.position = {0, 0.12, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "48ae84"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.7674522,
        "posY": 0.7712544,
        "posZ": -15.6261463,
        "rotX": -2.279749E-08,
        "rotY": 90.00023,
        "rotZ": -6.8655126E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Main Phase 1",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/lLKhz3D.png",
        "ImageSecondaryURL": "http://i.imgur.com/r7xoIjT.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'main1Swap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Main'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "b20191"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.7674561,
        "posY": 0.7712544,
        "posZ": -13.9261475,
        "rotX": -2.279749E-08,
        "rotY": 90.00023,
        "rotZ": -6.8655126E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Beginning of Combat Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/l0VzEuD.png",
        "ImageSecondaryURL": "http://i.imgur.com/sobMXMX.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatStartSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Start'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "5d72f5"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.7674561,
        "posY": 0.7712544,
        "posZ": -12.4261465,
        "rotX": -2.279749E-08,
        "rotY": 90.00023,
        "rotZ": -6.8655126E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Declare Attackers Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/W9ZhQo9.png",
        "ImageSecondaryURL": "http://i.imgur.com/tw0XchW.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatAttackSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Attack'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "280831"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.7674561,
        "posY": 0.7712544,
        "posZ": -10.9261494,
        "rotX": -2.279749E-08,
        "rotY": 90.00023,
        "rotZ": -6.8655126E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Declare Blockers Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/dZ5WStI.png",
        "ImageSecondaryURL": "http://i.imgur.com/lsfN7ce.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatBlockSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Block'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "dc2fd6"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.7674561,
        "posY": 0.7712544,
        "posZ": -9.426149,
        "rotX": -2.279749E-08,
        "rotY": 90.00023,
        "rotZ": -6.8655126E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Combat Damage Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/rk33RqC.png",
        "ImageSecondaryURL": "http://i.imgur.com/pnQD58s.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatDamageSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Damage'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "e06629"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.7674561,
        "posY": 0.7712544,
        "posZ": -7.92614937,
        "rotX": -2.279749E-08,
        "rotY": 90.00023,
        "rotZ": -6.8655126E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "End of Combat Step",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/CcTGpLb.png",
        "ImageSecondaryURL": "http://i.imgur.com/4Ko4rcf.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'combatEndSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'End'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "6c0907"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.7674561,
        "posY": 0.7712544,
        "posZ": -6.22615051,
        "rotX": -2.279749E-08,
        "rotY": 90.00023,
        "rotZ": -6.8655126E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Main Phase 2",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/hnAgIDT.png",
        "ImageSecondaryURL": "http://i.imgur.com/4TCWZPX.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'main2Swap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Main2'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "f26ce1"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.7674561,
        "posY": 0.7712544,
        "posZ": -4.52614975,
        "rotX": -2.279749E-08,
        "rotY": 90.00023,
        "rotZ": -6.8655126E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Ending Phase",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/FTFINuv.png",
        "ImageSecondaryURL": "http://i.imgur.com/HxtYASE.png",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'endSwap'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Ending'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "caa425"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": 44.7674561,
        "posY": 0.7712544,
        "posZ": -2.626152,
        "rotX": -2.279749E-08,
        "rotY": 90.00023,
        "rotZ": -6.8655126E-08,
        "scaleX": 0.693888962,
        "scaleY": 1.0,
        "scaleZ": 0.693888962
      },
      "Nickname": "Pass Turn",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "http://i.imgur.com/ATvvd1g.png",
        "ImageSecondaryURL": "",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.2,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'passButton'\r\n   button_parameters.function_owner = Global\r\n   button_parameters.label = 'Pass'\r\n   button_parameters.position = {0, 0.1, 0}\r\n   button_parameters.rotation = {0,180,0}\r\n   button_parameters.width = 900\r\n   button_parameters.height = 900\r\n   button_parameters.font_size = 150\r\n   self.createButton(button_parameters)\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "012ed5"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": 16.5585442,
        "posY": 0.219862163,
        "posZ": -10.1625061,
        "rotX": 1.24808423E-06,
        "rotY": 269.985565,
        "rotZ": 1.66983341E-06,
        "scaleX": 0.725000262,
        "scaleY": 0.725000262,
        "scaleZ": 0.725000262
      },
      "Nickname": "White Mulligan",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'Mulligan'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = 'Mulligan'\r\n   button_parameters.position = {0, 1, 0}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 2000\r\n   button_parameters.height = 400\r\n   button_parameters.font_size = 300\r\n   self.createButton(button_parameters)\r\nend\r\n\r\nfunction Mulligan(me, player)\r\n    if player ~= 'White' then\r\n        return 1\r\n    end\r\n    local deckzone = getObjectFromGUID('70b368')\r\n    local zoneobjects = deckzone.getObjects()\r\n\r\n    for i, v in ipairs(zoneobjects) do\r\n        if v.tag == \"Deck\" then\r\n           local handzone = getObjectFromGUID('04f3c1')\r\n           count = handzone.getObjects()\r\n           v.reset()\r\n           v.shuffle()\r\n           v.shuffle()\r\n           v.shuffle()\r\n           local parameters = {}\r\n           parameters.identifier = 'timer1'\r\n           parameters.function_name = 'mulliganNow'\r\n           parameters.function_owner = self\r\n           parameters.delay = 0.5\r\n           parameters.repetitions = 1\r\n           Timer.create(parameters)\r\n           deck = v\r\n        end\r\n    end\r\nend\r\n\r\nfunction mulliganNow()\r\n    if #count == 0 then\r\n        deck.dealToColor(7, 'White')\r\n    else\r\n        deck.dealToColor((#count - 1), 'White')\r\n    end\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "eab438"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": 28.1006222,
        "posY": 0.231886268,
        "posZ": 15.88709,
        "rotX": 1.24808446E-06,
        "rotY": 179.985565,
        "rotZ": 1.66984671E-06,
        "scaleX": 0.725000262,
        "scaleY": 0.725000262,
        "scaleZ": 0.725000262
      },
      "Nickname": "Purple Mulligan",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'Mulligan'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = 'Mulligan'\r\n   button_parameters.position = {0, 1, 0}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 2000\r\n   button_parameters.height = 400\r\n   button_parameters.font_size = 300\r\n   self.createButton(button_parameters)\r\nend\r\n\r\nfunction Mulligan(me, player)\r\n    if player ~= 'Purple' then\r\n        return 1\r\n    end\r\n    local deckzone = getObjectFromGUID('94eb62')\r\n    local zoneobjects = deckzone.getObjects()\r\n\r\n    for i, v in ipairs(zoneobjects) do\r\n        if v.tag == \"Deck\" then\r\n           local handzone = getObjectFromGUID('f57821')\r\n           count = handzone.getObjects()\r\n           v.reset()\r\n           v.shuffle()\r\n           v.shuffle()\r\n           v.shuffle()\r\n           local parameters = {}\r\n           parameters.identifier = 'timer1'\r\n           parameters.function_name = 'mulliganNow'\r\n           parameters.function_owner = self\r\n           parameters.delay = 0.5\r\n           parameters.repetitions = 1\r\n           Timer.create(parameters)\r\n           deck = v\r\n        end\r\n    end\r\nend\r\n\r\nfunction mulliganNow()\r\n    if #count == 0 then\r\n        deck.dealToColor(7, 'Purple')\r\n    else\r\n        deck.dealToColor((#count - 1), 'Purple')\r\n    end\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "aaf76f"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": 28.1283665,
        "posY": 0.221334159,
        "posZ": -10.7630081,
        "rotX": 1.24808435E-06,
        "rotY": 179.985565,
        "rotZ": 1.66984671E-06,
        "scaleX": 0.725000262,
        "scaleY": 0.725000262,
        "scaleZ": 0.725000262
      },
      "Nickname": "Pink Mulligan",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'Mulligan'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = 'Mulligan'\r\n   button_parameters.position = {0, 1, 0}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 2000\r\n   button_parameters.height = 400\r\n   button_parameters.font_size = 300\r\n   self.createButton(button_parameters)\r\nend\r\n\r\nfunction Mulligan(me, player)\r\n    if player ~= 'Pink' then\r\n        return 1\r\n    end\r\n    local deckzone = getObjectFromGUID('c8c327')\r\n    local zoneobjects = deckzone.getObjects()\r\n\r\n    for i, v in ipairs(zoneobjects) do\r\n        if v.tag == \"Deck\" then\r\n           local handzone = getObjectFromGUID('7174a5')\r\n           count = handzone.getObjects()\r\n           v.reset()\r\n           v.shuffle()\r\n           v.shuffle()\r\n           v.shuffle()\r\n           local parameters = {}\r\n           parameters.identifier = 'timer1'\r\n           parameters.function_name = 'mulliganNow'\r\n           parameters.function_owner = self\r\n           parameters.delay = 0.5\r\n           parameters.repetitions = 1\r\n           Timer.create(parameters)\r\n           deck = v\r\n        end\r\n    end\r\nend\r\n\r\nfunction mulliganNow()\r\n    if #count == 0 then\r\n        deck.dealToColor(7, 'Pink')\r\n    else\r\n        deck.dealToColor((#count - 1), 'Pink')\r\n    end\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "afa42c"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": -28.1414089,
        "posY": 0.223885477,
        "posZ": -15.9153414,
        "rotX": 1.24808423E-06,
        "rotY": 359.985565,
        "rotZ": 1.6698466E-06,
        "scaleX": 0.725000262,
        "scaleY": 0.725000262,
        "scaleZ": 0.725000262
      },
      "Nickname": "Orange Mulligan",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'Mulligan'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = 'Mulligan'\r\n   button_parameters.position = {0, 1, 0}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 2000\r\n   button_parameters.height = 400\r\n   button_parameters.font_size = 300\r\n   self.createButton(button_parameters)\r\nend\r\n\r\nfunction Mulligan(me, player)\r\n    if player ~= 'Orange' then\r\n        return 1\r\n    end\r\n    local deckzone = getObjectFromGUID('96f290')\r\n    local zoneobjects = deckzone.getObjects()\r\n\r\n    for i, v in ipairs(zoneobjects) do\r\n        if v.tag == \"Deck\" then\r\n           local handzone = getObjectFromGUID('fdd9e6')\r\n           count = handzone.getObjects()\r\n           v.reset()\r\n           v.shuffle()\r\n           v.shuffle()\r\n           v.shuffle()\r\n           local parameters = {}\r\n           parameters.identifier = 'timer1'\r\n           parameters.function_name = 'mulliganNow'\r\n           parameters.function_owner = self\r\n           parameters.delay = 0.5\r\n           parameters.repetitions = 1\r\n           Timer.create(parameters)\r\n           deck = v\r\n        end\r\n    end\r\nend\r\n\r\nfunction mulliganNow()\r\n    if #count == 0 then\r\n        deck.dealToColor(7, 'Orange')\r\n    else\r\n        deck.dealToColor((#count - 1), 'Orange')\r\n    end\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "d8ba0a"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": -28.1204777,
        "posY": 0.223443449,
        "posZ": 10.72994,
        "rotX": 1.24808423E-06,
        "rotY": 359.985565,
        "rotZ": 1.66984648E-06,
        "scaleX": 0.725000262,
        "scaleY": 0.725000262,
        "scaleZ": 0.725000262
      },
      "Nickname": "Yellow Mulligan",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'Mulligan'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = 'Mulligan'\r\n   button_parameters.position = {0, 1, 0}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 2000\r\n   button_parameters.height = 400\r\n   button_parameters.font_size = 300\r\n   self.createButton(button_parameters)\r\nend\r\n\r\nfunction Mulligan(me, player)\r\n    if player ~= 'Yellow' then\r\n        return 1\r\n    end\r\n    local deckzone = getObjectFromGUID('acc668')\r\n    local zoneobjects = deckzone.getObjects()\r\n\r\n    for i, v in ipairs(zoneobjects) do\r\n        if v.tag == \"Deck\" then\r\n           local handzone = getObjectFromGUID('eafe93')\r\n           count = handzone.getObjects()\r\n           v.reset()\r\n           v.shuffle()\r\n           v.shuffle()\r\n           v.shuffle()\r\n           local parameters = {}\r\n           parameters.identifier = 'timer1'\r\n           parameters.function_name = 'mulliganNow'\r\n           parameters.function_owner = self\r\n           parameters.delay = 0.5\r\n           parameters.repetitions = 1\r\n           Timer.create(parameters)\r\n           deck = v\r\n        end\r\n    end\r\nend\r\n\r\nfunction mulliganNow()\r\n    if #count == 0 then\r\n        deck.dealToColor(7, 'Yellow')\r\n    else\r\n        deck.dealToColor((#count - 1), 'Yellow')\r\n    end\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "d9daf5"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": -11.4434872,
        "posY": 0.219812572,
        "posZ": -10.1745872,
        "rotX": 1.24808423E-06,
        "rotY": 269.985565,
        "rotZ": 1.66983341E-06,
        "scaleX": 0.725000262,
        "scaleY": 0.725000262,
        "scaleZ": 0.725000262
      },
      "Nickname": "Red Mulligan",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'Mulligan'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = 'Mulligan'\r\n   button_parameters.position = {0, 1, 0}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 2000\r\n   button_parameters.height = 400\r\n   button_parameters.font_size = 300\r\n   self.createButton(button_parameters)\r\nend\r\n\r\nfunction Mulligan(me, player)\r\n    if player ~= 'Red' then\r\n        return 1\r\n    end\r\n    local deckzone = getObjectFromGUID('21753e')\r\n    local zoneobjects = deckzone.getObjects()\r\n\r\n    for i, v in ipairs(zoneobjects) do\r\n        if v.tag == \"Deck\" then\r\n           local handzone = getObjectFromGUID('9ae9a7')\r\n           count = handzone.getObjects()\r\n           v.reset()\r\n           v.shuffle()\r\n           v.shuffle()\r\n           v.shuffle()\r\n           local parameters = {}\r\n           parameters.identifier = 'timer1'\r\n           parameters.function_name = 'mulliganNow'\r\n           parameters.function_owner = self\r\n           parameters.delay = 0.5\r\n           parameters.repetitions = 1\r\n           Timer.create(parameters)\r\n           deck = v\r\n        end\r\n    end\r\nend\r\n\r\nfunction mulliganNow()\r\n    if #count == 0 then\r\n        deck.dealToColor(7, 'Red')\r\n    else\r\n        deck.dealToColor((#count - 1), 'Red')\r\n    end\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "d74840"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": -16.5598831,
        "posY": 0.221866548,
        "posZ": 10.1724033,
        "rotX": 1.24808412E-06,
        "rotY": 89.98557,
        "rotZ": 1.66983352E-06,
        "scaleX": 0.725000262,
        "scaleY": 0.725000262,
        "scaleZ": 0.725000262
      },
      "Nickname": "Green Mulligan",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'Mulligan'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = 'Mulligan'\r\n   button_parameters.position = {0, 1, 0}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 2000\r\n   button_parameters.height = 400\r\n   button_parameters.font_size = 300\r\n   self.createButton(button_parameters)\r\nend\r\n\r\nfunction Mulligan(me, player)\r\n    if player ~= 'Green' then\r\n        return 1\r\n    end\r\n    local deckzone = getObjectFromGUID('ec567c')\r\n    local zoneobjects = deckzone.getObjects()\r\n\r\n    for i, v in ipairs(zoneobjects) do\r\n        if v.tag == \"Deck\" then\r\n           local handzone = getObjectFromGUID('3cff9a')\r\n           count = handzone.getObjects()\r\n           v.reset()\r\n           v.shuffle()\r\n           v.shuffle()\r\n           v.shuffle()\r\n           local parameters = {}\r\n           parameters.identifier = 'timer1'\r\n           parameters.function_name = 'mulliganNow'\r\n           parameters.function_owner = self\r\n           parameters.delay = 0.5\r\n           parameters.repetitions = 1\r\n           Timer.create(parameters)\r\n           deck = v\r\n        end\r\n    end\r\nend\r\n\r\nfunction mulliganNow()\r\n    if #count == 0 then\r\n        deck.dealToColor(7, 'Green')\r\n    else\r\n        deck.dealToColor((#count - 1), 'Green')\r\n    end\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "74b575"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": 11.4124336,
        "posY": 0.2226829,
        "posZ": 10.1704865,
        "rotX": 1.24808412E-06,
        "rotY": 89.98557,
        "rotZ": 1.66983352E-06,
        "scaleX": 0.725000262,
        "scaleY": 0.725000262,
        "scaleZ": 0.725000262
      },
      "Nickname": "Blue Mulligan",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'Mulligan'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = 'Mulligan'\r\n   button_parameters.position = {0, 1, 0}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 2000\r\n   button_parameters.height = 400\r\n   button_parameters.font_size = 300\r\n   self.createButton(button_parameters)\r\nend\r\n\r\nfunction Mulligan(me, player)\r\n    if player ~= 'Blue' then\r\n        return 1\r\n    end\r\n    local deckzone = getObjectFromGUID('4a7c30')\r\n    local zoneobjects = deckzone.getObjects()\r\n\r\n    for i, v in ipairs(zoneobjects) do\r\n        if v.tag == \"Deck\" then\r\n           local handzone = getObjectFromGUID('098db4')\r\n           count = handzone.getObjects()\r\n           v.reset()\r\n           v.shuffle()\r\n           v.shuffle()\r\n           v.shuffle()\r\n           local parameters = {}\r\n           parameters.identifier = 'timer1'\r\n           parameters.function_name = 'mulliganNow'\r\n           parameters.function_owner = self\r\n           parameters.delay = 0.5\r\n           parameters.repetitions = 1\r\n           Timer.create(parameters)\r\n           deck = v\r\n        end\r\n    end\r\nend\r\n\r\nfunction mulliganNow()\r\n    if #count == 0 then\r\n        deck.dealToColor(7, 'Blue')\r\n    else\r\n        deck.dealToColor((#count - 1), 'Blue')\r\n    end\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "917101"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": -24.8359337,
        "posY": 0.971194446,
        "posZ": -10.8279934,
        "rotX": 90.0,
        "rotY": -2.411839E-06,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "40",
        "colorstate": {
          "r": 0.856,
          "g": 0.1,
          "b": 0.094
        },
        "fontSize": 150
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "JointFixed": {
        "ConnectedBodyGUID": "ac85bb",
        "EnableCollision": false,
        "Axis": {
          "x": 1.0,
          "y": 0.0,
          "z": 0.0
        },
        "Anchor": {
          "x": 0.0,
          "y": 0.0,
          "z": 0.0
        },
        "ConnectedAnchor": {
          "x": 1.43285644,
          "y": 0.21113874,
          "z": -1.00765824
        },
        "BreakForce": Infinity,
        "BreakTorgue": Infinity
      },
      "GUID": "087896"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": -28.7512741,
        "posY": 0.971205,
        "posZ": -2.53859854,
        "rotX": 90.0,
        "rotY": 89.99983,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "40",
        "colorstate": {
          "r": 0.956,
          "g": 0.392,
          "b": 0.113
        },
        "fontSize": 150
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "JointFixed": {
        "ConnectedBodyGUID": "0a8b1f",
        "EnableCollision": false,
        "Axis": {
          "x": 1.0,
          "y": 0.0,
          "z": 0.0
        },
        "Anchor": {
          "x": 0.0,
          "y": 0.0,
          "z": 0.0
        },
        "ConnectedAnchor": {
          "x": 1.43077576,
          "y": 0.210009426,
          "z": -1.01342213
        },
        "BreakForce": Infinity,
        "BreakTorgue": Infinity
      },
      "GUID": "718363"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": -28.73603,
        "posY": 0.9711948,
        "posZ": 24.11326,
        "rotX": 90.0,
        "rotY": 89.9995651,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "40",
        "colorstate": {
          "r": 0.905,
          "g": 0.898,
          "b": 0.172
        },
        "fontSize": 150
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "JointFixed": {
        "ConnectedBodyGUID": "fee590",
        "EnableCollision": false,
        "Axis": {
          "x": 1.0,
          "y": 0.0,
          "z": 0.0
        },
        "Anchor": {
          "x": 0.0,
          "y": 0.0,
          "z": 0.0
        },
        "ConnectedAnchor": {
          "x": 1.43164253,
          "y": 0.21116589,
          "z": -1.0126816
        },
        "BreakForce": Infinity,
        "BreakTorgue": Infinity
      },
      "GUID": "6856ac"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": -3.17801523,
        "posY": 0.971259356,
        "posZ": 10.80538,
        "rotX": 90.0,
        "rotY": 180.000778,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "40",
        "colorstate": {
          "r": 0.192,
          "g": 0.701,
          "b": 0.168
        },
        "fontSize": 150
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "JointFixed": {
        "ConnectedBodyGUID": "fa2540",
        "EnableCollision": false,
        "Axis": {
          "x": 1.0,
          "y": 0.0,
          "z": 0.0
        },
        "Anchor": {
          "x": 0.0,
          "y": 0.0,
          "z": 0.0
        },
        "ConnectedAnchor": {
          "x": 1.43152177,
          "y": 0.211134657,
          "z": -1.01026642
        },
        "BreakForce": Infinity,
        "BreakTorgue": Infinity
      },
      "GUID": "844a31"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": 24.7774754,
        "posY": 0.971260846,
        "posZ": 10.7825375,
        "rotX": 90.0,
        "rotY": 180.000778,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "40",
        "colorstate": {
          "r": 0.118,
          "g": 0.53,
          "b": 1.0
        },
        "fontSize": 150
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "JointFixed": {
        "ConnectedBodyGUID": "910ce3",
        "EnableCollision": false,
        "Axis": {
          "x": 1.0,
          "y": 0.0,
          "z": 0.0
        },
        "Anchor": {
          "x": 0.0,
          "y": 0.0,
          "z": 0.0
        },
        "ConnectedAnchor": {
          "x": 1.42928076,
          "y": 0.211128369,
          "z": -1.01305783
        },
        "BreakForce": Infinity,
        "BreakTorgue": Infinity
      },
      "GUID": "0461cf"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": 28.7553024,
        "posY": 0.9712003,
        "posZ": 2.50325346,
        "rotX": 90.0,
        "rotY": 270.000061,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "40",
        "colorstate": {
          "r": 0.627,
          "g": 0.125,
          "b": 0.941
        },
        "fontSize": 150
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "JointFixed": {
        "ConnectedBodyGUID": "77fe40",
        "EnableCollision": false,
        "Axis": {
          "x": 1.0,
          "y": 0.0,
          "z": 0.0
        },
        "Anchor": {
          "x": 0.0,
          "y": 0.0,
          "z": 0.0
        },
        "ConnectedAnchor": {
          "x": 1.43169713,
          "y": 0.21113874,
          "z": -1.00752854
        },
        "BreakForce": Infinity,
        "BreakTorgue": Infinity
      },
      "GUID": "960355"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": 28.7678,
        "posY": 0.9711764,
        "posZ": -24.1431065,
        "rotX": 90.0,
        "rotY": 269.999939,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "40",
        "colorstate": {
          "r": 0.96,
          "g": 0.439,
          "b": 0.807
        },
        "fontSize": 150
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "JointFixed": {
        "ConnectedBodyGUID": "a0731c",
        "EnableCollision": false,
        "Axis": {
          "x": 1.0,
          "y": 0.0,
          "z": 0.0
        },
        "Anchor": {
          "x": 0.0,
          "y": 0.0,
          "z": 0.0
        },
        "ConnectedAnchor": {
          "x": 1.431201,
          "y": 0.210033521,
          "z": -1.00954139
        },
        "BreakForce": Infinity,
        "BreakTorgue": Infinity
      },
      "GUID": "9a0784"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": 27.7007065,
        "posY": 0.96113807,
        "posZ": -4.81084728,
        "rotX": 90.0,
        "rotY": 270.0001,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "0 Cards in Hand",
        "colorstate": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "fontSize": 64
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "82bc68"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": 27.63607,
        "posY": 0.961129367,
        "posZ": 21.9574242,
        "rotX": 90.0,
        "rotY": 270.0001,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "0 Cards in Hand",
        "colorstate": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "fontSize": 64
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "f5c664"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": 5.39852667,
        "posY": 0.961145163,
        "posZ": 9.632704,
        "rotX": 90.0,
        "rotY": 179.8,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "0 Cards in Hand",
        "colorstate": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "fontSize": 64
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "350dd7"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": -22.469347,
        "posY": 0.961145163,
        "posZ": 9.605125,
        "rotX": 90.0,
        "rotY": 179.8,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "0 Cards in Hand",
        "colorstate": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "fontSize": 64
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "c66e04"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": -27.6251373,
        "posY": 0.9611408,
        "posZ": 4.690195,
        "rotX": 90.0,
        "rotY": 89.9999847,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "0 Cards in Hand",
        "colorstate": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "fontSize": 64
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "02419e"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": -27.6439056,
        "posY": 0.961138666,
        "posZ": -21.9918041,
        "rotX": 90.0,
        "rotY": 89.9999847,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "0 Cards in Hand",
        "colorstate": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "fontSize": 64
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "075074"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": -5.39306927,
        "posY": 0.961145163,
        "posZ": -9.71339,
        "rotX": 90.0,
        "rotY": 4.225963E-06,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "0 Cards in Hand",
        "colorstate": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "fontSize": 64
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "9606a2"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": 15.4995565,
        "posY": 0.2694874,
        "posZ": -18.426178,
        "rotX": 1.24808423E-06,
        "rotY": 269.985565,
        "rotZ": 1.66983341E-06,
        "scaleX": 0.725000262,
        "scaleY": 0.725000262,
        "scaleZ": 0.725000262
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'readyUp'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = 'Ready to Play'\r\n   button_parameters.position = {0, 2, 0}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 2000\r\n   button_parameters.height = 400\r\n   button_parameters.font_size = 300\r\n   self.createButton(button_parameters)\r\nend\r\n\r\nfunction readyUp(me, player)\r\n    local function_parameters = {sitcolor = 'White'}\r\n    Global.call('sitPlayer', function_parameters)\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'quitGame'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede'\r\n    button_parameters.position = {-11.5, 1, 18}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.removeButton(0)\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction quitGame()\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'doNothing'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede?'\r\n    button_parameters.position = {-1,2,0}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.removeButton(0)\r\n    self.createButton(button_parameters)\r\n\r\n    button_parameters.click_function = 'confirmQuit'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Yes'\r\n    button_parameters.position = {1,2,1.5}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 600\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\n\r\n    button_parameters.click_function = 'resetButton'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'No'\r\n    button_parameters.position = {1,2,-1.5}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 600\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction resetButton()\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'quitGame'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede'\r\n    button_parameters.position = {-11.5, 1, 18}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction confirmQuit()\r\n    local function_parameters = {leavecolor = 'White'}\r\n    Global.call('leavePlayer', function_parameters)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'readyUp'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Ready to Play'\r\n    button_parameters.position = {0, 2, 0}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction doNothing()\r\n    --You guessed it\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "b53ceb"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": -12.5024748,
        "posY": 0.269488364,
        "posZ": -18.43826,
        "rotX": 1.24808423E-06,
        "rotY": 269.985565,
        "rotZ": 1.66983341E-06,
        "scaleX": 0.725000262,
        "scaleY": 0.725000262,
        "scaleZ": 0.725000262
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'readyUp'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = 'Ready to Play'\r\n   button_parameters.position = {0, 2, 0}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 2000\r\n   button_parameters.height = 400\r\n   button_parameters.font_size = 300\r\n   self.createButton(button_parameters)\r\nend\r\n\r\nfunction readyUp(me, player)\r\n    local function_parameters = {sitcolor = 'Red'}\r\n    Global.call('sitPlayer', function_parameters)\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'quitGame'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede'\r\n    button_parameters.position = {-11.5, 1, 18}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.removeButton(0)\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction quitGame()\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'doNothing'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede?'\r\n    button_parameters.position = {-1,2,0}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.removeButton(0)\r\n    self.createButton(button_parameters)\r\n\r\n    button_parameters.click_function = 'confirmQuit'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Yes'\r\n    button_parameters.position = {1,2,1.5}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 600\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\n\r\n    button_parameters.click_function = 'resetButton'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'No'\r\n    button_parameters.position = {1,2,-1.5}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 600\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction resetButton()\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'quitGame'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede'\r\n    button_parameters.position = {-11.5, 1, 18}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction confirmQuit()\r\n    local function_parameters = {leavecolor = 'Red'}\r\n    Global.call('leavePlayer', function_parameters)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'readyUp'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Ready to Play'\r\n    button_parameters.position = {0, 2, 0}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction doNothing()\r\n    --You guessed it\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "5ffad7"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": -15.5008945,
        "posY": 0.268878,
        "posZ": 18.4360752,
        "rotX": 1.24808412E-06,
        "rotY": 89.98557,
        "rotZ": 1.66983352E-06,
        "scaleX": 0.725000262,
        "scaleY": 0.725000262,
        "scaleZ": 0.725000262
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'readyUp'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = 'Ready to Play'\r\n   button_parameters.position = {0, 2, 0}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 2000\r\n   button_parameters.height = 400\r\n   button_parameters.font_size = 300\r\n   self.createButton(button_parameters)\r\nend\r\n\r\nfunction readyUp(me, player)\r\n    local function_parameters = {sitcolor = 'Green'}\r\n    Global.call('sitPlayer', function_parameters)\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'quitGame'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede'\r\n    button_parameters.position = {-11.5, 1, 18}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.removeButton(0)\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction quitGame()\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'doNothing'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede?'\r\n    button_parameters.position = {-1,2,0}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.removeButton(0)\r\n    self.createButton(button_parameters)\r\n\r\n    button_parameters.click_function = 'confirmQuit'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Yes'\r\n    button_parameters.position = {1,2,1.5}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 600\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\n\r\n    button_parameters.click_function = 'resetButton'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'No'\r\n    button_parameters.position = {1,2,-1.5}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 600\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction resetButton()\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'quitGame'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede'\r\n    button_parameters.position = {-11.5, 1, 18}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction confirmQuit()\r\n    local function_parameters = {leavecolor = 'Green'}\r\n    Global.call('leavePlayer', function_parameters)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'readyUp'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Ready to Play'\r\n    button_parameters.position = {0, 2, 0}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction doNothing()\r\n    --You guessed it\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "29bc2c"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": 12.4714212,
        "posY": 0.268878,
        "posZ": 18.4341583,
        "rotX": 1.24808412E-06,
        "rotY": 89.98557,
        "rotZ": 1.66983352E-06,
        "scaleX": 0.725000262,
        "scaleY": 0.725000262,
        "scaleZ": 0.725000262
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'readyUp'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = 'Ready to Play'\r\n   button_parameters.position = {0, 2, 0}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 2000\r\n   button_parameters.height = 400\r\n   button_parameters.font_size = 300\r\n   self.createButton(button_parameters)\r\nend\r\n\r\nfunction readyUp(me, player)\r\n    local function_parameters = {sitcolor = 'Blue'}\r\n    Global.call('sitPlayer', function_parameters)\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'quitGame'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede'\r\n    button_parameters.position = {-11.5, 1, 18}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.removeButton(0)\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction quitGame()\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'doNothing'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede?'\r\n    button_parameters.position = {-1,2,0}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.removeButton(0)\r\n    self.createButton(button_parameters)\r\n\r\n    button_parameters.click_function = 'confirmQuit'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Yes'\r\n    button_parameters.position = {1,2,1.5}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 600\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\n\r\n    button_parameters.click_function = 'resetButton'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'No'\r\n    button_parameters.position = {1,2,-1.5}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 600\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction resetButton()\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'quitGame'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede'\r\n    button_parameters.position = {-11.5, 1, 18}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction confirmQuit()\r\n    local function_parameters = {leavecolor = 'Blue'}\r\n    Global.call('leavePlayer', function_parameters)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'readyUp'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Ready to Play'\r\n    button_parameters.position = {0, 2, 0}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction doNothing()\r\n    --You guessed it\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "9d51c6"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": -36.4050827,
        "posY": 0.2720795,
        "posZ": -14.8563538,
        "rotX": 1.24808423E-06,
        "rotY": 359.985565,
        "rotZ": 1.66984069E-06,
        "scaleX": 0.725000262,
        "scaleY": 0.725000262,
        "scaleZ": 0.725000262
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'readyUp'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = 'Ready to Play'\r\n   button_parameters.position = {0, 2, 0}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 2000\r\n   button_parameters.height = 400\r\n   button_parameters.font_size = 300\r\n   self.createButton(button_parameters)\r\nend\r\n\r\nfunction readyUp(me, player)\r\n    local function_parameters = {sitcolor = 'Orange'}\r\n    Global.call('sitPlayer', function_parameters)\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'quitGame'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede'\r\n    button_parameters.position = {-11.5, 1, 18}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.removeButton(0)\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction quitGame()\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'doNothing'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede?'\r\n    button_parameters.position = {-1,2,0}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.removeButton(0)\r\n    self.createButton(button_parameters)\r\n\r\n    button_parameters.click_function = 'confirmQuit'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Yes'\r\n    button_parameters.position = {1,2,1.5}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 600\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\n\r\n    button_parameters.click_function = 'resetButton'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'No'\r\n    button_parameters.position = {1,2,-1.5}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 600\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction resetButton()\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'quitGame'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede'\r\n    button_parameters.position = {-11.5, 1, 18}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction confirmQuit()\r\n    local function_parameters = {leavecolor = 'Orange'}\r\n    Global.call('leavePlayer', function_parameters)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'readyUp'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Ready to Play'\r\n    button_parameters.position = {0, 2, 0}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction doNothing()\r\n    --You guessed it\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "11041b"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": -36.3841476,
        "posY": 0.2715073,
        "posZ": 11.788928,
        "rotX": 1.24808423E-06,
        "rotY": 359.985565,
        "rotZ": 1.66984069E-06,
        "scaleX": 0.725000262,
        "scaleY": 0.725000262,
        "scaleZ": 0.725000262
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'readyUp'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = 'Ready to Play'\r\n   button_parameters.position = {0, 2, 0}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 2000\r\n   button_parameters.height = 400\r\n   button_parameters.font_size = 300\r\n   self.createButton(button_parameters)\r\nend\r\n\r\nfunction readyUp(me, player)\r\n    local function_parameters = {sitcolor = 'Yellow'}\r\n    Global.call('sitPlayer', function_parameters)\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'quitGame'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede'\r\n    button_parameters.position = {-11.5, 1, 18}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.removeButton(0)\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction quitGame()\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'doNothing'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede?'\r\n    button_parameters.position = {-1,2,0}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.removeButton(0)\r\n    self.createButton(button_parameters)\r\n\r\n    button_parameters.click_function = 'confirmQuit'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Yes'\r\n    button_parameters.position = {1,2,1.5}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 600\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\n\r\n    button_parameters.click_function = 'resetButton'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'No'\r\n    button_parameters.position = {1,2,-1.5}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 600\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction resetButton()\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'quitGame'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede'\r\n    button_parameters.position = {-11.5, 1, 18}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction confirmQuit()\r\n    local function_parameters = {leavecolor = 'Yellow'}\r\n    Global.call('leavePlayer', function_parameters)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'readyUp'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Ready to Play'\r\n    button_parameters.position = {0, 2, 0}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction doNothing()\r\n    --You guessed it\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "49e82f"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": 36.364296,
        "posY": 0.2694979,
        "posZ": 14.828104,
        "rotX": 1.24808423E-06,
        "rotY": 179.985565,
        "rotZ": 1.66984057E-06,
        "scaleX": 0.725000262,
        "scaleY": 0.725000262,
        "scaleZ": 0.725000262
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'readyUp'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = 'Ready to Play'\r\n   button_parameters.position = {0, 2, 0}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 2000\r\n   button_parameters.height = 400\r\n   button_parameters.font_size = 300\r\n   self.createButton(button_parameters)\r\nend\r\n\r\nfunction readyUp(me, player)\r\n    local function_parameters = {sitcolor = 'Purple'}\r\n    Global.call('sitPlayer', function_parameters)\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'quitGame'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede'\r\n    button_parameters.position = {-11.5, 1, 18}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.removeButton(0)\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction quitGame()\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'doNothing'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede?'\r\n    button_parameters.position = {-1,2,0}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.removeButton(0)\r\n    self.createButton(button_parameters)\r\n\r\n    button_parameters.click_function = 'confirmQuit'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Yes'\r\n    button_parameters.position = {1,2,1.5}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 600\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\n\r\n    button_parameters.click_function = 'resetButton'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'No'\r\n    button_parameters.position = {1,2,-1.5}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 600\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction resetButton()\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'quitGame'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede'\r\n    button_parameters.position = {-11.5, 1, 18}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction confirmQuit()\r\n    local function_parameters = {leavecolor = 'Purple'}\r\n    Global.call('leavePlayer', function_parameters)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'readyUp'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Ready to Play'\r\n    button_parameters.position = {0, 2, 0}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction doNothing()\r\n    --You guessed it\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "79e168"
    },
    {
      "Name": "Domino",
      "Transform": {
        "posX": 36.3920364,
        "posY": 0.27003482,
        "posZ": -11.8219957,
        "rotX": 1.24808423E-06,
        "rotY": 179.985565,
        "rotZ": 1.66984057E-06,
        "scaleX": 0.725000262,
        "scaleY": 0.725000262,
        "scaleZ": 0.725000262
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.7867647,
        "g": 0.7867647,
        "b": 0.7867647
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "MeshIndex": 9,
      "LuaScript": "function onLoad(save_state)\r\n   local button_parameters = {}\r\n   button_parameters.click_function = 'readyUp'\r\n   button_parameters.function_owner = self\r\n   button_parameters.label = 'Ready to Play'\r\n   button_parameters.position = {0, 2, 0}\r\n   button_parameters.rotation = {0,-90,0}\r\n   button_parameters.width = 2000\r\n   button_parameters.height = 400\r\n   button_parameters.font_size = 300\r\n   self.createButton(button_parameters)\r\nend\r\n\r\nfunction readyUp(me, player)\r\n    local function_parameters = {sitcolor = 'Pink'}\r\n    Global.call('sitPlayer', function_parameters)\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'quitGame'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede'\r\n    button_parameters.position = {-11.5, 1, 18}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.removeButton(0)\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction quitGame()\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'doNothing'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede?'\r\n    button_parameters.position = {-1,2,0}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.removeButton(0)\r\n    self.createButton(button_parameters)\r\n\r\n    button_parameters.click_function = 'confirmQuit'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Yes'\r\n    button_parameters.position = {1,2,1.5}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 600\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\n\r\n    button_parameters.click_function = 'resetButton'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'No'\r\n    button_parameters.position = {1,2,-1.5}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 600\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction resetButton()\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'quitGame'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Concede'\r\n    button_parameters.position = {-11.5, 1, 18}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction confirmQuit()\r\n    local function_parameters = {leavecolor = 'Pink'}\r\n    Global.call('leavePlayer', function_parameters)\r\n    self.removeButton(0)\r\n    self.removeButton(1)\r\n    self.removeButton(2)\r\n\r\n    local button_parameters = {}\r\n    button_parameters.click_function = 'readyUp'\r\n    button_parameters.function_owner = self\r\n    button_parameters.label = 'Ready to Play'\r\n    button_parameters.position = {0, 2, 0}\r\n    button_parameters.rotation = {0,-90,0}\r\n    button_parameters.width = 2000\r\n    button_parameters.height = 400\r\n    button_parameters.font_size = 300\r\n    self.createButton(button_parameters)\r\nend\r\n\r\nfunction doNothing()\r\n    --You guessed it\r\nend\r\n",
      "LuaScriptState": "",
      "GUID": "750cae"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": -13.6194572,
        "posY": 0.9612174,
        "posZ": -35.0230675,
        "rotX": 90.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "Pull Cards Here to Scry",
        "colorstate": {
          "r": 0.856,
          "g": 0.1,
          "b": 0.094
        },
        "fontSize": 56
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "29d2a9"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": -52.53665,
        "posY": 0.9652236,
        "posZ": -13.5465355,
        "rotX": 90.0,
        "rotY": 89.92408,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "Pull Cards Here to Scry",
        "colorstate": {
          "r": 0.956,
          "g": 0.392,
          "b": 0.113
        },
        "fontSize": 56
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "66f261"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": -52.6674652,
        "posY": 0.9652236,
        "posZ": 13.0480537,
        "rotX": 90.0,
        "rotY": 89.92405,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "Pull Cards Here to Scry",
        "colorstate": {
          "r": 0.905,
          "g": 0.898,
          "b": 0.172
        },
        "fontSize": 56
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "d1e3a5"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": -14.3870811,
        "posY": 0.961218059,
        "posZ": 35.2633,
        "rotX": 90.0,
        "rotY": 180.038986,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "Pull Cards Here to Scry",
        "colorstate": {
          "r": 0.192,
          "g": 0.701,
          "b": 0.168
        },
        "fontSize": 56
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "57404f"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": 13.6111059,
        "posY": 0.961218059,
        "posZ": 35.3223534,
        "rotX": 90.0,
        "rotY": 180.038986,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "Pull Cards Here to Scry",
        "colorstate": {
          "r": 0.118,
          "g": 0.53,
          "b": 1.0
        },
        "fontSize": 56
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "33907c"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": 52.9418678,
        "posY": 0.961218059,
        "posZ": 13.5428276,
        "rotX": 90.0,
        "rotY": 269.919525,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "Pull Cards Here to Scry",
        "colorstate": {
          "r": 0.627,
          "g": 0.125,
          "b": 0.941
        },
        "fontSize": 56
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "fdd8cd"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": 53.0656281,
        "posY": 0.961218059,
        "posZ": -12.92075,
        "rotX": 90.0,
        "rotY": 269.9196,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Text": {
        "Text": "Pull Cards Here to Scry",
        "colorstate": {
          "r": 0.96,
          "g": 0.439,
          "b": 0.807
        },
        "fontSize": 56
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "234fa5"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 3.15481949,
        "posY": 2.74,
        "posZ": -17.03254,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 2.01675987,
        "scaleY": 3.5,
        "scaleZ": 2.98563385
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "70b368"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 15.7683716,
        "posY": 2.74,
        "posZ": -18.4393044,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 21.183075,
        "scaleY": 3.5,
        "scaleZ": 14.4645758
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "49e1a2"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 13.9282026,
        "posY": 3.6112175,
        "posZ": -30.6448975,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 25.0008717,
        "scaleY": 3.5,
        "scaleZ": 1.741293
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "04f3c1"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -24.8575211,
        "posY": 2.74,
        "posZ": -17.04505,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.9039917,
        "scaleY": 3.5,
        "scaleZ": 2.84960175
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "21753e"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -12.2427635,
        "posY": 2.74,
        "posZ": -18.4539833,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 21.26313,
        "scaleY": 3.5,
        "scaleZ": 14.5811567
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "24c60e"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -13.95528,
        "posY": 3.6112175,
        "posZ": -30.5300865,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 24.6541176,
        "scaleY": 3.5,
        "scaleZ": 1.62505913
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "9ae9a7"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -35.0165977,
        "posY": 2.74,
        "posZ": -2.5095458,
        "rotX": 0.0,
        "rotY": 89.9241,
        "rotZ": 0.0,
        "scaleX": 1.86580384,
        "scaleY": 3.5,
        "scaleZ": 2.86132264
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "96f290"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -36.39691,
        "posY": 2.74,
        "posZ": -15.10646,
        "rotX": 0.0,
        "rotY": 89.9241,
        "rotZ": 0.0,
        "scaleX": 21.19404,
        "scaleY": 3.5,
        "scaleZ": 14.5866442
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "407495"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -48.2125473,
        "posY": 3.61522365,
        "posZ": -13.2875376,
        "rotX": 0.0,
        "rotY": 89.9241,
        "rotZ": 0.0,
        "scaleX": 24.73193,
        "scaleY": 3.5,
        "scaleZ": 1.3237437
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "fdd9e6"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -34.9784927,
        "posY": 2.74,
        "posZ": 24.12306,
        "rotX": 0.0,
        "rotY": 89.9241,
        "rotZ": 0.0,
        "scaleX": 1.86166561,
        "scaleY": 3.5,
        "scaleZ": 2.825005
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "acc668"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -36.3643265,
        "posY": 2.74,
        "posZ": 11.5390081,
        "rotX": 0.0,
        "rotY": 89.9241,
        "rotZ": 0.0,
        "scaleX": 21.2428875,
        "scaleY": 3.5,
        "scaleZ": 14.6550417
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "a9fb79"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -48.1774521,
        "posY": 3.61522365,
        "posZ": 13.3877831,
        "rotX": 0.0,
        "rotY": 89.9241,
        "rotZ": 0.0,
        "scaleX": 24.70215,
        "scaleY": 3.5,
        "scaleZ": 1.28892326
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "eafe93"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -3.15222168,
        "posY": 2.74,
        "posZ": 17.0392914,
        "rotX": 0.0,
        "rotY": 180.038528,
        "rotZ": 0.0,
        "scaleX": 1.88692951,
        "scaleY": 3.5,
        "scaleZ": 2.8239758
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "ec567c"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -15.7532215,
        "posY": 2.74,
        "posZ": 18.4447536,
        "rotX": 0.0,
        "rotY": 180.038528,
        "rotZ": 0.0,
        "scaleX": 21.2090969,
        "scaleY": 3.5,
        "scaleZ": 14.5209494
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "698cf2"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -13.9432917,
        "posY": 3.61121774,
        "posZ": 30.1908722,
        "rotX": 0.0,
        "rotY": 180.038528,
        "rotZ": 0.0,
        "scaleX": 24.82054,
        "scaleY": 3.5,
        "scaleZ": 1.17381835
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "3cff9a"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 24.8311729,
        "posY": 2.74,
        "posZ": 17.03431,
        "rotX": 0.0,
        "rotY": 180.038513,
        "rotZ": 0.0,
        "scaleX": 1.92079568,
        "scaleY": 3.5,
        "scaleZ": 2.83469582
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "4a7c30"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 12.2490234,
        "posY": 2.74,
        "posZ": 18.4282265,
        "rotX": 0.0,
        "rotY": 180.038513,
        "rotZ": 0.0,
        "scaleX": 21.1619282,
        "scaleY": 3.5,
        "scaleZ": 14.4927015
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "002040"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 13.9114914,
        "posY": 3.61121774,
        "posZ": 30.126873,
        "rotX": 0.0,
        "rotY": 180.038513,
        "rotZ": 0.0,
        "scaleX": 24.626852,
        "scaleY": 3.5,
        "scaleZ": 1.2625227
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "098db4"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 34.98645,
        "posY": 2.74,
        "posZ": 2.50011873,
        "rotX": 0.0,
        "rotY": 269.919525,
        "rotZ": 0.0,
        "scaleX": 1.896012,
        "scaleY": 3.5,
        "scaleZ": 2.846512
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "94eb62"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 36.3487434,
        "posY": 2.74,
        "posZ": 15.0714378,
        "rotX": 0.0,
        "rotY": 269.919525,
        "rotZ": 0.0,
        "scaleX": 21.1712055,
        "scaleY": 3.5,
        "scaleZ": 14.551383
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "528f38"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 48.18367,
        "posY": 3.61121774,
        "posZ": 13.250886,
        "rotX": 0.0,
        "rotY": 269.919525,
        "rotZ": 0.0,
        "scaleX": 24.8676586,
        "scaleY": 3.5,
        "scaleZ": 1.23783112
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "f57821"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 34.9988022,
        "posY": 2.74,
        "posZ": -24.1691322,
        "rotX": 0.0,
        "rotY": 269.919525,
        "rotZ": 0.0,
        "scaleX": 1.87075,
        "scaleY": 3.5,
        "scaleZ": 2.82416058
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "c8c327"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 36.38633,
        "posY": 2.74,
        "posZ": -11.5733538,
        "rotX": 0.0,
        "rotY": 269.919525,
        "rotZ": 0.0,
        "scaleX": 21.14515,
        "scaleY": 3.5,
        "scaleZ": 14.5022964
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "95665f"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 48.10875,
        "posY": 3.61121774,
        "posZ": -13.335371,
        "rotX": 0.0,
        "rotY": 269.919525,
        "rotZ": 0.0,
        "scaleX": 24.59606,
        "scaleY": 3.5,
        "scaleZ": 1.40362442
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "7174a5"
    },
    {
      "Name": "Custom_Tile",
      "Transform": {
        "posX": -15.7586,
        "posY": 0.960000455,
        "posZ": -0.5148514,
        "rotX": 2.35416149E-08,
        "rotY": 269.988739,
        "rotZ": 3.03553627E-08,
        "scaleX": 4.034723,
        "scaleY": 1.0,
        "scaleZ": 4.034723
      },
      "Nickname": "MTG Encoder",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomImage": {
        "ImageURL": "https://drive.google.com/uc?export=download&id=0B51k_ONdC3CQNHh5bUZYdDZGSXc",
        "ImageSecondaryURL": "https://drive.google.com/uc?export=download&id=0B51k_ONdC3CQS3JlSC1nMTdsVHc",
        "WidthScale": 0.0,
        "CustomTile": {
          "Type": 0,
          "Thickness": 0.195,
          "Stackable": false,
          "Stretch": true
        }
      },
      "LuaScript": "--By Tipsy Hobbit\r\nlocal basic_buttons = {}\r\nlocal encodedObjects = {}\r\nlocal version = 4.4\r\nlocal modAm = 1\nlocal zone = nil\nlocal hasMoved = 1\r\n\r\nfunction onLoad(saved_data)\r\n  --print('MTG Card Encoder '..version)\r\n  basic_buttons['Encoder'] = {click_function='addCards',function_owner=self,label='Add Card',position={0.25,0.1,0.62},rotation={0,0,0},width=480,height=80,font_size=80}\r\n  --The Counter Encoder Button\r\n  basic_buttons['CounterEncode'] = {click_function='toggleCounter',function_owner=self,label='Counters',position={-0.60,0.1,0.15},rotation={0,0,0},width=400,height=80,font_size=80}\r\n  --The Base Stats Encoder Button\r\n  basic_buttons['BasePTEncode'] = {click_function='toggleBasePT',function_owner=self,label='Base P/T',position={-0.60,0.1,-0.2},rotation={0,0,0},width=400,height=80,font_size=80}\r\n  --The Loyalty Encoder Button\r\n  basic_buttons['LoyaltyEncode'] = {click_function='toggleLoyalty',function_owner=self,label='Loyalty',position={-0.60,0.1,0.5},rotation={0,0,0},width=400,height=80,font_size=80}\r\n\r\n  if saved_data ~= nil and saved_data ~= \"\" then\r\n    loaded_data = JSON.decode(saved_data)\r\n    for i,v in pairs(loaded_data) do\r\n      if i ~= nil and v ~= nil and v ~= \"\" then\r\n        encodedObjects[i] = JSON.decode(v)\r\n        encodedObjects[i].this = getObjectFromGUID(i)\r\n        if encodedObjects[i].this == nil then\r\n          Table.remove(encodedObjects,i)\r\n        end\r\n      end\r\n    end\r\n  else\r\n    encodedObjects = {}\r\n  end\r\n  for i,v in pairs(encodedObjects) do\r\n    createButtons(v.this)\r\n  end\r\n\r\n  createEncoderButtons()\r\nend\r\n\r\nfunction onSave()\r\n  local data_to_save = {}\r\n  for i,v in pairs(encodedObjects) do\r\n    --Removing Object reference before encoding.\r\n    if encodedObjects[i].this ~= nil then\r\n      local tempThis = encodedObjects[i].this\r\n      encodedObjects[i].this = \"\"\r\n      data_to_save[i] = JSON.encode(v)\r\n      encodedObjects[i].this = tempThis\r\n    end\r\n  end\r\n  saved_data = JSON.encode(data_to_save)\r\n  return saved_data\r\nend\r\n\r\nfunction onObjectDestroyed(obj)\n  if obj == self then\r\n    for i,v in pairs(encodedObjects) do\r\n      v.this.clearButtons()\r\n      v.this.setName(v.name)\r\n    end\n    if zone ~= nil then\n      destroyObject(zone)\n    end\n  end\r\nend\r\n\r\nfunction doNothing()\r\nend\r\n\r\nfunction createEncoderButtons()\r\n  for i,v in pairs(basic_buttons) do\r\n    self.createButton(v)\r\n  end\r\nend\r\n\nfunction getCards()\n    --print(self.getScale()[1]..\", \"..self.getScale()[2]..\", \"..self.getScale()[3])\n    if hasMoved == 1 then\n        print(\"Reseting Counting Zone\")\n        hasMoved = 0\n        local params = {}\r\n        params.type = \"scriptingTrigger\"\r\n        params.position = self.getPosition()\r\n        params.rotation = self.getRotation()\r\n        params.scale = {1.9*self.getScale()[1], 4*self.getScale()[2], 1.9*self.getScale()[3]}\r\n        zone = spawnObject(params)\n    end\n    if zone ~= nil then\n        return zone.getObjects(), #zone.getObjects()\n    end\n    return {},0\nend\n\nfunction onPickedUp(ply)\n    hasMoved = 1\n    if zone ~= nil then\n        destroyObject(zone)\n    end\nend\n\r\nfunction addCards()\r\n  procobjects, rcds = getCards()\r\n  if rcds==0 then\r\n  else\r\n    for i,v in pairs(procobjects) do\r\n      if v.tag == 'Card' or v.tag == 'Deck' then\r\n        if encodedObjects[v.getGUID()] == nil then\r\n          encodedObjects[v.getGUID()] = {this=v,base={power=0,toughness=0},coun={plusP=0,plusT=0},loyalty=0,toggle={base=0,coun=0,loyalty=0,editing=0},name=v.getName()}\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction toggleBasePT()\r\n  procobjects, rcds = getCards()\r\n  if rcds==0 then\r\n  else\r\n    for i,v in pairs(procobjects) do\r\n      local temp = encodedObjects[v.getGUID()]\r\n      if temp ~= nil then\r\n        temp.toggle.base = (temp.toggle.base+1)%2\r\n        temp.this = getObjectFromGUID(temp.this.getGUID())\r\n        temp.this.clearButtons()\r\n        createButtons(temp.this)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction toggleCounter()\r\n  procobjects, rcds = getCards()\r\n  if rcds==0 then\r\n  else\r\n    for i,v in pairs(procobjects) do\r\n      local temp = encodedObjects[v.getGUID()]\r\n      if temp ~= nil then\r\n        temp.toggle.coun = (temp.toggle.coun+1)%2\r\n        temp.this = getObjectFromGUID(temp.this.getGUID())\r\n        temp.this.clearButtons()\r\n        createButtons(temp.this)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction toggleLoyalty()\r\n  procobjects, rcds = getCards()\r\n  if rcds==0 then\r\n  else\r\n    for i,v in pairs(procobjects) do\r\n      local temp = encodedObjects[v.getGUID()]\r\n      if temp ~= nil then\r\n        temp.this = getObjectFromGUID(temp.this.getGUID())\r\n        temp.toggle.loyalty = (temp.toggle.loyalty+1)%2\r\n        temp.this.clearButtons()\r\n        createButtons(temp.this)\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\nfunction distance ( x, y, x2, y2 )\r\n  local dx, dy = x2 - x, y2 - y\r\n  return math.sqrt ( dx * dx + dy * dy )\r\nend\r\n\r\nfunction updateSize(temp)\r\n  \tsize = #temp*85\r\n  \toffset = (#temp-3)/2*0.15\r\n  \treturn size,offset\r\nend\r\n\r\nfunction createButtons(tar)\r\n  local name = \"\"\r\n  local size = 0\r\n  local offset = 0\r\n  local temp = \"\"\r\n  if encodedObjects[tar.getGUID()].toggle.base == 1 then\r\n    temp = \"\"..encodedObjects[tar.getGUID()].base.power..'/'..encodedObjects[tar.getGUID()].base.toughness\r\n    size,offset = updateSize(temp)\r\n    tar.createButton({\r\n    label=temp, click_function='toggleBaseEditor', function_owner=self,\r\n    position={0.75-offset,0.28,1.4}, height=170, width=size, font_size=150\r\n    })\r\n    name= name..encodedObjects[tar.getGUID()].base.power..'/'..encodedObjects[tar.getGUID()].base.toughness..\" \"\r\n  end\r\n  local symA = (encodedObjects[tar.getGUID()].coun.plusP < 0) and \"\" or \"+\"\r\n  local symB = (encodedObjects[tar.getGUID()].coun.plusT < 0) and \"\" or \"+\"\r\n  if encodedObjects[tar.getGUID()].toggle.coun == 1 then\r\n    temp = symA..encodedObjects[tar.getGUID()].coun.plusP..'/'..symB..encodedObjects[tar.getGUID()].coun.plusT\r\n    size,offset = updateSize(temp)\r\n    tar.createButton({\r\n    label=symA..encodedObjects[tar.getGUID()].coun.plusP..'/'..symB..encodedObjects[tar.getGUID()].coun.plusT, click_function='toggleCounEditor', function_owner=self,\r\n    position={0.75-offset,0.28,1.1}, height=170, width=size, font_size=150\r\n    })\r\n    name=name..\"(\"..symA..encodedObjects[tar.getGUID()].coun.plusP..'/'..symB..encodedObjects[tar.getGUID()].coun.plusT..\") \"\r\n  end\r\n  name=name..encodedObjects[tar.getGUID()].name\r\n  if encodedObjects[tar.getGUID()].toggle.loyalty == 1 then\r\n    tar.createButton({\r\n    label=\"\"..encodedObjects[tar.getGUID()].loyalty, click_function='toggleLoyaEditor', function_owner=self,\r\n    position={-0.8,0.28,1.4}, height=170, width=270, font_size=150\r\n    })\r\n    name=name..\" (\"..encodedObjects[tar.getGUID()].loyalty..\")\"\r\n  end\r\n  tar.setName(name)\r\nend\r\n\r\nfunction toggleBaseEditor(tar)\r\n  encodedObjects[tar.getGUID()].toggle.editing = 1\r\n  toggleDisplay(tar)\r\nend\r\nfunction toggleCounEditor(tar)\r\n  encodedObjects[tar.getGUID()].toggle.editing = 2\r\n  toggleDisplay(tar)\r\nend\r\nfunction toggleLoyaEditor(tar)\r\n  encodedObjects[tar.getGUID()].toggle.editing = 3\r\n  toggleDisplay(tar)\r\nend\r\nfunction toggleEditor(tar)\r\n  encodedObjects[tar.getGUID()].toggle.editing = 0\r\n  tar.clearButtons()\r\n  createButtons(tar)\r\nend\r\n\r\n\r\n--Editor Display\r\nfunction toggleDisplay(tar)\r\n    tar.clearButtons()\r\n    if encodedObjects[tar.getGUID()].toggle.editing == 1 then\r\n      tar.createButton({\r\n      label=\"\"..encodedObjects[tar.getGUID()].base.power..'/'..encodedObjects[tar.getGUID()].base.toughness, click_function='toggleEditor', function_owner=self,\r\n      position={0,0.28,0}, height=400, width=840, font_size=400\r\n      })\r\n    elseif encodedObjects[tar.getGUID()].toggle.editing == 2 then\r\n      tar.createButton({\r\n      label=\"\"..encodedObjects[tar.getGUID()].coun.plusP..'/'..encodedObjects[tar.getGUID()].coun.plusT, click_function='toggleEditor', function_owner=self,\r\n      position={0,0.28,0}, height=400, width=840, font_size=400\r\n      })\r\n    elseif encodedObjects[tar.getGUID()].toggle.editing == 3 then\r\n      tar.createButton({\r\n      label=\"\"..encodedObjects[tar.getGUID()].loyalty, click_function='toggleEditor', function_owner=self,\r\n      position={0,0.28,0}, height=400, width=840, font_size=400\r\n      })\r\n    end\r\n    createModButtons(tar)\r\nend\r\nfunction updateEdDisplay(tar)\r\n  tar.editButton({\r\n  index=1,label=\"\"..modAm, click_function='cycleAm', function_owner=self,\r\n  position={0.0,0.28,-0.9}, height=400, width=800, font_size=240\r\n  })\r\n  if encodedObjects[tar.getGUID()].toggle.editing == 1 then\r\n    tar.editButton({\r\n    index=0,label=\"\"..encodedObjects[tar.getGUID()].base.power..'/'..encodedObjects[tar.getGUID()].base.toughness, click_function='toggleEditor', function_owner=self,\r\n    position={0,0.28,0}, height=400, width=840, font_size=400\r\n    })\r\n  elseif encodedObjects[tar.getGUID()].toggle.editing == 2 then\r\n    tar.editButton({\r\n    index=0,label=\"\"..encodedObjects[tar.getGUID()].coun.plusP..'/'..encodedObjects[tar.getGUID()].coun.plusT, click_function='toggleEditor', function_owner=self,\r\n    position={0,0.28,0}, height=400, width=840, font_size=400\r\n    })\r\n  elseif encodedObjects[tar.getGUID()].toggle.editing == 3 then\r\n    tar.editButton({\r\n    index=0,label=\"\"..encodedObjects[tar.getGUID()].loyalty, click_function='toggleEditor', function_owner=self,\r\n    position={0,0.28,0}, height=400, width=840, font_size=400\r\n    })\r\n  end\r\nend\r\n\r\nfunction createModButtons(tar)\r\n  tar.createButton({\r\n  label= \"\"..modAm, click_function='cycleAm', function_owner=self,\r\n  position={0.0,0.28,-0.9}, height=400, width=800, font_size=240\r\n  })\r\n  tar.createButton({\r\n  label= \"Clear\", click_function='clear', function_owner=self,\r\n  position={0.0,0.28,0.9}, height=400, width=800, font_size=240\r\n  })\r\n  tar.createButton({\r\n  label=\"+\", click_function='addB', function_owner=self,\r\n  position={0.0,0.28,-1.8}, height=400, width=800, font_size=480\r\n  })\r\n  tar.createButton({\r\n  label=\"-\", click_function='subB', function_owner=self,\r\n  position={0,0.28,1.8}, height=400, width=800, font_size=480\r\n  })\r\n  if(encodedObjects[tar.getGUID()].toggle.editing == 1 or encodedObjects[tar.getGUID()].toggle.editing == 2) then\r\n    tar.createButton({\r\n    label=\"+\", click_function='addP', function_owner=self,\r\n    position={-1.8,0.28,-0.45}, height=300, width=300, font_size=480\r\n    })\r\n    tar.createButton({\r\n    label=\"-\", click_function='subP', function_owner=self,\r\n    position={-1.8,0.28,0.45}, height=300, width=300, font_size=480\r\n    })\r\n    tar.createButton({\r\n    label=\"+\", click_function='addT', function_owner=self,\r\n    position={1.8,0.28,-0.45}, height=300, width=300, font_size=480\r\n    })\r\n    tar.createButton({\r\n    label=\"-\", click_function='subT', function_owner=self,\r\n    position={1.8,0.28,0.45}, height=300, width=300, font_size=480\r\n    })\r\n  end\r\nend\r\n\r\n--Editor Functions\r\nfunction clear(tar)\r\n  if(encodedObjects[tar.getGUID()].toggle.editing == 1) then\r\n    encodedObjects[tar.getGUID()].base.power = 0\r\n    encodedObjects[tar.getGUID()].base.toughness = 0\r\n  elseif(encodedObjects[tar.getGUID()].toggle.editing == 2) then\r\n    encodedObjects[tar.getGUID()].coun.plusP = 0\r\n    encodedObjects[tar.getGUID()].coun.plusT = 0\r\n  elseif(encodedObjects[tar.getGUID()].toggle.editing == 3) then\r\n    encodedObjects[tar.getGUID()].loyalty = 0\r\n  end\r\n  updateEdDisplay(tar)\r\nend\r\nfunction addB(tar)\r\n  if(encodedObjects[tar.getGUID()].toggle.editing == 1) then\r\n    encodedObjects[tar.getGUID()].base.power = encodedObjects[tar.getGUID()].base.power + modAm\r\n    encodedObjects[tar.getGUID()].base.toughness = encodedObjects[tar.getGUID()].base.toughness + modAm\r\n  elseif(encodedObjects[tar.getGUID()].toggle.editing == 2) then\r\n    encodedObjects[tar.getGUID()].coun.plusP = encodedObjects[tar.getGUID()].coun.plusP + modAm\r\n    encodedObjects[tar.getGUID()].coun.plusT = encodedObjects[tar.getGUID()].coun.plusT + modAm\r\n  elseif(encodedObjects[tar.getGUID()].toggle.editing == 3) then\r\n    encodedObjects[tar.getGUID()].loyalty = encodedObjects[tar.getGUID()].loyalty + modAm\r\n  end\r\n  updateEdDisplay(tar)\r\nend\r\nfunction subB(tar)\r\n  if(encodedObjects[tar.getGUID()].toggle.editing == 1) then\r\n    encodedObjects[tar.getGUID()].base.power = encodedObjects[tar.getGUID()].base.power - modAm\r\n    encodedObjects[tar.getGUID()].base.toughness = encodedObjects[tar.getGUID()].base.toughness - modAm\r\n  elseif(encodedObjects[tar.getGUID()].toggle.editing == 2) then\r\n    encodedObjects[tar.getGUID()].coun.plusP = encodedObjects[tar.getGUID()].coun.plusP - modAm\r\n    encodedObjects[tar.getGUID()].coun.plusT = encodedObjects[tar.getGUID()].coun.plusT - modAm\r\n  elseif(encodedObjects[tar.getGUID()].toggle.editing == 3) then\r\n    encodedObjects[tar.getGUID()].loyalty = encodedObjects[tar.getGUID()].loyalty - modAm\r\n  end\r\n  updateEdDisplay(tar)\r\nend\r\nfunction addP(tar)\r\n  if(encodedObjects[tar.getGUID()].toggle.editing == 1) then\r\n    encodedObjects[tar.getGUID()].base.power = encodedObjects[tar.getGUID()].base.power + modAm\r\n  elseif(encodedObjects[tar.getGUID()].toggle.editing == 2) then\r\n    encodedObjects[tar.getGUID()].coun.plusP = encodedObjects[tar.getGUID()].coun.plusP + modAm\r\n  end\r\n  updateEdDisplay(tar)\r\nend\r\nfunction subP(tar)\r\n  if(encodedObjects[tar.getGUID()].toggle.editing == 1) then\r\n    encodedObjects[tar.getGUID()].base.power = encodedObjects[tar.getGUID()].base.power - modAm\r\n  elseif(encodedObjects[tar.getGUID()].toggle.editing == 2) then\r\n    encodedObjects[tar.getGUID()].coun.plusP = encodedObjects[tar.getGUID()].coun.plusP - modAm\r\n  end\r\n  updateEdDisplay(tar)\r\nend\r\nfunction addT(tar)\r\n  if(encodedObjects[tar.getGUID()].toggle.editing == 1) then\r\n    encodedObjects[tar.getGUID()].base.toughness = encodedObjects[tar.getGUID()].base.toughness + modAm\r\n  elseif(encodedObjects[tar.getGUID()].toggle.editing == 2) then\r\n    encodedObjects[tar.getGUID()].coun.plusT = encodedObjects[tar.getGUID()].coun.plusT + modAm\r\n  end\r\n  updateEdDisplay(tar)\r\nend\r\nfunction subT(tar)\r\n  if(encodedObjects[tar.getGUID()].toggle.editing == 1) then\r\n    encodedObjects[tar.getGUID()].base.toughness = encodedObjects[tar.getGUID()].base.toughness - modAm\r\n  elseif(encodedObjects[tar.getGUID()].toggle.editing == 2) then\r\n    encodedObjects[tar.getGUID()].coun.plusT = encodedObjects[tar.getGUID()].coun.plusT - modAm\r\n  end\r\n  updateEdDisplay(tar)\r\nend\r\n\r\n--Cycle Functions\r\nfunction cycleAm(tar)\r\n  if modAm == 1 then modAm = 10\r\n  elseif modAm == 10 then modAm = 1\r\n  end\r\n  updateEdDisplay(tar)\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "e11a4a"
    },
    {
      "Name": "Bag",
      "Transform": {
        "posX": 18.0,
        "posY": 0.769999862,
        "posZ": 6.0,
        "rotX": 1.65538484E-06,
        "rotY": 269.997,
        "rotZ": -3.7685088E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Colorless Tokens/Emblems",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "DeckCustom",
          "Transform": {
            "posX": -1.46420634,
            "posY": 3.40333867,
            "posZ": -0.889212966,
            "rotX": 0.2658946,
            "rotY": 179.988663,
            "rotZ": 177.672287,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Colourless Tokens",
          "Description": "",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "SidewaysCard": false,
          "DeckIDs": [
            800,
            801,
            802,
            803,
            804,
            805,
            806,
            807,
            808,
            809,
            810,
            811,
            812,
            813,
            814,
            815,
            816,
            817,
            818,
            819,
            820,
            821,
            822,
            823,
            824,
            825,
            826,
            827,
            828,
            829,
            830,
            831,
            832,
            833,
            834,
            835,
            836,
            837,
            838,
            839,
            840,
            841,
            842,
            843,
            844,
            845,
            846,
            847,
            848,
            849,
            850,
            851,
            852,
            853,
            854,
            855,
            856,
            857,
            858,
            859,
            860,
            861,
            862,
            863,
            864,
            865,
            866
          ],
          "CustomDeck": {
            "8": {
              "FaceURL": "http://i.imgur.com/XZFAU62.jpg",
              "BackURL": "http://i.imgur.com/53fmoUf.jpg",
              "NumWidth": 10,
              "NumHeight": 7,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "ContainedObjects": [
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 800,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 801,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 802,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 803,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 804,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 805,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 806,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 807,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 808,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 809,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 810,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 811,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 812,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 813,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 814,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 815,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 816,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 817,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 818,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 819,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 820,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 821,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 822,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 823,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 824,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 825,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 826,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 827,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 828,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 829,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 830,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 831,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 832,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 833,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 834,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 835,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 836,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 837,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 838,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 839,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 840,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 841,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 842,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 843,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 844,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 845,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 846,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 847,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 848,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 849,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 850,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 851,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 852,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 853,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 854,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 855,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 856,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 857,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 858,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 859,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 860,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 861,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 862,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 863,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 864,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 865,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 15.7044773,
                "posY": 2.682064,
                "posZ": -50.6648369,
                "rotX": 359.516144,
                "rotY": 179.978683,
                "rotZ": 182.345886,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 866,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "bae046"
            }
          ],
          "GUID": "0b2457"
        }
      ],
      "GUID": "fff97e"
    },
    {
      "Name": "Bag",
      "Transform": {
        "posX": 8.0,
        "posY": 0.7700097,
        "posZ": -1.21071935E-08,
        "rotX": 3.17556442E-06,
        "rotY": 86.3717957,
        "rotZ": 1.38117521E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Multicolor Tokens",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.00499535,
        "g": 0.0,
        "b": 0.719995439
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "colorIndex = {}\r\ncolorIndex[1] = \"r\"\r\ncolorIndex[2] = \"g\"\r\ncolorIndex[3] = \"b\"\r\n\r\ncolorIndexNum = 1\r\n\r\nCOLOR_INCREMENT = 0.005\r\n\r\nlastColor = nil\r\n\r\nfunction onLoad()\r\n\r\n\tself.setColorTint({1, 0, 0})\r\n\r\nend\r\n\r\nfunction update()\r\n\r\n\tlocal firstColIndex = colorIndex[colorIndexNum]\r\n\tlocal secondColIndex = nil\r\n\r\n\tif colorIndexNum == 3 then\r\n\t\tsecondColIndex = colorIndex[1]\r\n\telse\r\n\t\tsecondColIndex = colorIndex[colorIndexNum + 1]\r\n\tend\r\n\r\n\tlocal colorTint = self.getColorTint()\r\n\tlastColor = colorTint\r\n\r\n\tif colorTint[secondColIndex] < 1 then\r\n\r\n\t\tcolorTint[secondColIndex] = colorTint[secondColIndex] + COLOR_INCREMENT\r\n\r\n\t\tself.setColorTint(colorTint)\r\n\r\n\telseif colorTint[firstColIndex] > 0 then\r\n\r\n\t\tcolorTint[firstColIndex] = colorTint[firstColIndex] - COLOR_INCREMENT\r\n\r\n\t\tself.setColorTint(colorTint)\r\n\r\n\telse\r\n\r\n\t\tif colorIndexNum < 3 then\r\n\t\t\tcolorIndexNum = colorIndexNum + 1\r\n\t\telse\r\n\t\t\tcolorIndexNum = 1\r\n\t\tend\r\n\r\n\tend\r\n\r\n\tif lastColor == self.getColorTint() then\r\n\r\n\t\tself.setColorTint({1, 1, 1})\r\n\r\n\tend\r\n\r\nend\r\n",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "Deck",
          "Transform": {
            "posX": 1.60459983,
            "posY": 3.18533945,
            "posZ": -0.927729,
            "rotX": 0.8045353,
            "rotY": 180.043121,
            "rotZ": 183.515915,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Multicoloured Tokens",
          "Description": "",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "SidewaysCard": false,
          "DeckIDs": [
            500,
            501,
            502,
            503,
            504,
            505,
            506,
            507,
            508,
            509,
            510,
            511,
            512,
            513,
            514,
            515,
            516,
            517,
            518,
            519,
            520,
            521,
            522,
            523,
            524,
            525,
            526,
            527
          ],
          "CustomDeck": {
            "5": {
              "FaceURL": "http://i.imgur.com/jFHRRPr.jpg",
              "BackURL": "http://i.imgur.com/53fmoUf.jpg",
              "NumWidth": 10,
              "NumHeight": 7,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "ContainedObjects": [
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 500,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 501,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 502,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 503,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 504,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 505,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 506,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 507,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 508,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 509,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 510,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 511,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 512,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 513,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 514,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 515,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 516,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 517,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 518,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 519,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 520,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 521,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 522,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 523,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 524,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 525,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 526,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.703129,
                "posY": 2.59034538,
                "posZ": 0.6370422,
                "rotX": 359.915253,
                "rotY": 179.997925,
                "rotZ": 182.170929,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 527,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b02780"
            }
          ],
          "GUID": "de7408"
        }
      ],
      "GUID": "e31b56"
    },
    {
      "Name": "Bag",
      "Transform": {
        "posX": 8.0,
        "posY": 0.769974232,
        "posZ": -6.0,
        "rotX": -8.660418E-09,
        "rotY": 359.991974,
        "rotZ": -4.61071E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Black Tokens",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.44705838,
        "g": 0.44705838,
        "b": 0.44705838
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "DeckCustom",
          "Transform": {
            "posX": 3.72744322,
            "posY": 3.27789,
            "posZ": -5.621819,
            "rotX": 0.0759423,
            "rotY": 179.999863,
            "rotZ": 179.794388,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Black Tokens",
          "Description": "",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "SidewaysCard": false,
          "DeckIDs": [
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            119,
            120,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            136,
            137,
            138,
            139,
            140,
            141
          ],
          "CustomDeck": {
            "1": {
              "FaceURL": "http://i.imgur.com/UzgoW5D.jpg",
              "BackURL": "http://i.imgur.com/53fmoUf.jpg",
              "NumWidth": 10,
              "NumHeight": 7,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "ContainedObjects": [
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 100,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 101,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 102,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 103,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 104,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 105,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 106,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 107,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 108,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 109,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 110,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 111,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 112,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 113,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 114,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 115,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 116,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 117,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 118,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 119,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 120,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 121,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 122,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 123,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 124,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 125,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 126,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 127,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 128,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 129,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 130,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 131,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 132,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 133,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 134,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 135,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 136,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 137,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 138,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 139,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 140,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 8.855718,
                "posY": 2.59034538,
                "posZ": -6.00539446,
                "rotX": 358.576538,
                "rotY": 179.956345,
                "rotZ": 182.524643,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 141,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "1ea3de"
            }
          ],
          "GUID": "215196"
        }
      ],
      "GUID": "c4fc37"
    },
    {
      "Name": "Bag",
      "Transform": {
        "posX": 18.0,
        "posY": 0.77496475,
        "posZ": -6.0,
        "rotX": 2.56775047E-06,
        "rotY": 90.01128,
        "rotZ": 3.775793E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Red Tokens",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 0.231371492,
        "b": 0.231371492
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "DeckCustom",
          "Transform": {
            "posX": -3.9285748,
            "posY": 3.20402718,
            "posZ": -5.986815,
            "rotX": 1.75219786,
            "rotY": 179.921509,
            "rotZ": 177.1384,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Red Tokens",
          "Description": "",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "SidewaysCard": false,
          "DeckIDs": [
            500,
            501,
            502,
            503,
            504,
            505,
            506,
            507,
            508,
            509,
            510,
            511,
            512,
            513,
            514,
            515,
            516,
            517,
            518,
            519,
            520,
            521,
            522,
            523,
            524,
            525,
            526,
            527,
            528,
            529,
            530,
            531
          ],
          "CustomDeck": {
            "5": {
              "FaceURL": "http://i.imgur.com/kJ105yC.jpg",
              "BackURL": "http://i.imgur.com/53fmoUf.jpg",
              "NumWidth": 10,
              "NumHeight": 7,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "ContainedObjects": [
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 500,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 501,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 502,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 503,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 504,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 505,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 506,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 507,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 508,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 509,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 510,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 511,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 512,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 513,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 514,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 515,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 516,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 517,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 518,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 519,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 520,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 521,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 522,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 523,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 524,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 525,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 526,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 527,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 528,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 529,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 530,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.700066,
                "posY": 2.590345,
                "posZ": -5.97233057,
                "rotX": 359.517334,
                "rotY": 179.97757,
                "rotZ": 183.719009,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 531,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "4a0373"
            }
          ],
          "GUID": "ae1a6b"
        }
      ],
      "GUID": "29a0f4"
    },
    {
      "Name": "Bag",
      "Transform": {
        "posX": 8.0,
        "posY": 0.769987,
        "posZ": 6.0,
        "rotX": -4.91794754E-06,
        "rotY": 0.0264707524,
        "rotZ": -1.26593313E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Green Tokens",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.266665637,
        "g": 0.635294,
        "b": 0.274508774
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "Deck",
          "Transform": {
            "posX": -5.923444,
            "posY": 3.3700037,
            "posZ": 1.41100025,
            "rotX": 359.586853,
            "rotY": 180.0217,
            "rotZ": 176.94899,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Green Tokens",
          "Description": "",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "SidewaysCard": false,
          "DeckIDs": [
            300,
            301,
            302,
            303,
            304,
            305,
            306,
            307,
            308,
            309,
            310,
            311,
            312,
            313,
            314,
            315,
            316,
            317,
            318,
            319,
            320,
            321,
            322,
            323,
            324,
            325,
            326,
            327,
            328,
            329,
            330,
            331,
            332,
            333,
            334,
            335,
            336,
            337,
            338,
            339,
            340,
            341,
            342,
            343,
            344,
            345,
            346,
            347,
            348,
            349,
            350,
            351,
            352,
            353,
            354,
            355,
            356,
            357,
            358,
            359,
            360,
            361
          ],
          "CustomDeck": {
            "3": {
              "FaceURL": "http://i.imgur.com/VKg8L1W.jpg",
              "BackURL": "http://i.imgur.com/53fmoUf.jpg",
              "NumWidth": 10,
              "NumHeight": 7,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "ContainedObjects": [
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 300,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 301,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 302,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 303,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 304,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 305,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 306,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 307,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 308,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 309,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 310,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 311,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 312,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 313,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 314,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 315,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 316,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 317,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 318,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 319,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 320,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 321,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 322,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 323,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 324,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 325,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 326,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 327,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 328,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 329,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 330,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 331,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 332,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 333,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 334,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 335,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 336,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 337,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 338,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 339,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 340,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 341,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 342,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 343,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 344,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 345,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 346,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 347,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 348,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 349,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 350,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 351,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 352,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 353,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 354,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 355,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 356,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 357,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 358,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 359,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 360,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.65429878,
                "posY": 2.59034538,
                "posZ": -5.96719456,
                "rotX": 359.724121,
                "rotY": 179.980255,
                "rotZ": 183.752914,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 361,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "cb5ca5"
            }
          ],
          "GUID": "7c994f"
        }
      ],
      "GUID": "727741"
    },
    {
      "Name": "Die_12",
      "Transform": {
        "posX": 17.9999981,
        "posY": 2.63900876,
        "posZ": -40.0,
        "rotX": 333.409668,
        "rotY": 234.242981,
        "rotZ": 179.960754,
        "scaleX": 1.40000057,
        "scaleY": 1.40000057,
        "scaleZ": 1.40000057
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337937,
        "g": 0.4337937,
        "b": 0.4337937
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "525c6e"
    },
    {
      "Name": "Die_20",
      "Transform": {
        "posX": 9.000008,
        "posY": 2.77060843,
        "posZ": -39.9999924,
        "rotX": 307.392548,
        "rotY": 69.38483,
        "rotZ": 306.0667,
        "scaleX": 1.65000081,
        "scaleY": 1.65000081,
        "scaleZ": 1.65000081
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337937,
        "g": 0.4337937,
        "b": 0.4337937
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "76fdb8"
    },
    {
      "Name": "Bag",
      "Transform": {
        "posX": 13.0,
        "posY": 0.7699771,
        "posZ": 6.0,
        "rotX": 1.02460244E-05,
        "rotY": 0.07055795,
        "rotZ": -1.20315653E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Blue Tokens",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.349018574,
        "g": 0.329410732,
        "b": 1.0
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "DeckCustom",
          "Transform": {
            "posX": 5.52286673,
            "posY": 3.204132,
            "posZ": 1.57632864,
            "rotX": 359.981232,
            "rotY": 180.000809,
            "rotZ": 177.551239,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Blue Tokens",
          "Description": "",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "SidewaysCard": false,
          "DeckIDs": [
            200,
            201,
            202,
            203,
            204,
            205,
            206,
            207,
            208,
            209,
            210,
            211,
            212,
            213,
            214,
            215,
            216,
            217,
            218,
            219,
            220,
            221,
            222,
            223,
            224,
            225,
            226,
            227,
            228,
            229
          ],
          "CustomDeck": {
            "2": {
              "FaceURL": "http://i.imgur.com/Lpk4aqO.jpg",
              "BackURL": "http://i.imgur.com/53fmoUf.jpg",
              "NumWidth": 10,
              "NumHeight": 7,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "ContainedObjects": [
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 200,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 201,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 202,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 203,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 204,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 205,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 206,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 207,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 208,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 209,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 210,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 211,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 212,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 213,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 214,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 215,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 216,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 217,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 218,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 219,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 220,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 221,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 222,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 223,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 224,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 225,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 226,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 227,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 228,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 5.779554,
                "posY": 2.59034586,
                "posZ": -2.691869,
                "rotX": 358.437317,
                "rotY": 179.973267,
                "rotZ": 181.240921,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 229,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "c9fda1"
            }
          ],
          "GUID": "fbd858"
        }
      ],
      "GUID": "14838d"
    },
    {
      "Name": "Die_10",
      "Transform": {
        "posX": 21.0000038,
        "posY": 2.606212,
        "posZ": -39.9999657,
        "rotX": 38.69422,
        "rotY": 9.009167,
        "rotZ": 270.460144,
        "scaleX": 1.45000076,
        "scaleY": 1.45000076,
        "scaleZ": 1.45000076
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337937,
        "g": 0.4337937,
        "b": 0.4337937
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "037f2e"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 3.15372062,
        "posY": 0.9904969,
        "posZ": -17.011755,
        "rotX": -0.004588247,
        "rotY": 180.000458,
        "rotZ": 180.000458,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Deck Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "0b0f79"
    },
    {
      "Name": "Die_6_Rounded",
      "Transform": {
        "posX": 23.9999733,
        "posY": 2.535734,
        "posZ": -40.0000038,
        "rotX": 359.993317,
        "rotY": 261.110718,
        "rotZ": 269.9574,
        "scaleX": 1.30000067,
        "scaleY": 1.30000067,
        "scaleZ": 1.30000067
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337937,
        "g": 0.4337937,
        "b": 0.4337937
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "485184"
    },
    {
      "Name": "Die_4",
      "Transform": {
        "posX": 15.0,
        "posY": 2.18854356,
        "posZ": -40.0000038,
        "rotX": 18.57044,
        "rotY": 154.051,
        "rotZ": 240.0659,
        "scaleX": 1.30000114,
        "scaleY": 1.30000114,
        "scaleZ": 1.30000114
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337937,
        "g": 0.4337937,
        "b": 0.4337937
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "49231c"
    },
    {
      "Name": "Bag",
      "Transform": {
        "posX": 18.0,
        "posY": 0.7699594,
        "posZ": -6.055925E-07,
        "rotX": 4.741656E-06,
        "rotY": 359.9716,
        "rotZ": 3.54231838E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "White Tokens",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 0.9647059,
        "b": 0.572549045
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "DeckCustom",
          "Transform": {
            "posX": 20.9581757,
            "posY": 3.20148945,
            "posZ": -0.4443136,
            "rotX": 1.24547017,
            "rotY": 179.8842,
            "rotZ": 176.782822,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "White Tokens",
          "Description": "",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "SidewaysCard": false,
          "DeckIDs": [
            600,
            601,
            602,
            603,
            604,
            605,
            606,
            607,
            608,
            609,
            610,
            611,
            612,
            613,
            614,
            615,
            616,
            617,
            618,
            619,
            620,
            621,
            622,
            623,
            624,
            625,
            626,
            627,
            628,
            629,
            630,
            631,
            632,
            633,
            634
          ],
          "CustomDeck": {
            "6": {
              "FaceURL": "http://i.imgur.com/esdeFvN.jpg",
              "BackURL": "http://i.imgur.com/53fmoUf.jpg",
              "NumWidth": 10,
              "NumHeight": 7,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "ContainedObjects": [
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 600,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 601,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 602,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 603,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 604,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 605,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 606,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 607,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 608,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 609,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 610,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 611,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 612,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 613,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 614,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 615,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 616,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 617,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 618,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 619,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 620,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 621,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 622,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 623,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 624,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 625,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 626,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 627,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 628,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 629,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 630,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 631,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 632,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 633,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            },
            {
              "Name": "Card",
              "Transform": {
                "posX": 2.692413,
                "posY": 2.59034538,
                "posZ": -2.82799363,
                "rotX": 358.0082,
                "rotY": 179.969452,
                "rotZ": 181.029388,
                "scaleX": 1.0,
                "scaleY": 1.0,
                "scaleZ": 1.0
              },
              "Nickname": "",
              "Description": "",
              "ColorDiffuse": {
                "r": 0.713235259,
                "g": 0.713235259,
                "b": 0.713235259
              },
              "Locked": false,
              "Grid": true,
              "Snap": true,
              "Autoraise": true,
              "Sticky": true,
              "Tooltip": true,
              "CardID": 634,
              "SidewaysCard": false,
              "LuaScript": "",
              "LuaScriptState": "",
              "ContainedObjects": [],
              "GUID": "b91c93"
            }
          ],
          "GUID": "db4458"
        }
      ],
      "GUID": "894e48"
    },
    {
      "Name": "go_game_bowl_white",
      "Transform": {
        "posX": 12.999999,
        "posY": 0.7011486,
        "posZ": 1.77882612E-06,
        "rotX": -3.66692484E-06,
        "rotY": 0.368038177,
        "rotZ": -1.06214418E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Generic Counters",
      "Description": "Rename and Color these for anything you might need",
      "ColorDiffuse": {
        "r": 0.8972125,
        "g": 0.88346535,
        "b": 0.8206212
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Number": 99,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "e3038b"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 3.140871,
        "posY": 0.9907988,
        "posZ": -20.7592144,
        "rotX": -0.0046225437,
        "rotY": 180.000458,
        "rotZ": 180.000443,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Graveyard Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "6183a0"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 3.15554738,
        "posY": 0.991065741,
        "posZ": -24.0719318,
        "rotX": -2.27617392E-07,
        "rotY": 90.0000153,
        "rotZ": 180.005081,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Exile Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "0a6336"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -24.8258343,
        "posY": 0.9910662,
        "posZ": -24.0775013,
        "rotX": -6.474172E-07,
        "rotY": 90.00007,
        "rotZ": 180.005081,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Exile Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "1393cb"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -24.8341064,
        "posY": 0.9904992,
        "posZ": -17.0238628,
        "rotX": -0.004547248,
        "rotY": 180.000519,
        "rotZ": 180.000458,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Deck Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "08e7d0"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -24.8405132,
        "posY": 0.9907988,
        "posZ": -20.764782,
        "rotX": -0.004626341,
        "rotY": 180.000473,
        "rotZ": 180.000443,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Graveyard Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "92c650"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -42.0567627,
        "posY": 0.9946896,
        "posZ": -2.54329681,
        "rotX": -0.000145659,
        "rotY": 180.000443,
        "rotZ": 180.015808,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Exile Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "4be51e",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 0.00217603426,
            "y": 3.66942317E-07,
            "z": -0.000639567
          },
          "Rotation": {
            "x": 0.00014584171,
            "y": 0.0144766653,
            "z": 359.98465
          }
        }
      ]
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -35.0031166,
        "posY": 0.992800236,
        "posZ": -2.53502464,
        "rotX": 359.98465,
        "rotY": 269.999939,
        "rotZ": 179.999863,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Deck Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "0081cf",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": -0.00117311638,
            "y": 3.222681E-08,
            "z": -0.00374405249
          }
        }
      ]
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -38.7654343,
        "posY": 0.99380815,
        "posZ": -2.5307498,
        "rotX": 359.98465,
        "rotY": 269.999939,
        "rotZ": 179.999863,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Graveyard Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "62cf02",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": -0.002113151,
            "y": 4.288959E-07,
            "z": -0.008318311
          },
          "Rotation": {
            "x": 0.0153437853,
            "y": 0.0106880786,
            "z": 0.000145875034
          }
        }
      ]
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -42.029705,
        "posY": 0.9945942,
        "posZ": 24.13228,
        "rotX": -4.47591447E-06,
        "rotY": 179.999939,
        "rotZ": 180.0204,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Exile Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "afea93",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": -0.00366856134,
            "y": -1.44871848E-07,
            "z": 0.0003361706
          },
          "Rotation": {
            "x": 4.57824444E-06,
            "y": 0.010746357,
            "z": 359.97995
          }
        }
      ]
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -34.9760551,
        "posY": 0.992140234,
        "posZ": 24.1405563,
        "rotX": 359.980072,
        "rotY": 269.999939,
        "rotZ": 180.000443,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Deck Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "72e512",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 0.00112175557,
            "y": -1.45993909E-07,
            "z": -0.000240779511
          }
        }
      ]
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -38.7169838,
        "posY": 0.993442059,
        "posZ": 24.1469555,
        "rotX": 359.980072,
        "rotY": 269.999939,
        "rotZ": 180.000443,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Graveyard Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "eb0743",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 0.00277507515,
            "y": 1.511583E-07,
            "z": -0.00236349064
          },
          "Rotation": {
            "x": 0.0199354,
            "y": 0.0145517793,
            "z": 4.844612E-06
          }
        }
      ]
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -3.16899133,
        "posY": 0.9900003,
        "posZ": 24.09301,
        "rotX": 5.659234E-06,
        "rotY": 270.000061,
        "rotZ": 180.000443,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Exile Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "a8aa6e"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -3.149899,
        "posY": 0.9900006,
        "posZ": 17.0281715,
        "rotX": 5.52618758E-06,
        "rotY": -8.20222945E-10,
        "rotZ": 180.000443,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Deck Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "6438e9"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -3.14349985,
        "posY": 0.990000367,
        "posZ": 20.7690964,
        "rotX": 5.39492339E-06,
        "rotY": -7.42081966E-07,
        "rotZ": 180.000443,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Graveyard Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "f7a8d9"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 24.79935,
        "posY": 0.990002632,
        "posZ": 24.07171,
        "rotX": 5.42568232E-05,
        "rotY": 270.0,
        "rotZ": 180.000458,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Exile Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "bf9488"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 24.80763,
        "posY": 0.990004957,
        "posZ": 17.018322,
        "rotX": -5.51909434E-05,
        "rotY": 2.211422E-09,
        "rotZ": 180.0005,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Deck Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "b172c1"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 24.8140278,
        "posY": 0.9900023,
        "posZ": 20.7589912,
        "rotX": 7.70004553E-05,
        "rotY": -6.282044E-08,
        "rotZ": 180.000443,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Graveyard Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "b41521"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 42.0063171,
        "posY": 0.99108386,
        "posZ": 2.49340534,
        "rotX": -2.27765938E-07,
        "rotY": -1.26988425E-05,
        "rotZ": 180.005081,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Exile Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "d30344"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 34.9526672,
        "posY": 0.9905059,
        "posZ": 2.48512816,
        "rotX": -0.004681926,
        "rotY": 90.0,
        "rotZ": 180.000443,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Deck Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "a1f449"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 38.6935959,
        "posY": 0.9908118,
        "posZ": 2.478733,
        "rotX": -0.00469987467,
        "rotY": 90.00003,
        "rotZ": 180.000443,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Graveyard Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "c3bf17"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 42.0379753,
        "posY": 0.9912239,
        "posZ": -24.1543961,
        "rotX": 7.56913141E-05,
        "rotY": 5.004285E-08,
        "rotZ": 180.000778,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Exile Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "e39056",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": -0.00225375779,
            "y": 3.89274248E-07,
            "z": -4.17053452E-05
          },
          "Rotation": {
            "x": -7.640468E-05,
            "y": 0.0145324785,
            "z": -0.0005310201
          }
        }
      ]
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 34.9605827,
        "posY": 0.991158366,
        "posZ": -24.17618,
        "rotX": -0.0005258941,
        "rotY": 90.0,
        "rotZ": 180.000534,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Deck Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "34d664",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": -0.007558493,
            "y": -1.36271012E-07,
            "z": 0.00324987154
          }
        }
      ]
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 38.70825,
        "posY": 0.991193354,
        "posZ": -24.1801872,
        "rotX": -0.000526111748,
        "rotY": 90.0,
        "rotZ": 180.000534,
        "scaleX": 1.132353,
        "scaleY": 1.132353,
        "scaleZ": 1.58529353
      },
      "Nickname": "Graveyard Zone",
      "Description": "aspectRatio=1.4\nsize=100",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw/sn76knaz",
        "DiffuseURL": "http://i.imgur.com/WVTHiD0.png",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "--[[\r\n   card counter\r\n   created by Rodney\r\n]]\r\n\r\ncardCounterVersion = \"2016111300\"\r\n\r\n-- constants --\r\nplayerColorTable = {}\r\nfor i, v in ipairs({\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\", \"Grey\"}) do\r\n   playerColorTable[string.lower(v)] = v\r\nend\r\n\r\n-- customizable options in card counter's description part.\r\noptionDescriptor = {\r\n   -- text color.\r\n   -- color name (same as seat name; White, Red...) or \"#rrggbb\" are supported.\r\n   color = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result\r\n         local regularizedColorName = playerColorTable[string.lower(value)]\r\n\r\n         if regularizedColorName then\r\n            local rgb = stringColorToRGB(regularizedColorName)\r\n            result = {rgb.r, rgb.g, rgb.b}\r\n         else\r\n            result = hexColorStringToRGB(value) or {1, 1, 1}\r\n         end\r\n\r\n         return result\r\n      end,\r\n\r\n      default = {1, 1, 1}\r\n   },\r\n\r\n   -- text size.\r\n   size = {\r\n      type = \"number\",\r\n      default = 44\r\n   },\r\n\r\n   -- text format.\r\n   -- See http://www.lua.org/manual/5.2/manual.html#pdf-string.format\r\n   format = {\r\n      type = \"string\",\r\n      default = \"x%d\"\r\n   },\r\n\r\n   -- text offset position.\r\n   offset = {\r\n      type = \"custom\",\r\n      decoder = function(value, optionChunk)\r\n         local result = split(value, \",\")\r\n\r\n         result[1] = tonumber(result[1]) or 0\r\n         result[2] = tonumber(result[2]) or 0\r\n         result[3] = tonumber(result[3]) or 0\r\n\r\n         return result\r\n      end,\r\n      default = {0, 0, 0}\r\n   },\r\n\r\n   -- text rotation.\r\n   rotation = {\r\n      type = \"number\",\r\n      default = 0\r\n   },\r\n\r\n   -- raise text to deck's height.\r\n   -- if this is true, text is raised to fit to deck's height.\r\n   raise = {\r\n      type = \"boolean\",\r\n      default = true\r\n   },\r\n\r\n   -- aspect ratio.\r\n   -- vertical / horizontal scale.\r\n   aspectratio = {\r\n      type = \"number\",\r\n      default = 1\r\n   }\r\n}\r\n\r\n\r\n-- target object's GUID/label text's GUID association table\r\nlabelAssoc = {}\r\n\r\n-- currently spawning labels (not initialized)\r\nspawningLabels = {}\r\n\r\n-- label's temporary spawning position\r\ntempPosition = {0, -30, 0}\r\n\r\n\r\n-- workaround variable for onLoad/onCollisionEnter event's order.\r\nbeforeLoading = true\r\ncollideBeforeLoadQueue = {}\r\n\r\n-- events --\r\nfunction onSave()\r\n   return JSON.encode(labelAssoc)\r\nend\r\n\r\nfunction onLoad(saved)\r\n   if saved then\r\n      labelAssoc = JSON.decode(saved) or {}\r\n   end\r\n\r\n   for t, l in pairs(labelAssoc) do\r\n      local target = getObjectFromGUID(t)\r\n      local label = getObjectFromGUID(l)\r\n\r\n      if label == nil then\r\n         labelAssoc[t] = nil\r\n      elseif target == nil then\r\n         labelAssoc[t] = nil\r\n         label.destruct()\r\n      end\r\n   end\r\n\r\n   beforeLoading = false\r\n\r\n   for i, v in ipairs(collideBeforeLoadQueue) do\r\n      onCollisionEnter(v)\r\n   end\r\n   collideBeforeLoadQueue = {}\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\nfunction onDestroy()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n   if info and info.collision_object.guid then\r\n      if beforeLoading then\r\n         collideBeforeLoadQueue[#collideBeforeLoadQueue+1] = info\r\n         return\r\n      end\r\n\r\n      local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n      local target = getObjectFromGUID(info.collision_object.guid)\r\n      local count = -1\r\n\r\n      if target.tag == \"Card\" then\r\n         count = 1\r\n      elseif target.tag == \"Deck\" then\r\n         count = #target.getObjects()\r\n      end\r\n\r\n      -- card/deck only\r\n      if count > -1 then\r\n         if count == 0  then\r\n            destroyLabel(target.guid)\r\n         else\r\n            setLabelText(target.guid, count)\r\n         end\r\n      end\r\n   end\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n   if info and info.collision_object.guid and labelAssoc[info.collision_object.guid] then\r\n      destroyLabel(info.collision_object.guid)\r\n   end\r\nend\r\n\r\nfunction onObjectDestroyed(target)\r\n   if labelAssoc[target.guid] then\r\n      destroyLabel(target.guid)\r\n   end\r\nend\r\n\r\nfunction onPickedUp()\r\n   for t, l in pairs(labelAssoc) do\r\n      destroyLabel(t)\r\n   end\r\n\r\n   fixAspectRatio()\r\nend\r\n\r\n-- functions --\r\n\r\n-- create new label text ofject for targetGuid.\r\n-- this function uses asynchronously callback, so needs mutex variable.\r\nfunction newLabel(targetGuid, params)\r\n   if spawningLabels[targetGuid] then\r\n      return\r\n   end\r\n\r\n   local label = spawnObject({\r\n         type = \"3DText\",\r\n         position = tempPosition,\r\n         rotation = {0, 0, 0},\r\n         callback = \"newLabelCallback\",\r\n         callback_owner = self,\r\n         params = {\r\n            targetGuid = targetGuid,\r\n            count = params.count\r\n         }\r\n   })\r\n\r\n   spawningLabels[targetGuid] = label\r\n\r\n   return label\r\nend\r\n\r\n-- callback function for spawning label text object.\r\nfunction newLabelCallback(spawnedLabel, params)\r\n   if params.targetGuid then\r\n      labelAssoc[params.targetGuid] = spawnedLabel.guid\r\n      local target = getObjectFromGUID(params.targetGuid)\r\n\r\n      -- move functions only affects after initialized.\r\n      moveLabel(getObjectFromGUID(params.targetGuid), spawnedLabel, params.count)\r\n   end\r\n\r\n   spawningLabels[params.targetGuid] = nil\r\nend\r\n\r\n-- set label's text for targetGuid.\r\n-- if label object isn't found, new entity is spawned.\r\nfunction setLabelText(targetGuid, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid])\r\n\r\n   if not label then\r\n      label = spawningLabels[targetGuid] or newLabel(targetGuid, {count = count})\r\n   end\r\n\r\n   local target = getObjectFromGUID(targetGuid)\r\n\r\n   -- rare case: target is destroyed after new label is spawned but not initialized.\r\n   if target == nil then\r\n      destroyLabel(targetGuid)\r\n      return\r\n   end\r\n\r\n   -- format text\r\n   label.TextTool.setValue(string.format(options.format, count))\r\n   label.TextTool.setFontColor(options.color)\r\n   label.TextTool.setFontSize(options.size * target.getScale().x)\r\n\r\n   -- if already initialized, move here.\r\n   if label.guid then\r\n      moveLabel(target, label, count)\r\n   end\r\nend\r\n\r\nfunction moveLabel(target, label, count)\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n\r\n   -- move label position\r\n   local raised = 0.165\r\n\r\n   if count ~= nil and options.raise then\r\n      if count < 10 then\r\n         raised = 0.17\r\n      elseif count > 214 then\r\n         raised = raised + 0.00966 * (214 - 10)\r\n      else\r\n         raised = raised + 0.00966 * (count - 10)\r\n      end\r\n   end\r\n\r\n   local zFace = 0\r\n   local offsetDirection = 1\r\n   local origin = {\r\n      position = target.getPosition(),\r\n      rotation = target.getRotation(),\r\n      scale = target.getScale()\r\n   }\r\n\r\n   -- flipped?\r\n   if origin.rotation.z > 90 and origin.rotation.z < 270 then\r\n      zFace = 180\r\n      offsetDirection = -1\r\n   end\r\n\r\n   -- fix height & scale\r\n   -- origin.position.y = self.getPosition().y\r\n   origin.scale.y = 1.0\r\n\r\n   local result = calcRelativePosition(origin, {\r\n                                          position = {\r\n                                             offsetDirection * -options.offset[1],\r\n                                             -- offsetDirection * (options.offset[2] + raised),\r\n                                             offsetDirection * (options.offset[2] + raised / 2),\r\n                                             options.offset[3]\r\n                                          },\r\n                                          rotation = {90, 180 + options.rotation, zFace}\r\n   })\r\n\r\n   label.setPosition(result.position)\r\n   label.setRotation(result.rotation)\r\nend\r\n\r\n-- destroy label object for targetGuid.\r\nfunction destroyLabel(targetGuid)\r\n   local label = getObjectFromGUID(labelAssoc[targetGuid]) or spawningLabels[targetGuid]\r\n\r\n   if label then\r\n      label.destruct()\r\n      labelAssoc[targetGuid] = nil\r\n      spawningLabels[targetGuid] = nil\r\n   end\r\nend\r\n\r\n-- fix aspect ratio of card counter itself.\r\nfunction fixAspectRatio()\r\n   local options = decodeOptionText(self.getDescription(), optionDescriptor)\r\n   local scale = self.getScale()\r\n\r\n   scale.z = scale.x * options.aspectratio\r\n\r\n   self.setScale(scale)\r\nend\r\n\r\n---- utility functions\r\n\r\n-- spawn object at relative position of baseObj\r\n--  origin : origin object position, rotation and scale\r\n--   {position = {x = xpos, y = ypos, z = zpos}, rotation = {x = xrot, y = yrot, z = zrot, scale = {x = xscale, y = yscale, z = zscale}}}\r\n--  objParam : object parameter. position and rotation is relative.\r\n--  => objParam\r\nfunction calcRelativePosition(origin, objParam)\r\n   -- calc scaled position\r\n   objParam.position[1] = objParam.position[1] * origin.scale.x\r\n   objParam.position[2] = objParam.position[2] * origin.scale.y\r\n   objParam.position[3] = objParam.position[3] * origin.scale.z\r\n\r\n   -- calc absolute rotation\r\n   objParam.rotation[1] = objParam.rotation[1] + origin.rotation.x\r\n   objParam.rotation[2] = objParam.rotation[2] + origin.rotation.y\r\n   objParam.rotation[3] = objParam.rotation[3] + origin.rotation.z\r\n\r\n   -- calc absolute position\r\n   -- y rotation only\r\n   local cosX = math.cos(math.rad(origin.rotation.x))\r\n   local sinX = math.sin(math.rad(origin.rotation.x))\r\n   local cosY = math.cos(math.rad(origin.rotation.y))\r\n   local sinY = math.sin(math.rad(origin.rotation.y))\r\n   local cosZ = math.cos(math.rad(origin.rotation.z))\r\n   local sinZ = math.sin(math.rad(origin.rotation.z))\r\n   local x, y, z = objParam.position[1], objParam.position[2], objParam.position[3]\r\n\r\n   -- TTS rotation order: Z-X-Y (same as Unity)\r\n\r\n   -- rotate Z axis\r\n   local x1 = x * cosZ - y * sinZ\r\n   local y1 = x * sinZ + y * cosZ\r\n   local z1 = z\r\n\r\n   -- rotate X axis\r\n   local x2 = x1\r\n   local y2 = y1 * cosX - z1 * sinX\r\n   local z2 = y1 * sinX + z1 * cosX\r\n\r\n   -- rotate Y axis\r\n   local x3 = x2 * cosY + z2 * sinY\r\n   local y3 = y2\r\n   local z3 = -x2 * sinY + z2 * cosY\r\n\r\n   objParam.position[1] = x3 + origin.position.x\r\n   objParam.position[2] = y3 + origin.position.y\r\n   objParam.position[3] = z3 + origin.position.z\r\n\r\n   return objParam\r\nend\r\n\r\n-- convert key=value list to table\r\n--  optionText : string of key(delim)value list delimited by newline\r\n--  descriptor : option entry descriptor\r\n-- => table of key/value\r\nfunction decodeOptionText(optionText, descriptor)\r\n   local booleanTable = {[\"true\"] = true, [\"false\"] = false}\r\n   local result = {}\r\n\r\n   for i, line in ipairs(split(optionText, \"\\n\")) do\r\n      local key, value = string.match(line, \"^%s*([^%s=]+)%s*=%s*(.-)%s*$\")\r\n      if key ~= nil then\r\n         key = string.lower(key)\r\n\r\n         descEntry = descriptor[key]\r\n\r\n         if descEntry then\r\n            if descEntry.type == \"select\" and descEntry.values then\r\n               value = descEntry.values[string.lower(value)]\r\n            elseif descEntry.type == \"boolean\" then\r\n               value = booleanTable[string.lower(value)]\r\n            elseif descEntry.type == \"number\" then\r\n               value = tonumber(value)\r\n            elseif descEntry.type == \"custom\" and descEntry.decoder then\r\n               value = descEntry.decoder(value, result)\r\n            end\r\n         end\r\n\r\n         result[key] = value\r\n      end\r\n   end\r\n\r\n   -- recover default value\r\n   for key, descEntry in pairs(descriptor) do\r\n      if result[key] == nil then\r\n         result[key] = descEntry.default\r\n      end\r\n   end\r\n\r\n   return result\r\nend\r\n\r\n-- split str by delim\r\n--  str : string\r\n--  delim : string\r\n-- => table of string\r\nfunction split(str, delim)\r\n   local wordStart = 1\r\n   local result = {}\r\n\r\n   repeat\r\n      local delimStart, delimEnd = string.find(str, delim, wordStart, 1)\r\n\r\n      if delimStart ~= nil then\r\n\t result[#result+1] = string.sub(str, wordStart, delimStart - 1)\r\n\t wordStart = delimEnd + 1\r\n      end\r\n   until delimStart == nil\r\n\r\n   result[#result+1] = string.sub(str, wordStart)\r\n   return result\r\nend\r\n\r\n-- split \"#rrggbb\" style color string to \"rr\", \"gg\", \"bb\"\r\n--  hexStr : string\r\n--  => \"rr\", \"gg\", \"bb\"\r\nfunction splitHexColorString(hexStr)\r\n   if hexStr == nil then\r\n      return nil\r\n   end\r\n\r\n   return string.match(hexStr,\r\n                       \"^#([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])\" ..\r\n                          \"([%da-fA-F][%da-fA-F])$\")\r\nend\r\n\r\n-- convert \"#rrggbb\" style color string to {r, g, b}\r\n--  each element takes between 0 and 1 value.\r\n--  hexStr : string\r\n--  => {r, g, b}\r\nfunction hexColorStringToRGB(hexStr)\r\n   local result = nil\r\n\r\n   local r, g, b = splitHexColorString(hexStr)\r\n   if r then\r\n      result = {tonumber(r, 16) / 255, tonumber(g, 16) / 255, tonumber(b, 16) / 255}\r\n   end\r\n   return result\r\nend\r\n",
      "LuaScriptState": "[]",
      "GUID": "f7415a",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 0.00111672189,
            "y": 3.77090259E-07,
            "z": -0.004892216
          },
          "Rotation": {
            "x": 0.0005257511,
            "y": 0.0144696962,
            "z": -8.104816E-05
          }
        }
      ]
    },
    {
      "Name": "Infinite_Bag",
      "Transform": {
        "posX": 13.0,
        "posY": 1.94,
        "posZ": -6.0,
        "rotX": 0.0,
        "rotY": 1.30275521E-11,
        "rotZ": 0.0,
        "scaleX": 1.05,
        "scaleY": 1.05,
        "scaleZ": 1.05
      },
      "Nickname": "+1/+1 and -1/-1 Counters",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.3058885,
        "g": 0.372555166,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "Custom_Model",
          "Transform": {
            "posX": 2.54655623,
            "posY": 3.7349937,
            "posZ": -36.80366,
            "rotX": 359.913666,
            "rotY": 179.997849,
            "rotZ": 180.070038,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "Counter",
          "Description": "",
          "ColorDiffuse": {
            "r": 0.9999999,
            "g": 0.9921603,
            "b": 0.9999999
          },
          "Locked": false,
          "Grid": true,
          "Snap": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "CustomMesh": {
            "MeshURL": "http://pastebin.com/raw.php?i=00YWZ28Y",
            "DiffuseURL": "http://i.imgur.com/9KMQdwZ.jpg",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 5,
            "CastShadows": true
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "acee3d"
        }
      ],
      "GUID": "f1cfaa"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -12.0,
        "posY": 2.92527962,
        "posZ": -48.99968,
        "rotX": 9.771707E-07,
        "rotY": 270.0,
        "rotZ": 359.95694,
        "scaleX": 0.6471674,
        "scaleY": 2.75,
        "scaleZ": 2.12094355
      },
      "Nickname": "ImBoardBlack4",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw.php?i=RxVSs7Ds",
        "DiffuseURL": "http://i.imgur.com/bgHBbsf.jpg",
        "NormalURL": "",
        "ColliderURL": "http://pastebin.com/raw.php?i=RxVSs7Ds",
        "Convex": false,
        "MaterialIndex": 1,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "PhysicsMaterial": {
        "StaticFriction": 0.6,
        "DynamicFriction": 0.6,
        "Bounciness": 0.0,
        "FrictionCombine": 0,
        "BounceCombine": 0
      },
      "Rigidbody": {
        "Mass": 1.4375,
        "Drag": 0.1,
        "AngularDrag": 0.1,
        "UseGravity": true
      },
      "GUID": "7e0585"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 16.0,
        "posY": 2.5,
        "posZ": -49.0,
        "rotX": 9.771707E-07,
        "rotY": 270.0,
        "rotZ": 359.95694,
        "scaleX": 0.6471674,
        "scaleY": 2.75,
        "scaleZ": 2.12094355
      },
      "Nickname": "ImBoardBlack4",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw.php?i=RxVSs7Ds",
        "DiffuseURL": "http://i.imgur.com/bgHBbsf.jpg",
        "NormalURL": "",
        "ColliderURL": "http://pastebin.com/raw.php?i=RxVSs7Ds",
        "Convex": false,
        "MaterialIndex": 1,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "PhysicsMaterial": {
        "StaticFriction": 0.6,
        "DynamicFriction": 0.6,
        "Bounciness": 0.0,
        "FrictionCombine": 0,
        "BounceCombine": 0
      },
      "Rigidbody": {
        "Mass": 1.4375,
        "Drag": 0.1,
        "AngularDrag": 0.1,
        "UseGravity": true
      },
      "GUID": "617df4",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 13.9072514,
            "y": -0.150122,
            "z": 3.300418
          }
        },
        {
          "Position": {
            "x": 13.9071646,
            "y": -0.150187492,
            "z": 1.8859365
          }
        },
        {
          "Position": {
            "x": 13.9072351,
            "y": -0.150187492,
            "z": 0.471488029
          }
        },
        {
          "Position": {
            "x": 13.9072418,
            "y": -0.150200516,
            "z": -0.9429771
          }
        },
        {
          "Position": {
            "x": 13.9072943,
            "y": -0.150108889,
            "z": -2.35744357
          }
        },
        {
          "Position": {
            "x": 13.9072351,
            "y": -0.150187388,
            "z": -3.771893
          }
        },
        {
          "Position": {
            "x": 3.022748,
            "y": -0.150000021,
            "z": 2.55895448
          }
        }
      ]
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -16.0,
        "posY": 2.5,
        "posZ": 49.0,
        "rotX": 9.771707E-07,
        "rotY": 270.0,
        "rotZ": 359.95694,
        "scaleX": 0.6471674,
        "scaleY": 2.75,
        "scaleZ": 2.12094355
      },
      "Nickname": "ImBoardBlack4",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw.php?i=RxVSs7Ds",
        "DiffuseURL": "http://i.imgur.com/bgHBbsf.jpg",
        "NormalURL": "",
        "ColliderURL": "http://pastebin.com/raw.php?i=RxVSs7Ds",
        "Convex": false,
        "MaterialIndex": 1,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "PhysicsMaterial": {
        "StaticFriction": 0.6,
        "DynamicFriction": 0.6,
        "Bounciness": 0.0,
        "FrictionCombine": 0,
        "BounceCombine": 0
      },
      "Rigidbody": {
        "Mass": 1.4375,
        "Drag": 0.1,
        "AngularDrag": 0.1,
        "UseGravity": true
      },
      "GUID": "8fcde2"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 12.0,
        "posY": 2.5,
        "posZ": 48.9998741,
        "rotX": 9.771707E-07,
        "rotY": 270.0,
        "rotZ": 359.95694,
        "scaleX": 0.6471674,
        "scaleY": 2.75,
        "scaleZ": 2.12094355
      },
      "Nickname": "ImBoardBlack4",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw.php?i=RxVSs7Ds",
        "DiffuseURL": "http://i.imgur.com/bgHBbsf.jpg",
        "NormalURL": "",
        "ColliderURL": "http://pastebin.com/raw.php?i=RxVSs7Ds",
        "Convex": false,
        "MaterialIndex": 1,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "PhysicsMaterial": {
        "StaticFriction": 0.6,
        "DynamicFriction": 0.6,
        "Bounciness": 0.0,
        "FrictionCombine": 0,
        "BounceCombine": 0
      },
      "Rigidbody": {
        "Mass": 1.4375,
        "Drag": 0.1,
        "AngularDrag": 0.1,
        "UseGravity": true
      },
      "GUID": "7dfd4f"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -66.00037,
        "posY": 2.5,
        "posZ": 11.0,
        "rotX": 9.77169E-07,
        "rotY": 180.0003,
        "rotZ": 359.95694,
        "scaleX": 0.6471674,
        "scaleY": 2.75,
        "scaleZ": 2.12094355
      },
      "Nickname": "ImBoardBlack4",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw.php?i=RxVSs7Ds",
        "DiffuseURL": "http://i.imgur.com/bgHBbsf.jpg",
        "NormalURL": "",
        "ColliderURL": "http://pastebin.com/raw.php?i=RxVSs7Ds",
        "Convex": false,
        "MaterialIndex": 1,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "PhysicsMaterial": {
        "StaticFriction": 0.6,
        "DynamicFriction": 0.6,
        "Bounciness": 0.0,
        "FrictionCombine": 0,
        "BounceCombine": 0
      },
      "Rigidbody": {
        "Mass": 1.4375,
        "Drag": 0.1,
        "AngularDrag": 0.1,
        "UseGravity": true
      },
      "GUID": "5142e2"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 66.0003052,
        "posY": 2.09063625,
        "posZ": -11.0,
        "rotX": -1.27222189E-14,
        "rotY": 180.00032,
        "rotZ": 359.96,
        "scaleX": 0.6471674,
        "scaleY": 2.75,
        "scaleZ": 2.12094355
      },
      "Nickname": "ImBoardBlack4",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw.php?i=RxVSs7Ds",
        "DiffuseURL": "http://i.imgur.com/bgHBbsf.jpg",
        "NormalURL": "",
        "ColliderURL": "http://pastebin.com/raw.php?i=RxVSs7Ds",
        "Convex": false,
        "MaterialIndex": 1,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "PhysicsMaterial": {
        "StaticFriction": 0.6,
        "DynamicFriction": 0.6,
        "Bounciness": 0.0,
        "FrictionCombine": 0,
        "BounceCombine": 0
      },
      "Rigidbody": {
        "Mass": 1.4375,
        "Drag": 0.1,
        "AngularDrag": 0.1,
        "UseGravity": true
      },
      "GUID": "3b8108"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 66.00034,
        "posY": 1.96860027,
        "posZ": 15.0,
        "rotX": -1.27222189E-14,
        "rotY": 180.00032,
        "rotZ": 359.96,
        "scaleX": 0.6471674,
        "scaleY": 2.75,
        "scaleZ": 2.12094355
      },
      "Nickname": "ImBoardBlack4",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw.php?i=RxVSs7Ds",
        "DiffuseURL": "http://i.imgur.com/bgHBbsf.jpg",
        "NormalURL": "",
        "ColliderURL": "http://pastebin.com/raw.php?i=RxVSs7Ds",
        "Convex": false,
        "MaterialIndex": 1,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "PhysicsMaterial": {
        "StaticFriction": 0.6,
        "DynamicFriction": 0.6,
        "Bounciness": 0.0,
        "FrictionCombine": 0,
        "BounceCombine": 0
      },
      "Rigidbody": {
        "Mass": 1.4375,
        "Drag": 0.1,
        "AngularDrag": 0.1,
        "UseGravity": true
      },
      "GUID": "c09d38"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -66.00031,
        "posY": 2.5,
        "posZ": -15.0,
        "rotX": -1.27222189E-14,
        "rotY": 180.00032,
        "rotZ": 359.96,
        "scaleX": 0.6471674,
        "scaleY": 2.75,
        "scaleZ": 2.12094355
      },
      "Nickname": "ImBoardBlack4",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "CustomMesh": {
        "MeshURL": "http://pastebin.com/raw.php?i=RxVSs7Ds",
        "DiffuseURL": "http://i.imgur.com/bgHBbsf.jpg",
        "NormalURL": "",
        "ColliderURL": "http://pastebin.com/raw.php?i=RxVSs7Ds",
        "Convex": false,
        "MaterialIndex": 1,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "PhysicsMaterial": {
        "StaticFriction": 0.6,
        "DynamicFriction": 0.6,
        "Bounciness": 0.0,
        "FrictionCombine": 0,
        "BounceCombine": 0
      },
      "Rigidbody": {
        "Mass": 1.4375,
        "Drag": 0.1,
        "AngularDrag": 0.1,
        "UseGravity": true
      },
      "GUID": "97953f"
    },
    {
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": 12.0,
        "posY": 4.69,
        "posZ": 49.0,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 18.0,
        "scaleY": 4.0,
        "scaleZ": 22.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.117999978,
        "g": 0.53,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "FogColor": "Blue",
      "FogHidePointers": false,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "31776f"
    },
    {
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": -16.0,
        "posY": 5.0,
        "posZ": 49.0,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 18.0,
        "scaleY": 5.0,
        "scaleZ": 22.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.191999972,
        "g": 0.701,
        "b": 0.167999953
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "FogColor": "Green",
      "FogHidePointers": false,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "ebc16b"
    },
    {
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": -12.0,
        "posY": 5.0,
        "posZ": -49.0,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 19.0,
        "scaleY": 5.0,
        "scaleZ": 23.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.856,
        "g": 0.09999997,
        "b": 0.09399996
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "FogColor": "Red",
      "FogHidePointers": false,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "24633f"
    },
    {
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": 16.0,
        "posY": 5.0,
        "posZ": -49.0,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 19.0,
        "scaleY": 5.0,
        "scaleZ": 23.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "FogColor": "White",
      "FogHidePointers": false,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "ae13f9"
    },
    {
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": 66.0,
        "posY": 5.0,
        "posZ": -11.0,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 19.0,
        "scaleY": 5.0,
        "scaleZ": 23.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.96,
        "g": 0.438999981,
        "b": 0.807
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "FogColor": "Pink",
      "FogHidePointers": false,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "ea22d8"
    },
    {
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": 66.0,
        "posY": 5.0,
        "posZ": 15.0,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 19.0,
        "scaleY": 5.0,
        "scaleZ": 23.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.627,
        "g": 0.124999978,
        "b": 0.941
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "FogColor": "Purple",
      "FogHidePointers": false,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "f54e01"
    },
    {
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": -66.0,
        "posY": 5.5,
        "posZ": -15.0,
        "rotX": 0.0,
        "rotY": 89.92,
        "rotZ": 0.0,
        "scaleX": 19.0,
        "scaleY": 5.0,
        "scaleZ": 23.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.9559999,
        "g": 0.39199996,
        "b": 0.112999953
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "FogColor": "Orange",
      "FogHidePointers": false,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "cd1163"
    },
    {
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": -66.0,
        "posY": 5.5,
        "posZ": 11.0,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 19.0,
        "scaleY": 5.0,
        "scaleZ": 23.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.171999961
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "FogColor": "Yellow",
      "FogHidePointers": false,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "f384e1"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -24.0,
        "posY": 1.37,
        "posZ": -6.0,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 3.0,
        "scaleY": 3.0,
        "scaleZ": 3.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.9559999,
        "g": 0.3919994,
        "b": 0.112999387
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "5c0657",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 0.0250410885,
            "y": 0.07726249,
            "z": 0.0337228253
          }
        }
      ]
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -24.0,
        "posY": 1.48,
        "posZ": 6.0,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 3.0,
        "scaleY": 3.0,
        "scaleZ": 3.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.171999425
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "ea902d",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 0.0250410885,
            "y": 0.07726249,
            "z": 0.0337228253
          }
        }
      ]
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -6.0,
        "posY": 1.37,
        "posZ": -5.999901,
        "rotX": 1.71229942E-07,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 3.0,
        "scaleY": 3.0,
        "scaleZ": 3.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.856,
        "g": 0.0999994054,
        "b": 0.09399941
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "1bf5b4",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 0.0250410885,
            "y": 0.07726249,
            "z": 0.0337228253
          }
        }
      ]
    },
    {
      "Name": "Die_20",
      "Transform": {
        "posX": 12.000041,
        "posY": 2.85422945,
        "posZ": -40.00005,
        "rotX": 349.225739,
        "rotY": 331.760254,
        "rotZ": 305.979248,
        "scaleX": 1.8500011,
        "scaleY": 1.8500011,
        "scaleZ": 1.8500011
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.106267564,
        "g": 0.106267564,
        "b": 0.106267564
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "d84cdf"
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": -6.0,
        "posY": 1.37,
        "posZ": 6.0,
        "rotX": 0.0,
        "rotY": 90.01292,
        "rotZ": 6.030307E-08,
        "scaleX": 3.0,
        "scaleY": 3.0,
        "scaleZ": 3.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.191999435,
        "g": 0.701,
        "b": 0.167999417
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "41b9ea",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 0.0250410885,
            "y": 0.07726249,
            "z": 0.0337228253
          }
        }
      ]
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 3.0,
        "posY": 1.37,
        "posZ": 6.0,
        "rotX": 7.06217236E-08,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 3.0,
        "scaleY": 3.0,
        "scaleZ": 3.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.117999412,
        "g": 0.53,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "c807fd",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 0.0250410885,
            "y": 0.07726249,
            "z": 0.0337228253
          }
        }
      ]
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 3.0,
        "posY": 1.37,
        "posZ": -6.0,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 3.0,
        "scaleY": 3.0,
        "scaleZ": 3.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "d24be7",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 0.0250410885,
            "y": 0.07726249,
            "z": 0.0337228253
          }
        }
      ]
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 24.0,
        "posY": 1.37,
        "posZ": 6.0,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 3.0,
        "scaleY": 3.0,
        "scaleZ": 3.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.627,
        "g": 0.124999411,
        "b": 0.941
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "df34fc",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 0.0250410885,
            "y": 0.07726249,
            "z": 0.0337228253
          }
        }
      ]
    },
    {
      "Name": "reversi_chip",
      "Transform": {
        "posX": 24.0,
        "posY": 1.36752963,
        "posZ": -6.0,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 3.0,
        "scaleY": 3.0,
        "scaleZ": 3.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.96,
        "g": 0.4389994,
        "b": 0.807
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "b09c9f",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 0.0250410885,
            "y": 0.07726249,
            "z": 0.0337228253
          }
        }
      ]
    },
    {
      "Name": "Chess_Rook",
      "Transform": {
        "posX": 3.0,
        "posY": 4.329052,
        "posZ": -6.0,
        "rotX": -6.56065353E-08,
        "rotY": -7.007909E-07,
        "rotZ": 1.34712036E-06,
        "scaleX": 2.0,
        "scaleY": 2.0,
        "scaleZ": 2.0
      },
      "Nickname": "Turn Key",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.0,
        "b": 0.0285662543
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "PhysicsMaterial": {
        "StaticFriction": 0.4,
        "DynamicFriction": 0.4,
        "Bounciness": 0.0,
        "FrictionCombine": 0,
        "BounceCombine": 0
      },
      "Rigidbody": {
        "Mass": 1.25,
        "Drag": 5.0,
        "AngularDrag": 9999999.0,
        "UseGravity": true
      },
      "GUID": "2d7911"
    },
    {
      "Name": "Counter",
      "Transform": {
        "posX": 9.00001,
        "posY": 2.056372,
        "posZ": -47.5,
        "rotX": 0.0430901,
        "rotY": 0.00760653568,
        "rotZ": 3.98087241E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0823529139,
        "g": 0.0823529139,
        "b": 0.0823529139
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Counter": {
        "value": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "8ad648"
    },
    {
      "Name": "Calculator",
      "Transform": {
        "posX": 9.0,
        "posY": 2.667011,
        "posZ": -54.9999657,
        "rotX": 359.95694,
        "rotY": 180.034866,
        "rotZ": -2.77428917E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Calculator": {
        "value": "0",
        "memory": 0.0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "dd35ce"
    },
    {
      "Name": "Die_20",
      "Transform": {
        "posX": -14.9994678,
        "posY": 3.27950883,
        "posZ": -39.9994659,
        "rotX": 349.225769,
        "rotY": 331.844849,
        "rotZ": 305.9793,
        "scaleX": 1.8500011,
        "scaleY": 1.8500011,
        "scaleZ": 1.8500011
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.106267534,
        "g": 0.106267534,
        "b": 0.106267534
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "43c419"
    },
    {
      "Name": "Die_20",
      "Transform": {
        "posX": -18.00074,
        "posY": 3.1958878,
        "posZ": -39.9992332,
        "rotX": 307.392639,
        "rotY": 69.263504,
        "rotZ": 306.06665,
        "scaleX": 1.65000081,
        "scaleY": 1.65000081,
        "scaleZ": 1.65000081
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.433793664,
        "g": 0.433793664,
        "b": 0.433793664
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "fcafd9"
    },
    {
      "Name": "Die_4",
      "Transform": {
        "posX": -12.0417852,
        "posY": 2.61382532,
        "posZ": -40.0029,
        "rotX": 18.5718422,
        "rotY": 150.0699,
        "rotZ": 240.0687,
        "scaleX": 1.30000114,
        "scaleY": 1.30000114,
        "scaleZ": 1.30000114
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.433793664,
        "g": 0.433793664,
        "b": 0.433793664
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "cc8144"
    },
    {
      "Name": "Die_12",
      "Transform": {
        "posX": -5.99980831,
        "posY": 3.06428766,
        "posZ": -39.99937,
        "rotX": 333.40976,
        "rotY": 234.19191,
        "rotZ": 179.960785,
        "scaleX": 1.40000057,
        "scaleY": 1.40000057,
        "scaleZ": 1.40000057
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.433793664,
        "g": 0.433793664,
        "b": 0.433793664
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "8be14f"
    },
    {
      "Name": "Die_10",
      "Transform": {
        "posX": -3.30879259,
        "posY": 3.0315547,
        "posZ": -40.06785,
        "rotX": 38.6941147,
        "rotY": 4.452234,
        "rotZ": 271.4908,
        "scaleX": 1.45000076,
        "scaleY": 1.45000076,
        "scaleZ": 1.45000076
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.433793664,
        "g": 0.433793664,
        "b": 0.433793664
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "207899"
    },
    {
      "Name": "Die_6_Rounded",
      "Transform": {
        "posX": -8.999323,
        "posY": 2.96102142,
        "posZ": -40.0097351,
        "rotX": 359.99353,
        "rotY": 261.37796,
        "rotZ": 269.957367,
        "scaleX": 1.30000067,
        "scaleY": 1.30000067,
        "scaleZ": 1.30000067
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.433793664,
        "g": 0.433793664,
        "b": 0.433793664
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "32cb8e"
    },
    {
      "Name": "Counter",
      "Transform": {
        "posX": -17.9919224,
        "posY": 2.48163414,
        "posZ": -47.47587,
        "rotX": 0.04308769,
        "rotY": 0.484437257,
        "rotZ": 0.000360851671,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0823529139,
        "g": 0.0823529139,
        "b": 0.0823529139
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Counter": {
        "value": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "ba730a"
    },
    {
      "Name": "Calculator",
      "Transform": {
        "posX": -18.0009785,
        "posY": 3.09229088,
        "posZ": -55.0004158,
        "rotX": 359.95694,
        "rotY": 180.029968,
        "rotZ": -2.3632163E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Calculator": {
        "value": "0",
        "memory": 0.0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "2d15a3"
    },
    {
      "Name": "Counter",
      "Transform": {
        "posX": -9.003534,
        "posY": 2.05862737,
        "posZ": 47.5,
        "rotX": 359.95697,
        "rotY": 178.400421,
        "rotZ": 0.0012074461,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0823529139,
        "g": 0.0823529139,
        "b": 0.0823529139
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Counter": {
        "value": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "6bbc5e"
    },
    {
      "Name": "Calculator",
      "Transform": {
        "posX": -9.00001,
        "posY": 2.657989,
        "posZ": 55.0004158,
        "rotX": 0.0430745929,
        "rotY": -9.63080456E-05,
        "rotZ": 2.58899831E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Calculator": {
        "value": "0",
        "memory": 0.0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "d6e08e"
    },
    {
      "Name": "Die_10",
      "Transform": {
        "posX": -9.003533,
        "posY": 2.61975551,
        "posZ": 40.0001564,
        "rotX": 38.69418,
        "rotY": 3.529347,
        "rotZ": 271.4899,
        "scaleX": 1.45000076,
        "scaleY": 1.45000076,
        "scaleZ": 1.45000076
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.433793634,
        "g": 0.433793634,
        "b": 0.433793634
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "5f9c50"
    },
    {
      "Name": "Die_12",
      "Transform": {
        "posX": -12.0000048,
        "posY": 2.65254068,
        "posZ": 40.0000076,
        "rotX": 333.409821,
        "rotY": 234.262054,
        "rotZ": 179.960754,
        "scaleX": 1.40000057,
        "scaleY": 1.40000057,
        "scaleZ": 1.40000057
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.433793634,
        "g": 0.433793634,
        "b": 0.433793634
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "d330c5"
    },
    {
      "Name": "Die_6_Rounded",
      "Transform": {
        "posX": -14.9999981,
        "posY": 2.54926658,
        "posZ": 40.000145,
        "rotX": 359.993317,
        "rotY": 261.102539,
        "rotZ": 269.9574,
        "scaleX": 1.30000067,
        "scaleY": 1.30000067,
        "scaleZ": 1.30000067
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.433793634,
        "g": 0.433793634,
        "b": 0.433793634
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "1a3f5b"
    },
    {
      "Name": "Die_4",
      "Transform": {
        "posX": -18.0000019,
        "posY": 2.202075,
        "posZ": 40.00068,
        "rotX": 18.5704231,
        "rotY": 154.107315,
        "rotZ": 240.065857,
        "scaleX": 1.30000114,
        "scaleY": 1.30000114,
        "scaleZ": 1.30000114
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.433793634,
        "g": 0.433793634,
        "b": 0.433793634
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "cc8802"
    },
    {
      "Name": "Die_20",
      "Transform": {
        "posX": -20.9999962,
        "posY": 2.86776233,
        "posZ": 39.9999847,
        "rotX": 349.225769,
        "rotY": 331.763519,
        "rotZ": 305.979279,
        "scaleX": 1.8500011,
        "scaleY": 1.8500011,
        "scaleZ": 1.8500011
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.106267504,
        "g": 0.106267504,
        "b": 0.106267504
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "4e59ea"
    },
    {
      "Name": "Die_20",
      "Transform": {
        "posX": -23.9999924,
        "posY": 2.78413987,
        "posZ": 40.0000343,
        "rotX": 307.392761,
        "rotY": 69.3891754,
        "rotZ": 306.066162,
        "scaleX": 1.65000081,
        "scaleY": 1.65000081,
        "scaleZ": 1.65000081
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.433793634,
        "g": 0.433793634,
        "b": 0.433793634
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "32477f"
    },
    {
      "Name": "Die_10",
      "Transform": {
        "posX": 14.9887009,
        "posY": 2.61975384,
        "posZ": 40.0053864,
        "rotX": 38.79449,
        "rotY": 136.645462,
        "rotZ": 54.7271538,
        "scaleX": 1.45000076,
        "scaleY": 1.45000076,
        "scaleZ": 1.45000076
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337936,
        "g": 0.4337936,
        "b": 0.4337936
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "b1f25a"
    },
    {
      "Name": "Die_12",
      "Transform": {
        "posX": 17.9962749,
        "posY": 2.65254,
        "posZ": 40.00098,
        "rotX": 26.5975227,
        "rotY": 41.04944,
        "rotZ": 72.0317459,
        "scaleX": 1.40000057,
        "scaleY": 1.40000057,
        "scaleZ": 1.40000057
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337936,
        "g": 0.4337936,
        "b": 0.4337936
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "7b51c7"
    },
    {
      "Name": "Die_6_Rounded",
      "Transform": {
        "posX": 11.9986982,
        "posY": 2.549261,
        "posZ": 40.0067978,
        "rotX": 359.9927,
        "rotY": 260.282654,
        "rotZ": 269.957458,
        "scaleX": 1.30000067,
        "scaleY": 1.30000067,
        "scaleZ": 1.30000067
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337936,
        "g": 0.4337936,
        "b": 0.4337936
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "cd3fb7"
    },
    {
      "Name": "Die_4",
      "Transform": {
        "posX": 3.54397273,
        "posY": 2.201649,
        "posZ": 40.5665359,
        "rotX": 18.64616,
        "rotY": 31.1299477,
        "rotZ": 240.069489,
        "scaleX": 1.30000114,
        "scaleY": 1.30000114,
        "scaleZ": 1.30000114
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337936,
        "g": 0.4337936,
        "b": 0.4337936
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "35a541"
    },
    {
      "Name": "Die_20",
      "Transform": {
        "posX": 9.002371,
        "posY": 2.86776233,
        "posZ": 40.0007172,
        "rotX": 349.225922,
        "rotY": 332.097626,
        "rotZ": 305.979584,
        "scaleX": 1.8500011,
        "scaleY": 1.8500011,
        "scaleZ": 1.8500011
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.10626746,
        "g": 0.10626746,
        "b": 0.10626746
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "9f2d65"
    },
    {
      "Name": "Die_20",
      "Transform": {
        "posX": 6.10944748,
        "posY": 2.78414154,
        "posZ": 39.99935,
        "rotX": 307.3884,
        "rotY": 75.17674,
        "rotZ": 306.068939,
        "scaleX": 1.65000081,
        "scaleY": 1.65000081,
        "scaleZ": 1.65000081
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337936,
        "g": 0.4337936,
        "b": 0.4337936
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "bdc9ce"
    },
    {
      "Name": "Counter",
      "Transform": {
        "posX": 17.9963684,
        "posY": 2.05864167,
        "posZ": 47.4810638,
        "rotX": 359.95694,
        "rotY": 178.762955,
        "rotZ": 0.000933180738,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0823529139,
        "g": 0.0823529139,
        "b": 0.0823529139
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Counter": {
        "value": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "aeabde"
    },
    {
      "Name": "Calculator",
      "Transform": {
        "posX": 17.9985981,
        "posY": 2.65799022,
        "posZ": 54.9985733,
        "rotX": 0.043076288,
        "rotY": 0.0304661058,
        "rotZ": 2.27381752E-05,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Calculator": {
        "value": "0",
        "memory": 0.0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "5771c2"
    },
    {
      "Name": "Die_12",
      "Transform": {
        "posX": 57.9920654,
        "posY": 2.108783,
        "posZ": 20.0043163,
        "rotX": 26.5313568,
        "rotY": 56.827816,
        "rotZ": 144.02446,
        "scaleX": 1.40000057,
        "scaleY": 1.40000057,
        "scaleZ": 1.40000057
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.433793575,
        "g": 0.433793575,
        "b": 0.433793575
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "662431"
    },
    {
      "Name": "Die_6_Rounded",
      "Transform": {
        "posX": 57.9790955,
        "posY": 2.00549841,
        "posZ": 16.9919243,
        "rotX": 270.034271,
        "rotY": 104.599831,
        "rotZ": 0.0,
        "scaleX": 1.30000067,
        "scaleY": 1.30000067,
        "scaleZ": 1.30000067
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.433793575,
        "g": 0.433793575,
        "b": 0.433793575
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "7ea067"
    },
    {
      "Name": "Die_20",
      "Transform": {
        "posX": 57.98315,
        "posY": 2.32399821,
        "posZ": 11.0095205,
        "rotX": 10.8192177,
        "rotY": 189.785461,
        "rotZ": 269.959747,
        "scaleX": 1.8500011,
        "scaleY": 1.8500011,
        "scaleZ": 1.8500011
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.10626743,
        "g": 0.10626743,
        "b": 0.10626743
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "7493cc"
    },
    {
      "Name": "Die_20",
      "Transform": {
        "posX": 58.0029831,
        "posY": 2.24039,
        "posZ": 13.9887486,
        "rotX": 349.171265,
        "rotY": 155.793045,
        "rotZ": 233.962723,
        "scaleX": 1.65000081,
        "scaleY": 1.65000081,
        "scaleZ": 1.65000081
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.433793575,
        "g": 0.433793575,
        "b": 0.433793575
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "12b43f"
    },
    {
      "Name": "Die_4",
      "Transform": {
        "posX": 58.2965431,
        "posY": 1.913697,
        "posZ": 7.72511,
        "rotX": 18.6050453,
        "rotY": 107.710152,
        "rotZ": 359.987183,
        "scaleX": 1.30000114,
        "scaleY": 1.30000114,
        "scaleZ": 1.30000114
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.433793575,
        "g": 0.433793575,
        "b": 0.433793575
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "3e83af"
    },
    {
      "Name": "Counter",
      "Transform": {
        "posX": 67.837,
        "posY": 2.24738383,
        "posZ": 7.89004755,
        "rotX": 359.9601,
        "rotY": 94.95619,
        "rotZ": 179.996536,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0823529139,
        "g": 0.0823529139,
        "b": 0.0823529139
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Counter": {
        "value": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "5b6906"
    },
    {
      "Name": "Calculator",
      "Transform": {
        "posX": 73.6221848,
        "posY": 2.13642383,
        "posZ": 8.932601,
        "rotX": 359.961182,
        "rotY": 75.95968,
        "rotZ": 0.009709121,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Calculator": {
        "value": "0",
        "memory": 0.0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "ab84e2"
    },
    {
      "Name": "Die_12",
      "Transform": {
        "posX": 57.99666,
        "posY": 2.23082137,
        "posZ": -17.9979782,
        "rotX": 26.5384712,
        "rotY": 41.2470779,
        "rotZ": 72.03364,
        "scaleX": 1.40000057,
        "scaleY": 1.40000057,
        "scaleZ": 1.40000057
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337936,
        "g": 0.4337936,
        "b": 0.4337936
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "41a3eb"
    },
    {
      "Name": "Die_10",
      "Transform": {
        "posX": 58.001873,
        "posY": 2.19934988,
        "posZ": -14.9900074,
        "rotX": 321.2004,
        "rotY": 223.314636,
        "rotZ": 234.478867,
        "scaleX": 1.45000076,
        "scaleY": 1.45000076,
        "scaleZ": 1.45000076
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337936,
        "g": 0.4337936,
        "b": 0.4337936
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "48ae31"
    },
    {
      "Name": "Die_6_Rounded",
      "Transform": {
        "posX": 57.99472,
        "posY": 2.12754536,
        "posZ": -2.99489856,
        "rotX": 359.975159,
        "rotY": 141.703979,
        "rotZ": 359.968536,
        "scaleX": 1.30000067,
        "scaleY": 1.30000067,
        "scaleZ": 1.30000067
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337936,
        "g": 0.4337936,
        "b": 0.4337936
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "5dcbc1"
    },
    {
      "Name": "Die_20",
      "Transform": {
        "posX": 57.9978,
        "posY": 2.44604421,
        "posZ": -5.992733,
        "rotX": 349.1633,
        "rotY": 142.5473,
        "rotZ": 161.967575,
        "scaleX": 1.8500011,
        "scaleY": 1.8500011,
        "scaleZ": 1.8500011
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.10626746,
        "g": 0.10626746,
        "b": 0.10626746
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "87974f"
    },
    {
      "Name": "Die_20",
      "Transform": {
        "posX": 57.9963531,
        "posY": 2.362422,
        "posZ": -12.0042543,
        "rotX": 349.148041,
        "rotY": 98.85171,
        "rotZ": 89.9936752,
        "scaleX": 1.65000081,
        "scaleY": 1.65000081,
        "scaleZ": 1.65000081
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337936,
        "g": 0.4337936,
        "b": 0.4337936
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "f4ecee"
    },
    {
      "Name": "Die_4",
      "Transform": {
        "posX": 57.9909172,
        "posY": 1.78035164,
        "posZ": -9.376704,
        "rotX": 18.60904,
        "rotY": 0.285873383,
        "rotZ": 240.088257,
        "scaleX": 1.30000114,
        "scaleY": 1.30000114,
        "scaleZ": 1.30000114
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337936,
        "g": 0.4337936,
        "b": 0.4337936
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "c6f554"
    },
    {
      "Name": "Counter",
      "Transform": {
        "posX": 65.4415359,
        "posY": 1.64774621,
        "posZ": -17.9789925,
        "rotX": 0.04002584,
        "rotY": 270.237579,
        "rotZ": 0.000169265666,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0823529139,
        "g": 0.0823529139,
        "b": 0.0823529139
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Counter": {
        "value": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "98c0f9"
    },
    {
      "Name": "Calculator",
      "Transform": {
        "posX": 72.9978,
        "posY": 2.258024,
        "posZ": -17.9993687,
        "rotX": 359.96,
        "rotY": 90.005394,
        "rotZ": -2.27450664E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Calculator": {
        "value": "0",
        "memory": 0.0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "85575b"
    },
    {
      "Name": "Die_12",
      "Transform": {
        "posX": -58.0004044,
        "posY": 2.6513617,
        "posZ": -7.999886,
        "rotX": 26.5393639,
        "rotY": 39.5877342,
        "rotZ": 72.03447,
        "scaleX": 1.40000057,
        "scaleY": 1.40000057,
        "scaleZ": 1.40000057
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337936,
        "g": 0.4337936,
        "b": 0.4337936
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "3d8e2a"
    },
    {
      "Name": "Die_10",
      "Transform": {
        "posX": -58.00088,
        "posY": 2.61857867,
        "posZ": -10.998641,
        "rotX": 38.7981949,
        "rotY": 136.438889,
        "rotZ": 54.65179,
        "scaleX": 1.45000076,
        "scaleY": 1.45000076,
        "scaleZ": 1.45000076
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337936,
        "g": 0.4337936,
        "b": 0.4337936
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "147e6f"
    },
    {
      "Name": "Die_6_Rounded",
      "Transform": {
        "posX": -58.00078,
        "posY": 2.54808736,
        "posZ": -13.9995928,
        "rotX": 0.0395314321,
        "rotY": 260.387817,
        "rotZ": 269.993317,
        "scaleX": 1.30000067,
        "scaleY": 1.30000067,
        "scaleZ": 1.30000067
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337936,
        "g": 0.4337936,
        "b": 0.4337936
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "670cc7"
    },
    {
      "Name": "Die_20",
      "Transform": {
        "posX": -58.000576,
        "posY": 2.86658239,
        "posZ": -16.9996986,
        "rotX": 349.206635,
        "rotY": 331.817719,
        "rotZ": 306.036041,
        "scaleX": 1.8500011,
        "scaleY": 1.8500011,
        "scaleZ": 1.8500011
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.10626746,
        "g": 0.10626746,
        "b": 0.10626746
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "8af69f"
    },
    {
      "Name": "Die_20",
      "Transform": {
        "posX": -58.00032,
        "posY": 2.78296185,
        "posZ": -19.9999714,
        "rotX": 307.3388,
        "rotY": 73.9764252,
        "rotZ": 306.01828,
        "scaleX": 1.65000081,
        "scaleY": 1.65000081,
        "scaleZ": 1.65000081
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337936,
        "g": 0.4337936,
        "b": 0.4337936
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "4a2e1e"
    },
    {
      "Name": "Die_4",
      "Transform": {
        "posX": -58.027504,
        "posY": 2.20043778,
        "posZ": -22.8778534,
        "rotX": 18.6526718,
        "rotY": 267.86795,
        "rotZ": 119.958817,
        "scaleX": 1.30000114,
        "scaleY": 1.30000114,
        "scaleZ": 1.30000114
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337936,
        "g": 0.4337936,
        "b": 0.4337936
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "407a03"
    },
    {
      "Name": "Counter",
      "Transform": {
        "posX": -65.36651,
        "posY": 2.05794239,
        "posZ": -8.019142,
        "rotX": 359.96,
        "rotY": 90.49054,
        "rotZ": -0.00034222487,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0823529139,
        "g": 0.0823529139,
        "b": 0.0823529139
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Counter": {
        "value": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "9a6423"
    },
    {
      "Name": "Calculator",
      "Transform": {
        "posX": -73.00089,
        "posY": 2.65761137,
        "posZ": -7.999952,
        "rotX": 0.04001671,
        "rotY": 269.99826,
        "rotZ": 4.38559567E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Calculator": {
        "value": "0",
        "memory": 0.0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "b46419"
    },
    {
      "Name": "Die_12",
      "Transform": {
        "posX": -58.0002975,
        "posY": 2.65178943,
        "posZ": 17.9999676,
        "rotX": 26.5373726,
        "rotY": 39.61134,
        "rotZ": 72.0371,
        "scaleX": 1.40000057,
        "scaleY": 1.40000057,
        "scaleZ": 1.40000057
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337936,
        "g": 0.4337936,
        "b": 0.4337936
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "ac1226"
    },
    {
      "Name": "Die_10",
      "Transform": {
        "posX": 57.99401,
        "posY": 2.07600045,
        "posZ": 23.0139618,
        "rotX": 38.8210144,
        "rotY": 173.047,
        "rotZ": 54.63794,
        "scaleX": 1.45000076,
        "scaleY": 1.45000076,
        "scaleZ": 1.45000076
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337936,
        "g": 0.4337936,
        "b": 0.4337936
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "0a3277"
    },
    {
      "Name": "Die_6_Rounded",
      "Transform": {
        "posX": -58.00058,
        "posY": 2.5485146,
        "posZ": 12.0015068,
        "rotX": 0.0425794,
        "rotY": 260.349274,
        "rotZ": 269.992767,
        "scaleX": 1.30000067,
        "scaleY": 1.30000067,
        "scaleZ": 1.30000067
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337936,
        "g": 0.4337936,
        "b": 0.4337936
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "3a7638"
    },
    {
      "Name": "Die_20",
      "Transform": {
        "posX": -58.00075,
        "posY": 2.86700964,
        "posZ": 15.0003233,
        "rotX": 349.20813,
        "rotY": 331.771057,
        "rotZ": 306.038818,
        "scaleX": 1.8500011,
        "scaleY": 1.8500011,
        "scaleZ": 1.8500011
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.10626746,
        "g": 0.10626746,
        "b": 0.10626746
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "f841c8"
    },
    {
      "Name": "Die_20",
      "Transform": {
        "posX": -58.00006,
        "posY": 2.78338933,
        "posZ": 5.99984932,
        "rotX": 307.335938,
        "rotY": 73.49234,
        "rotZ": 306.020264,
        "scaleX": 1.65000081,
        "scaleY": 1.65000081,
        "scaleZ": 1.65000081
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337936,
        "g": 0.4337936,
        "b": 0.4337936
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "cfe010"
    },
    {
      "Name": "Die_4",
      "Transform": {
        "posX": -57.97144,
        "posY": 2.201345,
        "posZ": 3.08845115,
        "rotX": 18.6521111,
        "rotY": 276.267883,
        "rotZ": 240.050934,
        "scaleX": 1.30000114,
        "scaleY": 1.30000114,
        "scaleZ": 1.30000114
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.4337936,
        "g": 0.4337936,
        "b": 0.4337936
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "4c81c8"
    },
    {
      "Name": "Counter",
      "Transform": {
        "posX": -65.49388,
        "posY": 2.05788088,
        "posZ": 17.9957676,
        "rotX": 359.95694,
        "rotY": 90.30091,
        "rotZ": -0.000229638492,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.0823529139,
        "g": 0.0823529139,
        "b": 0.0823529139
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Counter": {
        "value": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "7d1cfd"
    },
    {
      "Name": "Calculator",
      "Transform": {
        "posX": -73.00095,
        "posY": 2.65723753,
        "posZ": 18.0002232,
        "rotX": 0.0430746041,
        "rotY": 269.998871,
        "rotZ": 2.034383E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": false,
      "Grid": true,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "Calculator": {
        "value": "0",
        "memory": 0.0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "98db50"
    },
    {
      "Name": "Die_20",
      "Transform": {
        "posX": -57.7495079,
        "posY": 2.867199,
        "posZ": 9.154754,
        "rotX": 10.8135967,
        "rotY": 358.33786,
        "rotZ": 342.044,
        "scaleX": 1.8500011,
        "scaleY": 1.8500011,
        "scaleZ": 1.8500011
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.10626743,
        "g": 0.10626743,
        "b": 0.10626743
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "MaterialIndex": 0,
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "900ca4"
    }
  ],
  "SnapPoints": [
    {
      "Position": {
        "x": 3.15371728,
        "y": 0.9611347,
        "z": -17.011755
      }
    },
    {
      "Position": {
        "x": -24.8259258,
        "y": 0.9611347,
        "z": -17.0281563
      }
    },
    {
      "Position": {
        "x": -3.13797879,
        "y": 0.9611347,
        "z": 17.02958
      }
    },
    {
      "Position": {
        "x": 24.813839,
        "y": 0.9611347,
        "z": 17.0087967
      }
    },
    {
      "Position": {
        "x": 34.94633,
        "y": 0.9611347,
        "z": 2.499806
      }
    },
    {
      "Position": {
        "x": 3.149337,
        "y": 0.9611347,
        "z": -20.7674313
      },
      "Rotation": {
        "x": 0.0,
        "y": 180.000458,
        "z": 0.0
      }
    },
    {
      "Position": {
        "x": 3.1537106,
        "y": 0.9611347,
        "z": -24.0726261
      },
      "Rotation": {
        "x": 0.0,
        "y": 90.00002,
        "z": 0.0
      }
    },
    {
      "Position": {
        "x": -24.8369274,
        "y": 0.9611347,
        "z": -20.7620335
      },
      "Rotation": {
        "x": 0.0,
        "y": 180.000458,
        "z": 0.0
      }
    },
    {
      "Position": {
        "x": -24.82557,
        "y": 0.9611347,
        "z": -24.077467
      },
      "Rotation": {
        "x": 0.0,
        "y": 90.00002,
        "z": 0.0
      }
    },
    {
      "Position": {
        "x": -3.14614987,
        "y": 0.9611347,
        "z": 20.7760849
      },
      "Rotation": {
        "x": 0.0,
        "y": 9.198018E-05,
        "z": 0.0
      }
    },
    {
      "Position": {
        "x": -3.16899085,
        "y": 0.9611347,
        "z": 24.093008
      },
      "Rotation": {
        "x": 0.0,
        "y": 270.0001,
        "z": 0.0
      }
    },
    {
      "Position": {
        "x": 24.8060875,
        "y": 0.9611347,
        "z": 20.7580318
      },
      "Rotation": {
        "x": 0.0,
        "y": 9.198018E-05,
        "z": 0.0
      }
    },
    {
      "Position": {
        "x": 24.7956085,
        "y": 0.9611347,
        "z": 24.0806084
      },
      "Rotation": {
        "x": 0.0,
        "y": 270.0001,
        "z": 0.0
      }
    },
    {
      "Position": {
        "x": 38.6857071,
        "y": 0.9611347,
        "z": 2.46991229
      },
      "Rotation": {
        "x": 0.0,
        "y": 90.00002,
        "z": 0.0
      }
    },
    {
      "Position": {
        "x": 41.99418,
        "y": 0.9611347,
        "z": 2.49979258
      },
      "Rotation": {
        "x": 0.0,
        "y": 9.198018E-05,
        "z": 0.0
      }
    }
  ],
  "TabStates": {
    "0": {
      "title": "Rules",
      "body": "",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 0
    },
    "1": {
      "title": "White",
      "body": "",
      "color": "White",
      "visibleColor": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "id": 1
    },
    "2": {
      "title": "Brown",
      "body": "",
      "color": "Brown",
      "visibleColor": {
        "r": 0.443,
        "g": 0.231,
        "b": 0.09
      },
      "id": 2
    },
    "3": {
      "title": "Red",
      "body": "",
      "color": "Red",
      "visibleColor": {
        "r": 0.856,
        "g": 0.1,
        "b": 0.094
      },
      "id": 3
    },
    "4": {
      "title": "Orange",
      "body": "",
      "color": "Orange",
      "visibleColor": {
        "r": 0.956,
        "g": 0.392,
        "b": 0.113
      },
      "id": 4
    },
    "5": {
      "title": "Yellow",
      "body": "",
      "color": "Yellow",
      "visibleColor": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.172
      },
      "id": 5
    },
    "6": {
      "title": "Green",
      "body": "",
      "color": "Green",
      "visibleColor": {
        "r": 0.192,
        "g": 0.701,
        "b": 0.168
      },
      "id": 6
    },
    "7": {
      "title": "Blue",
      "body": "",
      "color": "Blue",
      "visibleColor": {
        "r": 0.118,
        "g": 0.53,
        "b": 1.0
      },
      "id": 7
    },
    "8": {
      "title": "Teal",
      "body": "",
      "color": "Teal",
      "visibleColor": {
        "r": 0.129,
        "g": 0.694,
        "b": 0.607
      },
      "id": 8
    },
    "9": {
      "title": "Purple",
      "body": "",
      "color": "Purple",
      "visibleColor": {
        "r": 0.627,
        "g": 0.125,
        "b": 0.941
      },
      "id": 9
    },
    "10": {
      "title": "Pink",
      "body": "",
      "color": "Pink",
      "visibleColor": {
        "r": 0.96,
        "g": 0.439,
        "b": 0.807
      },
      "id": 10
    },
    "11": {
      "title": "Black",
      "body": "",
      "color": "Black",
      "visibleColor": {
        "r": 0.25,
        "g": 0.25,
        "b": 0.25
      },
      "id": 11
    }
  }
}